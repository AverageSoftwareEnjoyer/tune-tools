{"version":3,"sources":[".yarn/__virtual__/@angular-material-virtual-66e56c4996/0/cache/@angular-material-npm-18.0.4-1901850607-1672f208e6.zip/node_modules/@angular/material/fesm2022/card.mjs",".yarn/__virtual__/@angular-cdk-virtual-d6d53491be/0/cache/@angular-cdk-npm-18.0.4-36233b50b1-4f87db90b9.zip/node_modules/@angular/cdk/fesm2022/observers/private.mjs",".yarn/__virtual__/@angular-material-virtual-66e56c4996/0/cache/@angular-material-npm-18.0.4-1901850607-1672f208e6.zip/node_modules/@angular/material/fesm2022/tabs.mjs","src/app/components-library/base-tabs-container/base-tabs-container.component.ts","src/app/components-library/base-tabs-container/base-tabs-container.component.html","src/app/api/top-items-http.service.ts","src/app/components/routes/top-items.service.ts","src/app/state/top-items-state.service.ts","src/app/components/routes/top-tracks/top-tracks.component.ts","src/app/components/routes/top-tracks/top-tracks.component.html","src/app/components/routes/top-tracks/top-tracks.routes.ts"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, Optional, Input, Directive, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Injection token that can be used to provide the default options the card module. */\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"], [\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"], [\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"], [\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"], [\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], \"*\"];\nconst _c2 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\", \"*\"];\nconst _c3 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c4 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst MAT_CARD_CONFIG = /*#__PURE__*/new InjectionToken('MAT_CARD_CONFIG');\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCard = /*#__PURE__*/(() => {\n  class MatCard {\n    constructor(config) {\n      this.appearance = config?.appearance || 'raised';\n    }\n    static {\n      this.ɵfac = function MatCard_Factory(t) {\n        return new (t || MatCard)(i0.ɵɵdirectiveInject(MAT_CARD_CONFIG, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCard,\n        selectors: [[\"mat-card\"]],\n        hostAttrs: [1, \"mat-mdc-card\", \"mdc-card\"],\n        hostVars: 4,\n        hostBindings: function MatCard_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-card-outlined\", ctx.appearance === \"outlined\")(\"mdc-card--outlined\", ctx.appearance === \"outlined\");\n          }\n        },\n        inputs: {\n          appearance: \"appearance\"\n        },\n        exportAs: [\"matCard\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatCard_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [\".mdc-card{display:flex;flex-direction:column;box-sizing:border-box}.mdc-card::after{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none;pointer-events:none}@media screen and (forced-colors: active){.mdc-card::after{border-color:CanvasText}}.mdc-card--outlined::after{border:none}.mdc-card__content{border-radius:inherit;height:100%}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__media--square::before{margin-top:100%}.mdc-card__media--16-9::before{margin-top:56.25%}.mdc-card__media-content{position:absolute;top:0;right:0;bottom:0;left:0;box-sizing:border-box}.mdc-card__primary-action{display:flex;flex-direction:column;box-sizing:border-box;position:relative;outline:none;color:inherit;text-decoration:none;cursor:pointer;overflow:hidden}.mdc-card__primary-action:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__primary-action:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mdc-card__actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mdc-card__actions--full-bleed{padding:0}.mdc-card__action-buttons,.mdc-card__action-icons{display:flex;flex-direction:row;align-items:center;box-sizing:border-box}.mdc-card__action-icons{color:rgba(0, 0, 0, 0.6);flex-grow:1;justify-content:flex-end}.mdc-card__action-buttons+.mdc-card__action-icons{margin-left:16px;margin-right:0}[dir=rtl] .mdc-card__action-buttons+.mdc-card__action-icons,.mdc-card__action-buttons+.mdc-card__action-icons[dir=rtl]{margin-left:0;margin-right:16px}.mdc-card__action{display:inline-flex;flex-direction:row;align-items:center;box-sizing:border-box;justify-content:center;cursor:pointer;user-select:none}.mdc-card__action:focus{outline:none}.mdc-card__action--button{margin-left:0;margin-right:8px;padding:0 8px}[dir=rtl] .mdc-card__action--button,.mdc-card__action--button[dir=rtl]{margin-left:8px;margin-right:0}.mdc-card__action--button:last-child{margin-left:0;margin-right:0}[dir=rtl] .mdc-card__action--button:last-child,.mdc-card__action--button:last-child[dir=rtl]{margin-left:0;margin-right:0}.mdc-card__actions--full-bleed .mdc-card__action--button{justify-content:space-between;width:100%;height:auto;max-height:none;margin:0;padding:8px 16px;text-align:left}[dir=rtl] .mdc-card__actions--full-bleed .mdc-card__action--button,.mdc-card__actions--full-bleed .mdc-card__action--button[dir=rtl]{text-align:right}.mdc-card__action--icon{margin:-6px 0;padding:12px}.mdc-card__action--icon:not(:disabled){color:rgba(0, 0, 0, 0.6)}.mat-mdc-card{border-radius:var(--mdc-elevated-card-container-shape);background-color:var(--mdc-elevated-card-container-color);border-width:0;border-style:solid;border-color:var(--mdc-elevated-card-container-color);box-shadow:var(--mdc-elevated-card-container-elevation)}.mat-mdc-card .mdc-card::after{border-radius:var(--mdc-elevated-card-container-shape)}.mat-mdc-card-outlined{border-width:var(--mdc-outlined-card-outline-width);border-style:solid;border-color:var(--mdc-outlined-card-outline-color);border-radius:var(--mdc-outlined-card-container-shape);background-color:var(--mdc-outlined-card-container-color);box-shadow:var(--mdc-outlined-card-container-elevation)}.mat-mdc-card-outlined .mdc-card::after{border-radius:var(--mdc-outlined-card-container-shape)}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font);line-height:var(--mat-card-title-text-line-height);font-size:var(--mat-card-title-text-size);letter-spacing:var(--mat-card-title-text-tracking);font-weight:var(--mat-card-title-text-weight)}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color);font-family:var(--mat-card-subtitle-text-font);line-height:var(--mat-card-subtitle-text-line-height);font-size:var(--mat-card-subtitle-text-size);letter-spacing:var(--mat-card-subtitle-text-tracking);font-weight:var(--mat-card-subtitle-text-weight)}.mat-mdc-card{position:relative}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCard;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardTitle = /*#__PURE__*/(() => {\n  class MatCardTitle {\n    static {\n      this.ɵfac = function MatCardTitle_Factory(t) {\n        return new (t || MatCardTitle)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardTitle,\n        selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-title\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardTitle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\nlet MatCardTitleGroup = /*#__PURE__*/(() => {\n  class MatCardTitleGroup {\n    static {\n      this.ɵfac = function MatCardTitleGroup_Factory(t) {\n        return new (t || MatCardTitleGroup)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCardTitleGroup,\n        selectors: [[\"mat-card-title-group\"]],\n        hostAttrs: [1, \"mat-mdc-card-title-group\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c2,\n        decls: 4,\n        vars: 0,\n        template: function MatCardTitleGroup_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c1);\n            i0.ɵɵelementStart(0, \"div\");\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵprojection(3, 2);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCardTitleGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardContent = /*#__PURE__*/(() => {\n  class MatCardContent {\n    static {\n      this.ɵfac = function MatCardContent_Factory(t) {\n        return new (t || MatCardContent)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardContent,\n        selectors: [[\"mat-card-content\"]],\n        hostAttrs: [1, \"mat-mdc-card-content\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardSubtitle = /*#__PURE__*/(() => {\n  class MatCardSubtitle {\n    static {\n      this.ɵfac = function MatCardSubtitle_Factory(t) {\n        return new (t || MatCardSubtitle)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardSubtitle,\n        selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-subtitle\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardSubtitle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardActions = /*#__PURE__*/(() => {\n  class MatCardActions {\n    constructor() {\n      // TODO(jelbourn): deprecate `align` in favor of `actionPosition` or `actionAlignment`\n      // as to not conflict with the native `align` attribute.\n      /** Position of the actions inside the card. */\n      this.align = 'start';\n    }\n    static {\n      this.ɵfac = function MatCardActions_Factory(t) {\n        return new (t || MatCardActions)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardActions,\n        selectors: [[\"mat-card-actions\"]],\n        hostAttrs: [1, \"mat-mdc-card-actions\", \"mdc-card__actions\"],\n        hostVars: 2,\n        hostBindings: function MatCardActions_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-card-actions-align-end\", ctx.align === \"end\");\n          }\n        },\n        inputs: {\n          align: \"align\"\n        },\n        exportAs: [\"matCardActions\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardActions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardHeader = /*#__PURE__*/(() => {\n  class MatCardHeader {\n    static {\n      this.ɵfac = function MatCardHeader_Factory(t) {\n        return new (t || MatCardHeader)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatCardHeader,\n        selectors: [[\"mat-card-header\"]],\n        hostAttrs: [1, \"mat-mdc-card-header\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c4,\n        decls: 4,\n        vars: 0,\n        consts: [[1, \"mat-mdc-card-header-text\"]],\n        template: function MatCardHeader_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c3);\n            i0.ɵɵprojection(0);\n            i0.ɵɵelementStart(1, \"div\", 0);\n            i0.ɵɵprojection(2, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵprojection(3, 2);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatCardHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardFooter = /*#__PURE__*/(() => {\n  class MatCardFooter {\n    static {\n      this.ɵfac = function MatCardFooter_Factory(t) {\n        return new (t || MatCardFooter)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardFooter,\n        selectors: [[\"mat-card-footer\"]],\n        hostAttrs: [1, \"mat-mdc-card-footer\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardFooter;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n// TODO(jelbourn): support `.mdc-card__media-content`.\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardImage = /*#__PURE__*/(() => {\n  class MatCardImage {\n    static {\n      this.ɵfac = function MatCardImage_Factory(t) {\n        return new (t || MatCardImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardImage,\n        selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but small. */\nlet MatCardSmImage = /*#__PURE__*/(() => {\n  class MatCardSmImage {\n    static {\n      this.ɵfac = function MatCardSmImage_Factory(t) {\n        return new (t || MatCardSmImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardSmImage,\n        selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-sm-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardSmImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but medium. */\nlet MatCardMdImage = /*#__PURE__*/(() => {\n  class MatCardMdImage {\n    static {\n      this.ɵfac = function MatCardMdImage_Factory(t) {\n        return new (t || MatCardMdImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardMdImage,\n        selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-md-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardMdImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but large. */\nlet MatCardLgImage = /*#__PURE__*/(() => {\n  class MatCardLgImage {\n    static {\n      this.ɵfac = function MatCardLgImage_Factory(t) {\n        return new (t || MatCardLgImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardLgImage,\n        selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-lg-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardLgImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Same as `MatCardImage`, but extra-large. */\nlet MatCardXlImage = /*#__PURE__*/(() => {\n  class MatCardXlImage {\n    static {\n      this.ɵfac = function MatCardXlImage_Factory(t) {\n        return new (t || MatCardXlImage)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardXlImage,\n        selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-xl-image\", \"mdc-card__media\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardXlImage;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\nlet MatCardAvatar = /*#__PURE__*/(() => {\n  class MatCardAvatar {\n    static {\n      this.ɵfac = function MatCardAvatar_Factory(t) {\n        return new (t || MatCardAvatar)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCardAvatar,\n        selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-card-avatar\"],\n        standalone: true\n      });\n    }\n  }\n  return MatCardAvatar;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst CARD_DIRECTIVES = [MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage];\nlet MatCardModule = /*#__PURE__*/(() => {\n  class MatCardModule {\n    static {\n      this.ɵfac = function MatCardModule_Factory(t) {\n        return new (t || MatCardModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatCardModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, CommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatCardModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CARD_CONFIG, MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n","import * as i0 from '@angular/core';\nimport { inject, NgZone, Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, shareReplay, takeUntil } from 'rxjs/operators';\n\n/**\n * Handler that logs \"ResizeObserver loop limit exceeded\" errors.\n * These errors are not shown in the Chrome console, so we log them to ensure developers are aware.\n * @param e The error\n */\nconst loopLimitExceededErrorHandler = e => {\n  if (e instanceof ErrorEvent && e.message === 'ResizeObserver loop limit exceeded') {\n    console.error(`${e.message}. This could indicate a performance issue with your app. See https://github.com/WICG/resize-observer/blob/master/explainer.md#error-handling`);\n  }\n};\n/**\n * A shared ResizeObserver to be used for a particular box type (content-box, border-box, or\n * device-pixel-content-box)\n */\nclass SingleBoxSharedResizeObserver {\n  constructor( /** The box type to observe for resizes. */\n  _box) {\n    this._box = _box;\n    /** Stream that emits when the shared observer is destroyed. */\n    this._destroyed = new Subject();\n    /** Stream of all events from the ResizeObserver. */\n    this._resizeSubject = new Subject();\n    /** A map of elements to streams of their resize events. */\n    this._elementObservables = new Map();\n    if (typeof ResizeObserver !== 'undefined') {\n      this._resizeObserver = new ResizeObserver(entries => this._resizeSubject.next(entries));\n    }\n  }\n  /**\n   * Gets a stream of resize events for the given element.\n   * @param target The element to observe.\n   * @return The stream of resize events for the element.\n   */\n  observe(target) {\n    if (!this._elementObservables.has(target)) {\n      this._elementObservables.set(target, new Observable(observer => {\n        const subscription = this._resizeSubject.subscribe(observer);\n        this._resizeObserver?.observe(target, {\n          box: this._box\n        });\n        return () => {\n          this._resizeObserver?.unobserve(target);\n          subscription.unsubscribe();\n          this._elementObservables.delete(target);\n        };\n      }).pipe(filter(entries => entries.some(entry => entry.target === target)),\n      // Share a replay of the last event so that subsequent calls to observe the same element\n      // receive initial sizing info like the first one. Also enable ref counting so the\n      // element will be automatically unobserved when there are no more subscriptions.\n      shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }), takeUntil(this._destroyed)));\n    }\n    return this._elementObservables.get(target);\n  }\n  /** Destroys this instance. */\n  destroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._resizeSubject.complete();\n    this._elementObservables.clear();\n  }\n}\n/**\n * Allows observing resize events on multiple elements using a shared set of ResizeObserver.\n * Sharing a ResizeObserver instance is recommended for better performance (see\n * https://github.com/WICG/resize-observer/issues/59).\n *\n * Rather than share a single `ResizeObserver`, this class creates one `ResizeObserver` per type\n * of observed box ('content-box', 'border-box', and 'device-pixel-content-box'). This avoids\n * later calls to `observe` with a different box type from influencing the events dispatched to\n * earlier calls.\n */\nlet SharedResizeObserver = /*#__PURE__*/(() => {\n  class SharedResizeObserver {\n    constructor() {\n      /** Map of box type to shared resize observer. */\n      this._observers = new Map();\n      /** The Angular zone. */\n      this._ngZone = inject(NgZone);\n      if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        this._ngZone.runOutsideAngular(() => {\n          window.addEventListener('error', loopLimitExceededErrorHandler);\n        });\n      }\n    }\n    ngOnDestroy() {\n      for (const [, observer] of this._observers) {\n        observer.destroy();\n      }\n      this._observers.clear();\n      if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        window.removeEventListener('error', loopLimitExceededErrorHandler);\n      }\n    }\n    /**\n     * Gets a stream of resize events for the given target element and box type.\n     * @param target The element to observe for resizes.\n     * @param options Options to pass to the `ResizeObserver`\n     * @return The stream of resize events for the element.\n     */\n    observe(target, options) {\n      const box = options?.box || 'content-box';\n      if (!this._observers.has(box)) {\n        this._observers.set(box, new SingleBoxSharedResizeObserver(box));\n      }\n      return this._observers.get(box).observe(target);\n    }\n    static {\n      this.ɵfac = function SharedResizeObserver_Factory(t) {\n        return new (t || SharedResizeObserver)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: SharedResizeObserver,\n        factory: SharedResizeObserver.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return SharedResizeObserver;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SharedResizeObserver };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, booleanAttribute, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChild, ViewChild, inject, ElementRef, EventEmitter, Injector, afterNextRender, ANIMATION_MODULE_TYPE, numberAttribute, Output, ContentChildren, forwardRef, QueryList, Attribute, NgModule } from '@angular/core';\nimport { MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet } from '@angular/cdk/portal';\nimport { Subject, fromEvent, of, merge, EMPTY, Observable, timer, Subscription, BehaviorSubject } from 'rxjs';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport * as i2 from '@angular/cdk/bidi';\nimport * as i4 from '@angular/cdk/a11y';\nimport { FocusKeyManager, CdkMonitorFocus } from '@angular/cdk/a11y';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { takeUntil, debounceTime, startWith, switchMap, skip, filter, distinctUntilChanged } from 'rxjs/operators';\nimport { CdkObserveContent } from '@angular/cdk/observers';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst _c0 = [\"*\"];\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c1 = [\"tabListContainer\"];\nconst _c2 = [\"tabList\"];\nconst _c3 = [\"tabListInner\"];\nconst _c4 = [\"nextPaginator\"];\nconst _c5 = [\"previousPaginator\"];\nconst _c6 = a0 => ({\n  animationDuration: a0\n});\nconst _c7 = (a0, a1) => ({\n  value: a0,\n  params: a1\n});\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\nconst _c8 = [\"tabBodyWrapper\"];\nconst _c9 = [\"tabHeader\"];\nfunction MatTabGroup_For_3_Conditional_6_ng_template_0_Template(rf, ctx) {}\nfunction MatTabGroup_For_3_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatTabGroup_For_3_Conditional_6_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\nfunction MatTabGroup_For_3_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\nfunction MatTabGroup_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7, 2);\n    i0.ɵɵlistener(\"click\", function MatTabGroup_For_3_Template_div_click_0_listener() {\n      const ctx_r2 = i0.ɵɵrestoreView(_r2);\n      const tab_r4 = ctx_r2.$implicit;\n      const ɵ$index_3_r5 = ctx_r2.$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      const tabHeader_r7 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r5._handleClick(tab_r4, tabHeader_r7, ɵ$index_3_r5));\n    })(\"cdkFocusChange\", function MatTabGroup_For_3_Template_div_cdkFocusChange_0_listener($event) {\n      const ɵ$index_3_r5 = i0.ɵɵrestoreView(_r2).$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._tabFocusChanged($event, ɵ$index_3_r5));\n    });\n    i0.ɵɵelement(2, \"span\", 8)(3, \"div\", 9);\n    i0.ɵɵelementStart(4, \"span\", 10)(5, \"span\", 11);\n    i0.ɵɵtemplate(6, MatTabGroup_For_3_Conditional_6_Template, 1, 1, null, 12)(7, MatTabGroup_For_3_Conditional_7_Template, 1, 1);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const ɵ$index_3_r5 = ctx.$index;\n    const tabNode_r8 = i0.ɵɵreference(1);\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r4.labelClass);\n    i0.ɵɵclassProp(\"mdc-tab--active\", ctx_r5.selectedIndex === ɵ$index_3_r5);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabLabelId(ɵ$index_3_r5))(\"disabled\", tab_r4.disabled)(\"fitInkBarToContent\", ctx_r5.fitInkBarToContent);\n    i0.ɵɵattribute(\"tabIndex\", ctx_r5._getTabIndex(ɵ$index_3_r5))(\"aria-posinset\", ɵ$index_3_r5 + 1)(\"aria-setsize\", ctx_r5._tabs.length)(\"aria-controls\", ctx_r5._getTabContentId(ɵ$index_3_r5))(\"aria-selected\", ctx_r5.selectedIndex === ɵ$index_3_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matRippleTrigger\", tabNode_r8)(\"matRippleDisabled\", tab_r4.disabled || ctx_r5.disableRipple);\n    i0.ɵɵadvance(3);\n    i0.ɵɵconditional(tab_r4.templateLabel ? 6 : 7);\n  }\n}\nfunction MatTabGroup_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatTabGroup_For_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-tab-body\", 13);\n    i0.ɵɵlistener(\"_onCentered\", function MatTabGroup_For_8_Template_mat_tab_body__onCentered_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._removeTabBodyWrapperHeight());\n    })(\"_onCentering\", function MatTabGroup_For_8_Template_mat_tab_body__onCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._setTabBodyWrapperHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r10 = ctx.$implicit;\n    const ɵ$index_23_r11 = ctx.$index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r10.bodyClass);\n    i0.ɵɵclassProp(\"mat-mdc-tab-body-active\", ctx_r5.selectedIndex === ɵ$index_23_r11);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabContentId(ɵ$index_23_r11))(\"content\", tab_r10.content)(\"position\", tab_r10.position)(\"origin\", tab_r10.origin)(\"animationDuration\", ctx_r5.animationDuration)(\"preserveContent\", ctx_r5.preserveContent);\n    i0.ɵɵattribute(\"tabindex\", ctx_r5.contentTabIndex != null && ctx_r5.selectedIndex === ɵ$index_23_r11 ? ctx_r5.contentTabIndex : null)(\"aria-labelledby\", ctx_r5._getTabLabelId(ɵ$index_23_r11))(\"aria-hidden\", ctx_r5.selectedIndex !== ɵ$index_23_r11);\n  }\n}\nconst _c10 = [\"mat-tab-nav-bar\", \"\"];\nconst _c11 = [\"mat-tab-link\", \"\"];\nconst MAT_TAB_CONTENT = /*#__PURE__*/new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nlet MatTabContent = /*#__PURE__*/(() => {\n  class MatTabContent {\n    constructor( /** Content for the tab. */template) {\n      this.template = template;\n    }\n    static {\n      this.ɵfac = function MatTabContent_Factory(t) {\n        return new (t || MatTabContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatTabContent,\n        selectors: [[\"\", \"matTabContent\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_TAB_CONTENT,\n          useExisting: MatTabContent\n        }])]\n      });\n    }\n  }\n  return MatTabContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = /*#__PURE__*/new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = /*#__PURE__*/new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nlet MatTabLabel = /*#__PURE__*/(() => {\n  class MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n      super(templateRef, viewContainerRef);\n      this._closestTab = _closestTab;\n    }\n    static {\n      this.ɵfac = function MatTabLabel_Factory(t) {\n        return new (t || MatTabLabel)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatTabLabel,\n        selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_TAB_LABEL,\n          useExisting: MatTabLabel\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatTabLabel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = /*#__PURE__*/new InjectionToken('MAT_TAB_GROUP');\nlet MatTab = /*#__PURE__*/(() => {\n  class MatTab {\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n      return this._templateLabel;\n    }\n    set templateLabel(value) {\n      this._setTemplateLabelInput(value);\n    }\n    /** @docs-private */\n    get content() {\n      return this._contentPortal;\n    }\n    constructor(_viewContainerRef, _closestTabGroup) {\n      this._viewContainerRef = _viewContainerRef;\n      this._closestTabGroup = _closestTabGroup;\n      /** whether the tab is disabled. */\n      this.disabled = false;\n      /**\n       * Template provided in the tab content that will be used if present, used to enable lazy-loading\n       */\n      this._explicitContent = undefined;\n      /** Plain text label for the tab, used when there is no template label. */\n      this.textLabel = '';\n      /** Portal that will be the hosted content of the tab */\n      this._contentPortal = null;\n      /** Emits whenever the internal state of the tab changes. */\n      this._stateChanges = new Subject();\n      /**\n       * The relatively indexed position where 0 represents the center, negative is left, and positive\n       * represents the right.\n       */\n      this.position = null;\n      /**\n       * The initial relatively index origin of the tab if it was created and selected after there\n       * was already a selected tab. Provides context of what position the tab should originate from.\n       */\n      this.origin = null;\n      /**\n       * Whether the tab is currently active.\n       */\n      this.isActive = false;\n    }\n    ngOnChanges(changes) {\n      if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n        this._stateChanges.next();\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    ngOnInit() {\n      this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n      // Only update the label if the query managed to find one. This works around an issue where a\n      // user may have manually set `templateLabel` during creation mode, which would then get\n      // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n      // tab matches the current one so that we don't pick up labels from nested tabs.\n      if (value && value._closestTab === this) {\n        this._templateLabel = value;\n      }\n    }\n    static {\n      this.ɵfac = function MatTab_Factory(t) {\n        return new (t || MatTab)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTab,\n        selectors: [[\"mat-tab\"]],\n        contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatTabLabel, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatTabContent, 7, TemplateRef);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n          }\n        },\n        viewQuery: function MatTab_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(TemplateRef, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n          }\n        },\n        hostAttrs: [\"hidden\", \"\"],\n        inputs: {\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          textLabel: [0, \"label\", \"textLabel\"],\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n          labelClass: \"labelClass\",\n          bodyClass: \"bodyClass\"\n        },\n        exportAs: [\"matTab\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_TAB,\n          useExisting: MatTab\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatTab_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return MatTab;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Class that is applied when a tab indicator is active. */\nconst ACTIVE_CLASS = 'mdc-tab-indicator--active';\n/** Class that is applied when the tab indicator should not transition. */\nconst NO_TRANSITION_CLASS = 'mdc-tab-indicator--no-transition';\n/**\n * Abstraction around the MDC tab indicator that acts as the tab header's ink bar.\n * @docs-private\n */\nclass MatInkBar {\n  constructor(_items) {\n    this._items = _items;\n  }\n  /** Hides the ink bar. */\n  hide() {\n    this._items.forEach(item => item.deactivateInkBar());\n  }\n  /** Aligns the ink bar to a DOM node. */\n  alignToElement(element) {\n    const correspondingItem = this._items.find(item => item.elementRef.nativeElement === element);\n    const currentItem = this._currentItem;\n    if (correspondingItem === currentItem) {\n      return;\n    }\n    currentItem?.deactivateInkBar();\n    if (correspondingItem) {\n      const domRect = currentItem?.elementRef.nativeElement.getBoundingClientRect?.();\n      // The ink bar won't animate unless we give it the `DOMRect` of the previous item.\n      correspondingItem.activateInkBar(domRect);\n      this._currentItem = correspondingItem;\n    }\n  }\n}\nlet InkBarItem = /*#__PURE__*/(() => {\n  class InkBarItem {\n    constructor() {\n      this._elementRef = inject(ElementRef);\n      this._fitToContent = false;\n    }\n    /** Whether the ink bar should fit to the entire tab or just its content. */\n    get fitInkBarToContent() {\n      return this._fitToContent;\n    }\n    set fitInkBarToContent(newValue) {\n      if (this._fitToContent !== newValue) {\n        this._fitToContent = newValue;\n        if (this._inkBarElement) {\n          this._appendInkBarElement();\n        }\n      }\n    }\n    /** Aligns the ink bar to the current item. */\n    activateInkBar(previousIndicatorClientRect) {\n      const element = this._elementRef.nativeElement;\n      // Early exit if no indicator is present to handle cases where an indicator\n      // may be activated without a prior indicator state\n      if (!previousIndicatorClientRect || !element.getBoundingClientRect || !this._inkBarContentElement) {\n        element.classList.add(ACTIVE_CLASS);\n        return;\n      }\n      // This animation uses the FLIP approach. You can read more about it at the link below:\n      // https://aerotwist.com/blog/flip-your-animations/\n      // Calculate the dimensions based on the dimensions of the previous indicator\n      const currentClientRect = element.getBoundingClientRect();\n      const widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n      const xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n      element.classList.add(NO_TRANSITION_CLASS);\n      this._inkBarContentElement.style.setProperty('transform', `translateX(${xPosition}px) scaleX(${widthDelta})`);\n      // Force repaint before updating classes and transform to ensure the transform properly takes effect\n      element.getBoundingClientRect();\n      element.classList.remove(NO_TRANSITION_CLASS);\n      element.classList.add(ACTIVE_CLASS);\n      this._inkBarContentElement.style.setProperty('transform', '');\n    }\n    /** Removes the ink bar from the current item. */\n    deactivateInkBar() {\n      this._elementRef.nativeElement.classList.remove(ACTIVE_CLASS);\n    }\n    /** Initializes the foundation. */\n    ngOnInit() {\n      this._createInkBarElement();\n    }\n    /** Destroys the foundation. */\n    ngOnDestroy() {\n      this._inkBarElement?.remove();\n      this._inkBarElement = this._inkBarContentElement = null;\n    }\n    /** Creates and appends the ink bar element. */\n    _createInkBarElement() {\n      const documentNode = this._elementRef.nativeElement.ownerDocument || document;\n      const inkBarElement = this._inkBarElement = documentNode.createElement('span');\n      const inkBarContentElement = this._inkBarContentElement = documentNode.createElement('span');\n      inkBarElement.className = 'mdc-tab-indicator';\n      inkBarContentElement.className = 'mdc-tab-indicator__content mdc-tab-indicator__content--underline';\n      inkBarElement.appendChild(this._inkBarContentElement);\n      this._appendInkBarElement();\n    }\n    /**\n     * Appends the ink bar to the tab host element or content, depending on whether\n     * the ink bar should fit to content.\n     */\n    _appendInkBarElement() {\n      if (!this._inkBarElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Ink bar element has not been created and cannot be appended');\n      }\n      const parentElement = this._fitToContent ? this._elementRef.nativeElement.querySelector('.mdc-tab__content') : this._elementRef.nativeElement;\n      if (!parentElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Missing element to host the ink bar');\n      }\n      parentElement.appendChild(this._inkBarElement);\n    }\n    static {\n      this.ɵfac = function InkBarItem_Factory(t) {\n        return new (t || InkBarItem)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: InkBarItem,\n        inputs: {\n          fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute]\n        },\n        features: [i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return InkBarItem;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n  return method;\n}\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = /*#__PURE__*/new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nlet MatTabLabelWrapper = /*#__PURE__*/(() => {\n  class MatTabLabelWrapper extends InkBarItem {\n    constructor(elementRef) {\n      super();\n      this.elementRef = elementRef;\n      /** Whether the tab is disabled. */\n      this.disabled = false;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n      this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n      return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n      return this.elementRef.nativeElement.offsetWidth;\n    }\n    static {\n      this.ɵfac = function MatTabLabelWrapper_Factory(t) {\n        return new (t || MatTabLabelWrapper)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatTabLabelWrapper,\n        selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n        hostVars: 3,\n        hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n            i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled);\n          }\n        },\n        inputs: {\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatTabLabelWrapper;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nlet MatPaginatedTabHeader = /*#__PURE__*/(() => {\n  class MatPaginatedTabHeader {\n    /** The index of the active tab. */\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n    set selectedIndex(v) {\n      const value = isNaN(v) ? 0 : v;\n      if (this._selectedIndex != value) {\n        this._selectedIndexChanged = true;\n        this._selectedIndex = value;\n        if (this._keyManager) {\n          this._keyManager.updateActiveItem(value);\n        }\n      }\n    }\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._viewportRuler = _viewportRuler;\n      this._dir = _dir;\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      this._animationMode = _animationMode;\n      /** The distance in pixels that the tab labels should be translated to the left. */\n      this._scrollDistance = 0;\n      /** Whether the header should scroll to the selected index after the view has been checked. */\n      this._selectedIndexChanged = false;\n      /** Emits when the component is destroyed. */\n      this._destroyed = new Subject();\n      /** Whether the controls for pagination should be displayed */\n      this._showPaginationControls = false;\n      /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n      this._disableScrollAfter = true;\n      /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n      this._disableScrollBefore = true;\n      /** Stream that will stop the automated scrolling. */\n      this._stopScrolling = new Subject();\n      /**\n       * Whether pagination should be disabled. This can be used to avoid unnecessary\n       * layout recalculations if it's known that pagination won't be required.\n       */\n      this.disablePagination = false;\n      this._selectedIndex = 0;\n      /** Event emitted when the option is selected. */\n      this.selectFocusedIndex = new EventEmitter();\n      /** Event emitted when a label is focused. */\n      this.indexFocused = new EventEmitter();\n      this._sharedResizeObserver = inject(SharedResizeObserver);\n      this._injector = inject(Injector);\n      // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n      _ngZone.runOutsideAngular(() => {\n        fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._destroyed)).subscribe(() => {\n          this._stopInterval();\n        });\n      });\n    }\n    ngAfterViewInit() {\n      // We need to handle these events manually, because we want to bind passive event listeners.\n      fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._handlePaginatorPress('before');\n      });\n      fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._handlePaginatorPress('after');\n      });\n    }\n    ngAfterContentInit() {\n      const dirChange = this._dir ? this._dir.change : of('ltr');\n      // We need to debounce resize events because the alignment logic is expensive.\n      // If someone animates the width of tabs, we don't want to realign on every animation frame.\n      // Once we haven't seen any more resize events in the last 32ms (~2 animaion frames) we can\n      // re-align.\n      const resize = this._sharedResizeObserver.observe(this._elementRef.nativeElement).pipe(debounceTime(32), takeUntil(this._destroyed));\n      // Note: We do not actually need to watch these events for proper functioning of the tabs,\n      // the resize events above should capture any viewport resize that we care about. However,\n      // removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n      const viewportResize = this._viewportRuler.change(150).pipe(takeUntil(this._destroyed));\n      const realign = () => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n      };\n      this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap()\n      // Allow focus to land on disabled tabs, as per https://w3c.github.io/aria-practices/#kbd_disabled_controls\n      .skipPredicate(() => false);\n      this._keyManager.updateActiveItem(this._selectedIndex);\n      // Note: We do not need to realign after the first render for proper functioning of the tabs\n      // the resize events above should fire when we first start observing the element. However,\n      // removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n      afterNextRender(realign, {\n        injector: this._injector\n      });\n      // On dir change or resize, realign the ink bar and update the orientation of\n      // the key manager if the direction has changed.\n      merge(dirChange, viewportResize, resize, this._items.changes, this._itemsResized()).pipe(takeUntil(this._destroyed)).subscribe(() => {\n        // We need to defer this to give the browser some time to recalculate\n        // the element dimensions. The call has to be wrapped in `NgZone.run`,\n        // because the viewport change handler runs outside of Angular.\n        this._ngZone.run(() => {\n          Promise.resolve().then(() => {\n            // Clamp the scroll distance, because it can change with the number of tabs.\n            this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n            realign();\n          });\n        });\n        this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n      });\n      // If there is a change in the focus key manager we need to emit the `indexFocused`\n      // event in order to provide a public event that notifies about focus changes. Also we realign\n      // the tabs container by scrolling the new focused tab into the visible section.\n      this._keyManager.change.subscribe(newFocusIndex => {\n        this.indexFocused.emit(newFocusIndex);\n        this._setTabFocus(newFocusIndex);\n      });\n    }\n    /** Sends any changes that could affect the layout of the items. */\n    _itemsResized() {\n      if (typeof ResizeObserver !== 'function') {\n        return EMPTY;\n      }\n      return this._items.changes.pipe(startWith(this._items), switchMap(tabItems => new Observable(observer => this._ngZone.runOutsideAngular(() => {\n        const resizeObserver = new ResizeObserver(entries => observer.next(entries));\n        tabItems.forEach(item => resizeObserver.observe(item.elementRef.nativeElement));\n        return () => {\n          resizeObserver.disconnect();\n        };\n      }))),\n      // Skip the first emit since the resize observer emits when an item\n      // is observed for new items when the tab is already inserted\n      skip(1),\n      // Skip emissions where all the elements are invisible since we don't want\n      // the header to try and re-render with invalid measurements. See #25574.\n      filter(entries => entries.some(e => e.contentRect.width > 0 && e.contentRect.height > 0)));\n    }\n    ngAfterContentChecked() {\n      // If the number of tab labels have changed, check if scrolling should be enabled\n      if (this._tabLabelCount != this._items.length) {\n        this.updatePagination();\n        this._tabLabelCount = this._items.length;\n        this._changeDetectorRef.markForCheck();\n      }\n      // If the selected index has changed, scroll to the label and check if the scrolling controls\n      // should be disabled.\n      if (this._selectedIndexChanged) {\n        this._scrollToLabel(this._selectedIndex);\n        this._checkScrollingControls();\n        this._alignInkBarToSelectedTab();\n        this._selectedIndexChanged = false;\n        this._changeDetectorRef.markForCheck();\n      }\n      // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n      // then translate the header to reflect this.\n      if (this._scrollDistanceChanged) {\n        this._updateTabScrollPosition();\n        this._scrollDistanceChanged = false;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    ngOnDestroy() {\n      this._keyManager?.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n      // We don't handle any key bindings with a modifier key.\n      if (hasModifierKey(event)) {\n        return;\n      }\n      switch (event.keyCode) {\n        case ENTER:\n        case SPACE:\n          if (this.focusIndex !== this.selectedIndex) {\n            const item = this._items.get(this.focusIndex);\n            if (item && !item.disabled) {\n              this.selectFocusedIndex.emit(this.focusIndex);\n              this._itemSelected(event);\n            }\n          }\n          break;\n        default:\n          this._keyManager.onKeydown(event);\n      }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n      const textContent = this._elementRef.nativeElement.textContent;\n      // We need to diff the text content of the header, because the MutationObserver callback\n      // will fire even if the text content didn't change which is inefficient and is prone\n      // to infinite loops if a poorly constructed expression is passed in (see #14249).\n      if (textContent !== this._currentTextContent) {\n        this._currentTextContent = textContent || '';\n        // The content observer runs outside the `NgZone` by default, which\n        // means that we need to bring the callback back in ourselves.\n        this._ngZone.run(() => {\n          this.updatePagination();\n          this._alignInkBarToSelectedTab();\n          this._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n      this._checkPaginationEnabled();\n      this._checkScrollingControls();\n      this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n      return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n      if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n        return;\n      }\n      this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n      return this._items ? !!this._items.toArray()[index] : true;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n      if (this._showPaginationControls) {\n        this._scrollToLabel(tabIndex);\n      }\n      if (this._items && this._items.length) {\n        this._items.toArray()[tabIndex].focus();\n        // Do not let the browser manage scrolling to focus the element, this will be handled\n        // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n        // should be the full width minus the offset width.\n        const containerEl = this._tabListContainer.nativeElement;\n        const dir = this._getLayoutDirection();\n        if (dir == 'ltr') {\n          containerEl.scrollLeft = 0;\n        } else {\n          containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n        }\n      }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n      if (this.disablePagination) {\n        return;\n      }\n      const scrollDistance = this.scrollDistance;\n      const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n      // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n      // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n      // and ripples will exceed the boundaries of the visible tab bar.\n      // See: https://github.com/angular/components/issues/10276\n      // We round the `transform` here, because transforms with sub-pixel precision cause some\n      // browsers to blur the content of the element.\n      this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n      // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n      // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n      // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n      // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n      if (this._platform.TRIDENT || this._platform.EDGE) {\n        this._tabListContainer.nativeElement.scrollLeft = 0;\n      }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n      return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n      this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      // Move the scroll distance one-third the length of the tab list's viewport.\n      const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n      return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n      this._stopInterval();\n      this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n      if (this.disablePagination) {\n        return;\n      }\n      const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n      if (!selectedLabel) {\n        return;\n      }\n      // The view length is the visible width of the tab labels.\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      const {\n        offsetLeft,\n        offsetWidth\n      } = selectedLabel.elementRef.nativeElement;\n      let labelBeforePos, labelAfterPos;\n      if (this._getLayoutDirection() == 'ltr') {\n        labelBeforePos = offsetLeft;\n        labelAfterPos = labelBeforePos + offsetWidth;\n      } else {\n        labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n        labelBeforePos = labelAfterPos - offsetWidth;\n      }\n      const beforeVisiblePos = this.scrollDistance;\n      const afterVisiblePos = this.scrollDistance + viewLength;\n      if (labelBeforePos < beforeVisiblePos) {\n        // Scroll header to move label to the before direction\n        this.scrollDistance -= beforeVisiblePos - labelBeforePos;\n      } else if (labelAfterPos > afterVisiblePos) {\n        // Scroll header to move label to the after direction\n        this.scrollDistance += Math.min(labelAfterPos - afterVisiblePos, labelBeforePos - beforeVisiblePos);\n      }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n      if (this.disablePagination) {\n        this._showPaginationControls = false;\n      } else {\n        const scrollWidth = this._tabListInner.nativeElement.scrollWidth;\n        const containerWidth = this._elementRef.nativeElement.offsetWidth;\n        // Usually checking that the scroll width is greater than the container width should be\n        // enough, but on Safari at specific widths the browser ends up rounding up when there's\n        // no pagination and rounding down once the pagination is added. This can throw the component\n        // into an infinite loop where the pagination shows up and disappears constantly. We work\n        // around it by adding a threshold to the calculation. From manual testing the threshold\n        // can be lowered to 2px and still resolve the issue, but we set a higher one to be safe.\n        // This shouldn't cause any content to be clipped, because tabs have a 24px horizontal\n        // padding. See b/316395154 for more information.\n        const isEnabled = scrollWidth - containerWidth >= 5;\n        if (!isEnabled) {\n          this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n          this._showPaginationControls = isEnabled;\n          this._changeDetectorRef.markForCheck();\n        }\n      }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n      if (this.disablePagination) {\n        this._disableScrollAfter = this._disableScrollBefore = true;\n      } else {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n      const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n      const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n      const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n      if (selectedLabelWrapper) {\n        this._inkBar.alignToElement(selectedLabelWrapper);\n      } else {\n        this._inkBar.hide();\n      }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n      this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n      // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n      // null check the `button`, but we do it so we don't break tests that use fake events.\n      if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n        return;\n      }\n      // Avoid overlapping timers.\n      this._stopInterval();\n      // Start a timer after the delay and keep firing based on the interval.\n      timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n        const {\n          maxScrollDistance,\n          distance\n        } = this._scrollHeader(direction);\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n      if (this.disablePagination) {\n        return {\n          maxScrollDistance: 0,\n          distance: 0\n        };\n      }\n      const maxScrollDistance = this._getMaxScrollDistance();\n      this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n      // Mark that the scroll distance has changed so that after the view is checked, the CSS\n      // transformation can move the header.\n      this._scrollDistanceChanged = true;\n      this._checkScrollingControls();\n      return {\n        maxScrollDistance,\n        distance: this._scrollDistance\n      };\n    }\n    static {\n      this.ɵfac = function MatPaginatedTabHeader_Factory(t) {\n        return new (t || MatPaginatedTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatPaginatedTabHeader,\n        inputs: {\n          disablePagination: [2, \"disablePagination\", \"disablePagination\", booleanAttribute],\n          selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute]\n        },\n        outputs: {\n          selectFocusedIndex: \"selectFocusedIndex\",\n          indexFocused: \"indexFocused\"\n        },\n        features: [i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return MatPaginatedTabHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nlet MatTabHeader = /*#__PURE__*/(() => {\n  class MatTabHeader extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n      super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n      /** Whether the ripple effect is disabled or not. */\n      this.disableRipple = false;\n    }\n    ngAfterContentInit() {\n      this._inkBar = new MatInkBar(this._items);\n      super.ngAfterContentInit();\n    }\n    _itemSelected(event) {\n      event.preventDefault();\n    }\n    static {\n      this.ɵfac = function MatTabHeader_Factory(t) {\n        return new (t || MatTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTabHeader,\n        selectors: [[\"mat-tab-header\"]],\n        contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n          }\n        },\n        viewQuery: function MatTabHeader_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c1, 7);\n            i0.ɵɵviewQuery(_c2, 7);\n            i0.ɵɵviewQuery(_c3, 7);\n            i0.ɵɵviewQuery(_c4, 5);\n            i0.ɵɵviewQuery(_c5, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-tab-header\"],\n        hostVars: 4,\n        hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n          }\n        },\n        inputs: {\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 13,\n        vars: 10,\n        consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\", \"disabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-label-container\", 3, \"keydown\"], [\"role\", \"tablist\", 1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-labels\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\", \"disabled\"]],\n        template: function MatTabHeader_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"button\", 5, 0);\n            i0.ɵɵlistener(\"click\", function MatTabHeader_Template_button_click_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n            })(\"mousedown\", function MatTabHeader_Template_button_mousedown_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n            })(\"touchend\", function MatTabHeader_Template_button_touchend_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._stopInterval());\n            });\n            i0.ɵɵelement(2, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 7, 1);\n            i0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handleKeydown($event));\n            });\n            i0.ɵɵelementStart(5, \"div\", 8, 2);\n            i0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onContentChanges());\n            });\n            i0.ɵɵelementStart(7, \"div\", 9, 3);\n            i0.ɵɵprojection(9);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(10, \"button\", 10, 4);\n            i0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_button_mousedown_10_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n            })(\"click\", function MatTabHeader_Template_button_click_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n            })(\"touchend\", function MatTabHeader_Template_button_touchend_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._stopInterval());\n            });\n            i0.ɵɵelement(12, \"div\", 6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n            i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple)(\"disabled\", ctx._disableScrollBefore || null);\n            i0.ɵɵadvance(3);\n            i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n            i0.ɵɵadvance(7);\n            i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n            i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple)(\"disabled\", ctx._disableScrollAfter || null);\n          }\n        },\n        dependencies: [MatRipple, CdkObserveContent],\n        styles: [\".mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color)}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}._mat-animation-noopable span.mdc-tab-indicator__content,._mat-animation-noopable span.mdc-tab__text-label{transition:none}.mat-mdc-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color)}.mat-mdc-tab-group-inverted-header .mat-mdc-tab-label-container{border-bottom:none;border-top-style:solid;border-top-width:var(--mat-tab-header-divider-height);border-top-color:var(--mat-tab-header-divider-color)}.mat-mdc-tab-labels{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:flex-end}.mat-mdc-tab::before{margin:5px}.cdk-high-contrast-active .mat-mdc-tab[aria-disabled=true]{color:GrayText}\"],\n        encapsulation: 2\n      });\n    }\n  }\n  return MatTabHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = /*#__PURE__*/new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: /*#__PURE__*/trigger('translateTab', [\n  /*#__PURE__*/\n  // Transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', /*#__PURE__*/style({\n    transform: 'none'\n  })),\n  /*#__PURE__*/\n  // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', /*#__PURE__*/style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px',\n    // Normally this is redundant since we detach the content from the DOM, but if the user\n    // opted into keeping the content in the DOM, we have to hide it so it isn't focusable.\n    visibility: 'hidden'\n  })), /*#__PURE__*/state('right', /*#__PURE__*/style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px',\n    visibility: 'hidden'\n  })), /*#__PURE__*/transition('* => left, * => right, left => center, right => center', /*#__PURE__*/animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), /*#__PURE__*/transition('void => left-origin-center', [/*#__PURE__*/style({\n    transform: 'translate3d(-100%, 0, 0)',\n    visibility: 'hidden'\n  }), /*#__PURE__*/animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), /*#__PURE__*/transition('void => right-origin-center', [/*#__PURE__*/style({\n    transform: 'translate3d(100%, 0, 0)',\n    visibility: 'hidden'\n  }), /*#__PURE__*/animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nlet MatTabBodyPortal = /*#__PURE__*/(() => {\n  class MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n      super(componentFactoryResolver, viewContainerRef, _document);\n      this._host = _host;\n      /** Subscription to events for when the tab body begins centering. */\n      this._centeringSub = Subscription.EMPTY;\n      /** Subscription to events for when the tab body finishes leaving from center position. */\n      this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n      super.ngOnInit();\n      this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(isCentering => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n      this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n        if (!this._host.preserveContent) {\n          this.detach();\n        }\n      });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this._centeringSub.unsubscribe();\n      this._leavingSub.unsubscribe();\n    }\n    static {\n      this.ɵfac = function MatTabBodyPortal_Factory(t) {\n        return new (t || MatTabBodyPortal)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatTabBodyPortal,\n        selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatTabBodyPortal;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nlet MatTabBody = /*#__PURE__*/(() => {\n  class MatTabBody {\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n      this._positionIndex = position;\n      this._computePositionAnimationState();\n    }\n    constructor(_elementRef, _dir, changeDetectorRef) {\n      this._elementRef = _elementRef;\n      this._dir = _dir;\n      /** Subscription to the directionality change observable. */\n      this._dirChangeSubscription = Subscription.EMPTY;\n      /** Emits when an animation on the tab is complete. */\n      this._translateTabComplete = new Subject();\n      /** Event emitted when the tab begins to animate towards the center as the active tab. */\n      this._onCentering = new EventEmitter();\n      /** Event emitted before the centering of the tab begins. */\n      this._beforeCentering = new EventEmitter();\n      /** Event emitted before the centering of the tab begins. */\n      this._afterLeavingCenter = new EventEmitter();\n      /** Event emitted when the tab completes its animation towards the center. */\n      this._onCentered = new EventEmitter(true);\n      // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n      // anyway to prevent the animations module from throwing an error if the body is used on its own.\n      /** Duration for the tab's animation. */\n      this.animationDuration = '500ms';\n      /** Whether the tab's content should be kept in the DOM while it's off-screen. */\n      this.preserveContent = false;\n      if (_dir) {\n        this._dirChangeSubscription = _dir.change.subscribe(dir => {\n          this._computePositionAnimationState(dir);\n          changeDetectorRef.markForCheck();\n        });\n      }\n      // Ensure that we get unique animation events, because the `.done` callback can get\n      // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n      this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n        return x.fromState === y.fromState && x.toState === y.toState;\n      })).subscribe(event => {\n        // If the transition to the center is complete, emit an event.\n        if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n          this._onCentered.emit();\n        }\n        if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n          this._afterLeavingCenter.emit();\n        }\n      });\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n      if (this._position == 'center' && this.origin != null) {\n        this._position = this._computePositionFromOrigin(this.origin);\n      }\n    }\n    ngOnDestroy() {\n      this._dirChangeSubscription.unsubscribe();\n      this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n      const isCentering = this._isCenterPosition(event.toState);\n      this._beforeCentering.emit(isCentering);\n      if (isCentering) {\n        this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n      }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n      return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n      if (this._positionIndex < 0) {\n        this._position = dir == 'ltr' ? 'left' : 'right';\n      } else if (this._positionIndex > 0) {\n        this._position = dir == 'ltr' ? 'right' : 'left';\n      } else {\n        this._position = 'center';\n      }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n      const dir = this._getLayoutDirection();\n      if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {\n        return 'left-origin-center';\n      }\n      return 'right-origin-center';\n    }\n    static {\n      this.ɵfac = function MatTabBody_Factory(t) {\n        return new (t || MatTabBody)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTabBody,\n        selectors: [[\"mat-tab-body\"]],\n        viewQuery: function MatTabBody_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(CdkPortalOutlet, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-tab-body\"],\n        inputs: {\n          _content: [0, \"content\", \"_content\"],\n          origin: \"origin\",\n          animationDuration: \"animationDuration\",\n          preserveContent: \"preserveContent\",\n          position: \"position\"\n        },\n        outputs: {\n          _onCentering: \"_onCentering\",\n          _beforeCentering: \"_beforeCentering\",\n          _afterLeavingCenter: \"_afterLeavingCenter\",\n          _onCentered: \"_onCentered\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 3,\n        vars: 6,\n        consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-mdc-tab-body-content\"], [\"matTabBodyHost\", \"\"]],\n        template: function MatTabBody_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1, 0);\n            i0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onTranslateTabStarted($event));\n            })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._translateTabComplete.next($event));\n            });\n            i0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"@translateTab\", i0.ɵɵpureFunction2(3, _c7, ctx._position, i0.ɵɵpureFunction1(1, _c6, ctx.animationDuration)));\n          }\n        },\n        dependencies: [MatTabBodyPortal, CdkScrollable],\n        styles: [\".mat-mdc-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-mdc-tab-body.mat-mdc-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-mdc-tab-group.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body.mat-mdc-tab-body-active{overflow-y:hidden}.mat-mdc-tab-body-content{height:100%;overflow:auto}.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body-content{overflow:hidden}.mat-mdc-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"],\n        encapsulation: 2,\n        data: {\n          animation: [matTabsAnimations.translateTab]\n        }\n      });\n    }\n  }\n  return MatTabBody;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** Boolean constant that determines whether the tab group supports the `backgroundColor` input */\nconst ENABLE_BACKGROUND_INPUT = true;\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nlet MatTabGroup = /*#__PURE__*/(() => {\n  class MatTabGroup {\n    /** Whether the ink bar should fit its width to the size of the tab label content. */\n    get fitInkBarToContent() {\n      return this._fitInkBarToContent;\n    }\n    set fitInkBarToContent(value) {\n      this._fitInkBarToContent = value;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n      this._indexToSelect = isNaN(value) ? null : value;\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n      return this._animationDuration;\n    }\n    set animationDuration(value) {\n      const stringValue = value + '';\n      this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n      return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n      this._contentTabIndex = isNaN(value) ? null : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @deprecated The background color should be customized through Sass theming APIs.\n     * @breaking-change 20.0.0 Remove this input\n     */\n    get backgroundColor() {\n      return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n      if (!ENABLE_BACKGROUND_INPUT) {\n        throw new Error(`mat-tab-group background color must be set through the Sass theming API`);\n      }\n      const classList = this._elementRef.nativeElement.classList;\n      classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n      if (value) {\n        classList.add('mat-tabs-with-background', `mat-background-${value}`);\n      }\n      this._backgroundColor = value;\n    }\n    constructor(_elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._animationMode = _animationMode;\n      /** All of the tabs that belong to the group. */\n      this._tabs = new QueryList();\n      /** The tab index that should be selected after the content has been checked. */\n      this._indexToSelect = 0;\n      /** Index of the tab that was focused last. */\n      this._lastFocusedTabIndex = null;\n      /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n      this._tabBodyWrapperHeight = 0;\n      /** Subscription to tabs being added/removed. */\n      this._tabsSubscription = Subscription.EMPTY;\n      /** Subscription to changes in the tab labels. */\n      this._tabLabelSubscription = Subscription.EMPTY;\n      this._fitInkBarToContent = false;\n      /** Whether tabs should be stretched to fill the header. */\n      this.stretchTabs = true;\n      /** Whether the tab group should grow to the size of the active tab. */\n      this.dynamicHeight = false;\n      this._selectedIndex = null;\n      /** Position of the tab header. */\n      this.headerPosition = 'above';\n      /**\n       * Whether pagination should be disabled. This can be used to avoid unnecessary\n       * layout recalculations if it's known that pagination won't be required.\n       */\n      this.disablePagination = false;\n      /** Whether ripples in the tab group are disabled. */\n      this.disableRipple = false;\n      /**\n       * By default tabs remove their content from the DOM while it's off-screen.\n       * Setting this to `true` will keep it in the DOM which will prevent elements\n       * like iframes and videos from reloading next time it comes back into the view.\n       */\n      this.preserveContent = false;\n      /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n      this.selectedIndexChange = new EventEmitter();\n      /** Event emitted when focus has changed within a tab group. */\n      this.focusChange = new EventEmitter();\n      /** Event emitted when the body animation has completed */\n      this.animationDone = new EventEmitter();\n      /** Event emitted when the tab selection has changed. */\n      this.selectedTabChange = new EventEmitter(true);\n      /** Whether the tab group is rendered on the server. */\n      this._isServer = !inject(Platform).isBrowser;\n      this._groupId = nextId++;\n      this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n      this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n      this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n      if (defaultConfig?.contentTabIndex != null) {\n        this.contentTabIndex = defaultConfig.contentTabIndex;\n      }\n      this.preserveContent = !!defaultConfig?.preserveContent;\n      this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n      this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n      // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n      // the amount of tabs changes before the actual change detection runs.\n      const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // If there is a change in selected index, emit a change event. Should not trigger if\n      // the selected index has not yet been initialized.\n      if (this._selectedIndex != indexToSelect) {\n        const isFirstRun = this._selectedIndex == null;\n        if (!isFirstRun) {\n          this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n          // Preserve the height so page doesn't scroll up during tab change.\n          // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n          const wrapper = this._tabBodyWrapper.nativeElement;\n          wrapper.style.minHeight = wrapper.clientHeight + 'px';\n        }\n        // Changing these values after change detection has run\n        // since the checked content may contain references to them.\n        Promise.resolve().then(() => {\n          this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n          if (!isFirstRun) {\n            this.selectedIndexChange.emit(indexToSelect);\n            // Clear the min-height, this was needed during tab change to avoid\n            // unnecessary scrolling.\n            this._tabBodyWrapper.nativeElement.style.minHeight = '';\n          }\n        });\n      }\n      // Setup the position for each tab and optionally setup an origin on the next selected tab.\n      this._tabs.forEach((tab, index) => {\n        tab.position = index - indexToSelect;\n        // If there is already a selected tab, then set up an origin for the next selected tab\n        // if it doesn't have one already.\n        if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n          tab.origin = indexToSelect - this._selectedIndex;\n        }\n      });\n      if (this._selectedIndex !== indexToSelect) {\n        this._selectedIndex = indexToSelect;\n        this._lastFocusedTabIndex = null;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    ngAfterContentInit() {\n      this._subscribeToAllTabChanges();\n      this._subscribeToTabLabels();\n      // Subscribe to changes in the amount of tabs, in order to be\n      // able to re-render the content as new tabs are added or removed.\n      this._tabsSubscription = this._tabs.changes.subscribe(() => {\n        const indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // Maintain the previously-selected tab if a new tab is added or removed and there is no\n        // explicit change that selects a different tab.\n        if (indexToSelect === this._selectedIndex) {\n          const tabs = this._tabs.toArray();\n          let selectedTab;\n          for (let i = 0; i < tabs.length; i++) {\n            if (tabs[i].isActive) {\n              // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n              // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n              // adding a tab within the `selectedIndexChange` event.\n              this._indexToSelect = this._selectedIndex = i;\n              this._lastFocusedTabIndex = null;\n              selectedTab = tabs[i];\n              break;\n            }\n          }\n          // If we haven't found an active tab and a tab exists at the selected index, it means\n          // that the active tab was swapped out. Since this won't be picked up by the rendering\n          // loop in `ngAfterContentChecked`, we need to sync it up manually.\n          if (!selectedTab && tabs[indexToSelect]) {\n            Promise.resolve().then(() => {\n              tabs[indexToSelect].isActive = true;\n              this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            });\n          }\n        }\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n      // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n      // some that are inside of nested tab groups. We filter them out manually by checking that\n      // the closest group to the tab is the current one.\n      this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n        this._tabs.reset(tabs.filter(tab => {\n          return tab._closestTabGroup === this || !tab._closestTabGroup;\n        }));\n        this._tabs.notifyOnChanges();\n      });\n    }\n    ngOnDestroy() {\n      this._tabs.destroy();\n      this._tabsSubscription.unsubscribe();\n      this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n      if (this._tabHeader) {\n        this._tabHeader._alignInkBarToSelectedTab();\n      }\n    }\n    /**\n     * Recalculates the tab group's pagination dimensions.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n      if (this._tabHeader) {\n        this._tabHeader.updatePagination();\n      }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n      const header = this._tabHeader;\n      if (header) {\n        header.focusIndex = index;\n      }\n    }\n    _focusChanged(index) {\n      this._lastFocusedTabIndex = index;\n      this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n      const event = new MatTabChangeEvent();\n      event.index = index;\n      if (this._tabs && this._tabs.length) {\n        event.tab = this._tabs.toArray()[index];\n      }\n      return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n      if (this._tabLabelSubscription) {\n        this._tabLabelSubscription.unsubscribe();\n      }\n      this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n      // Note the `|| 0`, which ensures that values like NaN can't get through\n      // and which would otherwise throw the component into an infinite loop\n      // (since Math.max(NaN, 0) === NaN).\n      return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n      return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n      return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n      if (!this.dynamicHeight || !this._tabBodyWrapperHeight) {\n        return;\n      }\n      const wrapper = this._tabBodyWrapper.nativeElement;\n      wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n      // This conditional forces the browser to paint the height so that\n      // the animation to the new height can have an origin.\n      if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n        wrapper.style.height = tabHeight + 'px';\n      }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n      const wrapper = this._tabBodyWrapper.nativeElement;\n      this._tabBodyWrapperHeight = wrapper.clientHeight;\n      wrapper.style.height = '';\n      this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n      tabHeader.focusIndex = index;\n      if (!tab.disabled) {\n        this.selectedIndex = index;\n      }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(index) {\n      const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n      return index === targetIndex ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n      // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n      // can cause the tab to be moved out from under the pointer, interrupting the\n      // click sequence (see #21898). We don't need to scroll the tab into view for\n      // such cases anyway, because it will be done when the tab becomes selected.\n      if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n        this._tabHeader.focusIndex = index;\n      }\n    }\n    static {\n      this.ɵfac = function MatTabGroup_Factory(t) {\n        return new (t || MatTabGroup)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTabGroup,\n        selectors: [[\"mat-tab-group\"]],\n        contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n          }\n        },\n        viewQuery: function MatTabGroup_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c8, 5);\n            i0.ɵɵviewQuery(_c9, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-tab-group\"],\n        hostVars: 10,\n        hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n            i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n            i0.ɵɵclassProp(\"mat-mdc-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-mdc-tab-group-inverted-header\", ctx.headerPosition === \"below\")(\"mat-mdc-tab-group-stretch-tabs\", ctx.stretchTabs);\n          }\n        },\n        inputs: {\n          color: \"color\",\n          fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n          stretchTabs: [2, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n          dynamicHeight: [2, \"dynamicHeight\", \"dynamicHeight\", booleanAttribute],\n          selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute],\n          headerPosition: \"headerPosition\",\n          animationDuration: \"animationDuration\",\n          contentTabIndex: [2, \"contentTabIndex\", \"contentTabIndex\", numberAttribute],\n          disablePagination: [2, \"disablePagination\", \"disablePagination\", booleanAttribute],\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          preserveContent: [2, \"preserveContent\", \"preserveContent\", booleanAttribute],\n          backgroundColor: \"backgroundColor\"\n        },\n        outputs: {\n          selectedIndexChange: \"selectedIndexChange\",\n          focusChange: \"focusChange\",\n          animationDone: \"animationDone\",\n          selectedTabChange: \"selectedTabChange\"\n        },\n        exportAs: [\"matTabGroup\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_TAB_GROUP,\n          useExisting: MatTabGroup\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 9,\n        vars: 6,\n        consts: [[\"tabHeader\", \"\"], [\"tabBodyWrapper\", \"\"], [\"tabNode\", \"\"], [3, \"indexFocused\", \"selectFocusedIndex\", \"selectedIndex\", \"disableRipple\", \"disablePagination\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-mdc-focus-indicator\", 3, \"id\", \"mdc-tab--active\", \"class\", \"disabled\", \"fitInkBarToContent\"], [1, \"mat-mdc-tab-body-wrapper\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-mdc-tab-body-active\", \"class\", \"content\", \"position\", \"origin\", \"animationDuration\", \"preserveContent\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-mdc-focus-indicator\", 3, \"click\", \"cdkFocusChange\", \"id\", \"disabled\", \"fitInkBarToContent\"], [1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"_onCentered\", \"_onCentering\", \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"preserveContent\"]],\n        template: function MatTabGroup_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"mat-tab-header\", 3, 0);\n            i0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._focusChanged($event));\n            })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.selectedIndex = $event);\n            });\n            i0.ɵɵrepeaterCreate(2, MatTabGroup_For_3_Template, 8, 17, \"div\", 4, i0.ɵɵrepeaterTrackByIdentity);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(4, MatTabGroup_Conditional_4_Template, 1, 0);\n            i0.ɵɵelementStart(5, \"div\", 5, 1);\n            i0.ɵɵrepeaterCreate(7, MatTabGroup_For_8_Template, 1, 13, \"mat-tab-body\", 6, i0.ɵɵrepeaterTrackByIdentity);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n            i0.ɵɵadvance(2);\n            i0.ɵɵrepeater(ctx._tabs);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._isServer ? 4 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵrepeater(ctx._tabs);\n          }\n        },\n        dependencies: [MatTabHeader, MatTabLabelWrapper, CdkMonitorFocus, MatRipple, CdkPortalOutlet, MatTabBody],\n        styles: [\".mdc-tab{min-width:90px;padding-right:24px;padding-left:24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;margin:0;padding-top:0;padding-bottom:0;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;-webkit-appearance:none;z-index:1}.mdc-tab::-moz-focus-inner{padding:0;border:0}.mdc-tab[hidden]{display:none}.mdc-tab--min-width{flex:0 1 auto}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab__icon{transition:150ms color linear;z-index:2}.mdc-tab--stacked .mdc-tab__content{flex-direction:column;align-items:center;justify-content:center}.mdc-tab--stacked .mdc-tab__text-label{padding-top:6px;padding-bottom:4px}.mdc-tab--active .mdc-tab__text-label,.mdc-tab--active .mdc-tab__icon{transition-delay:100ms}.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label{padding-left:8px;padding-right:0}[dir=rtl] .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label,.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label[dir=rtl]{padding-left:0;padding-right:8px}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator__content--icon{align-self:center;margin:0 auto}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}.mdc-tab-indicator .mdc-tab-indicator__content{transition:250ms transform cubic-bezier(0.4, 0, 0.2, 1)}.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition:150ms opacity linear}.mdc-tab-indicator--active.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition-delay:100ms}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;font-family:var(--mat-tab-header-label-text-font);font-size:var(--mat-tab-header-label-text-size);letter-spacing:var(--mat-tab-header-label-text-tracking);line-height:var(--mat-tab-header-label-text-line-height);font-weight:var(--mat-tab-header-label-text-weight)}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color)}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-top-width:var(--mdc-tab-indicator-active-indicator-height)}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab:not(.mdc-tab--stacked){height:var(--mdc-secondary-navigation-tab-container-height)}.mat-mdc-tab:not(:disabled).mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):hover.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):focus.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):active.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:disabled.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):hover:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):focus:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:not(:disabled):active:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab:disabled:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab.mdc-tab{flex-grow:0}.mat-mdc-tab:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color)}.mat-mdc-tab:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color)}.mat-mdc-tab.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color)}.mat-mdc-tab.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color)}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color)}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color)}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color)}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color)}.mat-mdc-tab.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color);display:inline-flex;align-items:center}.mat-mdc-tab .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-focus-indicator::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}\"],\n        encapsulation: 2\n      });\n    }\n  }\n  return MatTabGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {}\n\n// Increasing integer for generating unique ids for tab nav components.\nlet nextUniqueId = 0;\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nlet MatTabNav = /*#__PURE__*/(() => {\n  class MatTabNav extends MatPaginatedTabHeader {\n    /** Whether the ink bar should fit its width to the size of the tab label content. */\n    get fitInkBarToContent() {\n      return this._fitInkBarToContent.value;\n    }\n    set fitInkBarToContent(value) {\n      this._fitInkBarToContent.next(value);\n      this._changeDetectorRef.markForCheck();\n    }\n    get animationDuration() {\n      return this._animationDuration;\n    }\n    set animationDuration(value) {\n      const stringValue = value + '';\n      this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n    }\n    /** Background color of the tab nav. */\n    get backgroundColor() {\n      return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n      const classList = this._elementRef.nativeElement.classList;\n      classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n      if (value) {\n        classList.add('mat-tabs-with-background', `mat-background-${value}`);\n      }\n      this._backgroundColor = value;\n    }\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode, defaultConfig) {\n      super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n      this._fitInkBarToContent = new BehaviorSubject(false);\n      /** Whether tabs should be stretched to fill the header. */\n      this.stretchTabs = true;\n      /** Whether the ripple effect is disabled or not. */\n      this.disableRipple = false;\n      /**\n       * Theme color of the nav bar. This API is supported in M2 themes only, it has\n       * no effect in M3 themes.\n       *\n       * For information on applying color variants in M3, see\n       * https://material.angular.io/guide/theming#using-component-color-variants.\n       */\n      this.color = 'primary';\n      this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n      this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n      this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n    }\n    _itemSelected() {\n      // noop\n    }\n    ngAfterContentInit() {\n      this._inkBar = new MatInkBar(this._items);\n      // We need this to run before the `changes` subscription in parent to ensure that the\n      // selectedIndex is up-to-date by the time the super class starts looking for it.\n      this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n        this.updateActiveLink();\n      });\n      super.ngAfterContentInit();\n    }\n    ngAfterViewInit() {\n      if (!this.tabPanel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error('A mat-tab-nav-panel must be specified via [tabPanel].');\n      }\n      super.ngAfterViewInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n      if (!this._items) {\n        return;\n      }\n      const items = this._items.toArray();\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].active) {\n          this.selectedIndex = i;\n          this._changeDetectorRef.markForCheck();\n          if (this.tabPanel) {\n            this.tabPanel._activeTabId = items[i].id;\n          }\n          return;\n        }\n      }\n      // The ink bar should hide itself if no items are active.\n      this.selectedIndex = -1;\n      this._inkBar.hide();\n    }\n    _getRole() {\n      return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n    }\n    static {\n      this.ɵfac = function MatTabNav_Factory(t) {\n        return new (t || MatTabNav)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTabNav,\n        selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n        contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n          }\n        },\n        viewQuery: function MatTabNav_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c1, 7);\n            i0.ɵɵviewQuery(_c2, 7);\n            i0.ɵɵviewQuery(_c3, 7);\n            i0.ɵɵviewQuery(_c4, 5);\n            i0.ɵɵviewQuery(_c5, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-tab-nav-bar\", \"mat-mdc-tab-header\"],\n        hostVars: 17,\n        hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"role\", ctx._getRole());\n            i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n            i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-mdc-tab-nav-bar-stretch-tabs\", ctx.stretchTabs)(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n          }\n        },\n        inputs: {\n          fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n          stretchTabs: [2, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n          animationDuration: \"animationDuration\",\n          backgroundColor: \"backgroundColor\",\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          color: \"color\",\n          tabPanel: \"tabPanel\"\n        },\n        exportAs: [\"matTabNavBar\", \"matTabNav\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c10,\n        ngContentSelectors: _c0,\n        decls: 13,\n        vars: 8,\n        consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\", \"disabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-link-container\", 3, \"keydown\"], [1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-links\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\", \"disabled\"]],\n        template: function MatTabNav_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"button\", 5, 0);\n            i0.ɵɵlistener(\"click\", function MatTabNav_Template_button_click_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n            })(\"mousedown\", function MatTabNav_Template_button_mousedown_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n            })(\"touchend\", function MatTabNav_Template_button_touchend_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._stopInterval());\n            });\n            i0.ɵɵelement(2, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 7, 1);\n            i0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handleKeydown($event));\n            });\n            i0.ɵɵelementStart(5, \"div\", 8, 2);\n            i0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onContentChanges());\n            });\n            i0.ɵɵelementStart(7, \"div\", 9, 3);\n            i0.ɵɵprojection(9);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(10, \"button\", 10, 4);\n            i0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_button_mousedown_10_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n            })(\"click\", function MatTabNav_Template_button_click_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n            })(\"touchend\", function MatTabNav_Template_button_touchend_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._stopInterval());\n            });\n            i0.ɵɵelement(12, \"div\", 6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n            i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple)(\"disabled\", ctx._disableScrollBefore || null);\n            i0.ɵɵadvance(10);\n            i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n            i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple)(\"disabled\", ctx._disableScrollAfter || null);\n          }\n        },\n        dependencies: [MatRipple, CdkObserveContent],\n        styles: [\".mdc-tab{min-width:90px;padding-right:24px;padding-left:24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;margin:0;padding-top:0;padding-bottom:0;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;-webkit-appearance:none;z-index:1}.mdc-tab::-moz-focus-inner{padding:0;border:0}.mdc-tab[hidden]{display:none}.mdc-tab--min-width{flex:0 1 auto}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab__icon{transition:150ms color linear;z-index:2}.mdc-tab--stacked .mdc-tab__content{flex-direction:column;align-items:center;justify-content:center}.mdc-tab--stacked .mdc-tab__text-label{padding-top:6px;padding-bottom:4px}.mdc-tab--active .mdc-tab__text-label,.mdc-tab--active .mdc-tab__icon{transition-delay:100ms}.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label{padding-left:8px;padding-right:0}[dir=rtl] .mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label,.mdc-tab:not(.mdc-tab--stacked) .mdc-tab__icon+.mdc-tab__text-label[dir=rtl]{padding-left:0;padding-right:8px}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator__content--icon{align-self:center;margin:0 auto}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}.mdc-tab-indicator .mdc-tab-indicator__content{transition:250ms transform cubic-bezier(0.4, 0, 0.2, 1)}.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition:150ms opacity linear}.mdc-tab-indicator--active.mdc-tab-indicator--fade .mdc-tab-indicator__content{transition-delay:100ms}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color)}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}._mat-animation-noopable span.mdc-tab-indicator__content,._mat-animation-noopable span.mdc-tab__text-label{transition:none}.mat-mdc-tab-links{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:flex-end}.mat-mdc-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-focus-indicator::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mdc-tab__ripple::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}\"],\n        encapsulation: 2\n      });\n    }\n  }\n  return MatTabNav;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Link inside a `mat-tab-nav-bar`.\n */\nlet MatTabLink = /*#__PURE__*/(() => {\n  class MatTabLink extends InkBarItem {\n    /** Whether the link is active. */\n    get active() {\n      return this._isActive;\n    }\n    set active(value) {\n      if (value !== this._isActive) {\n        this._isActive = value;\n        this._tabNavBar.updateActiveLink();\n      }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n      return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n    }\n    constructor(_tabNavBar, /** @docs-private */elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n      super();\n      this._tabNavBar = _tabNavBar;\n      this.elementRef = elementRef;\n      this._focusMonitor = _focusMonitor;\n      this._destroyed = new Subject();\n      /** Whether the tab link is active or not. */\n      this._isActive = false;\n      /** Whether the tab link is disabled. */\n      this.disabled = false;\n      /** Whether ripples are disabled on the tab link. */\n      this.disableRipple = false;\n      this.tabIndex = 0;\n      /** Unique id for the tab. */\n      this.id = `mat-tab-link-${nextUniqueId++}`;\n      this.rippleConfig = globalRippleOptions || {};\n      this.tabIndex = parseInt(tabIndex) || 0;\n      if (animationMode === 'NoopAnimations') {\n        this.rippleConfig.animation = {\n          enterDuration: 0,\n          exitDuration: 0\n        };\n      }\n      _tabNavBar._fitInkBarToContent.pipe(takeUntil(this._destroyed)).subscribe(fitInkBarToContent => {\n        this.fitInkBarToContent = fitInkBarToContent;\n      });\n    }\n    /** Focuses the tab link. */\n    focus() {\n      this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n      this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n      this._destroyed.next();\n      this._destroyed.complete();\n      super.ngOnDestroy();\n      this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n      // Since we allow navigation through tabbing in the nav bar, we\n      // have to update the focused index whenever the link receives focus.\n      this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n    _handleKeydown(event) {\n      if (event.keyCode === SPACE || event.keyCode === ENTER) {\n        if (this.disabled) {\n          event.preventDefault();\n        } else if (this._tabNavBar.tabPanel) {\n          // Only prevent the default action on space since it can scroll the page.\n          // Don't prevent enter since it can break link navigation.\n          if (event.keyCode === SPACE) {\n            event.preventDefault();\n          }\n          this.elementRef.nativeElement.click();\n        }\n      }\n    }\n    _getAriaControls() {\n      return this._tabNavBar.tabPanel ? this._tabNavBar.tabPanel?.id : this.elementRef.nativeElement.getAttribute('aria-controls');\n    }\n    _getAriaSelected() {\n      if (this._tabNavBar.tabPanel) {\n        return this.active ? 'true' : 'false';\n      } else {\n        return this.elementRef.nativeElement.getAttribute('aria-selected');\n      }\n    }\n    _getAriaCurrent() {\n      return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n    }\n    _getRole() {\n      return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n    }\n    _getTabIndex() {\n      if (this._tabNavBar.tabPanel) {\n        return this._isActive && !this.disabled ? 0 : -1;\n      } else {\n        return this.disabled ? -1 : this.tabIndex;\n      }\n    }\n    static {\n      this.ɵfac = function MatTabLink_Factory(t) {\n        return new (t || MatTabLink)(i0.ɵɵdirectiveInject(MatTabNav), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i4.FocusMonitor), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTabLink,\n        selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n        hostAttrs: [1, \"mdc-tab\", \"mat-mdc-tab-link\", \"mat-mdc-focus-indicator\"],\n        hostVars: 11,\n        hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n              return ctx._handleFocus();\n            })(\"keydown\", function MatTabLink_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-controls\", ctx._getAriaControls())(\"aria-current\", ctx._getAriaCurrent())(\"aria-disabled\", ctx.disabled)(\"aria-selected\", ctx._getAriaSelected())(\"id\", ctx.id)(\"tabIndex\", ctx._getTabIndex())(\"role\", ctx._getRole());\n            i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled)(\"mdc-tab--active\", ctx.active);\n          }\n        },\n        inputs: {\n          active: [2, \"active\", \"active\", booleanAttribute],\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n          id: \"id\"\n        },\n        exportAs: [\"matTabLink\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c11,\n        ngContentSelectors: _c0,\n        decls: 5,\n        vars: 2,\n        consts: [[1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"]],\n        template: function MatTabLink_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelement(0, \"span\", 0)(1, \"div\", 1);\n            i0.ɵɵelementStart(2, \"span\", 2)(3, \"span\", 3);\n            i0.ɵɵprojection(4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"matRippleTrigger\", ctx.elementRef.nativeElement)(\"matRippleDisabled\", ctx.rippleDisabled);\n          }\n        },\n        dependencies: [MatRipple],\n        styles: [\".mat-mdc-tab-link{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;font-family:var(--mat-tab-header-label-text-font);font-size:var(--mat-tab-header-label-text-size);letter-spacing:var(--mat-tab-header-label-text-tracking);line-height:var(--mat-tab-header-label-text-line-height);font-weight:var(--mat-tab-header-label-text-weight)}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color)}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-top-width:var(--mdc-tab-indicator-active-indicator-height)}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab-link:not(.mdc-tab--stacked){height:var(--mdc-secondary-navigation-tab-container-height)}.mat-mdc-tab-link:not(:disabled).mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):hover.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):focus.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):active.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:disabled.mdc-tab--active .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):hover:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):focus:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:not(:disabled):active:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link:disabled:not(.mdc-tab--active) .mdc-tab__icon{fill:currentColor}.mat-mdc-tab-link.mdc-tab{flex-grow:0}.mat-mdc-tab-link:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color)}.mat-mdc-tab-link:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color)}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color)}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab-link.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color)}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color)}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color)}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color)}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color)}.mat-mdc-tab-link.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab-link .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color);display:inline-flex;align-items:center}.mat-mdc-tab-link .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab-link:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab-link.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab-link.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab-link .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-header.mat-mdc-tab-nav-bar-stretch-tabs .mat-mdc-tab-link{flex-grow:1}.mat-mdc-tab-link::before{margin:5px}@media(max-width: 599px){.mat-mdc-tab-link{min-width:72px}}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatTabLink;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Tab panel component associated with MatTabNav.\n */\nlet MatTabNavPanel = /*#__PURE__*/(() => {\n  class MatTabNavPanel {\n    constructor() {\n      /** Unique id for the tab panel. */\n      this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n    }\n    static {\n      this.ɵfac = function MatTabNavPanel_Factory(t) {\n        return new (t || MatTabNavPanel)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTabNavPanel,\n        selectors: [[\"mat-tab-nav-panel\"]],\n        hostAttrs: [\"role\", \"tabpanel\", 1, \"mat-mdc-tab-nav-panel\"],\n        hostVars: 2,\n        hostBindings: function MatTabNavPanel_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-labelledby\", ctx._activeTabId)(\"id\", ctx.id);\n          }\n        },\n        inputs: {\n          id: \"id\"\n        },\n        exportAs: [\"matTabNavPanel\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatTabNavPanel_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatTabNavPanel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatTabsModule = /*#__PURE__*/(() => {\n  class MatTabsModule {\n    static {\n      this.ɵfac = function MatTabsModule_Factory(t) {\n        return new (t || MatTabsModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatTabsModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatTabsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_CONTENT, MAT_TAB_GROUP, MAT_TAB_LABEL, MatInkBar, MatPaginatedTabHeader, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MAT_INK_BAR_POSITIONER_FACTORY, matTabsAnimations };\n","import { KeyValuePipe } from \"@angular/common\";\nimport { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { RouterModule } from \"@angular/router\";\nimport {\n    TIME_RANGE_MAPPINGS,\n    TimeRangeOptions,\n    TopArtistLimited,\n    TopTrackLimited,\n} from \"@model/top-items.model\";\n\nimport { keepOrder } from \"./../../core/helpers\";\n\n@Component({\n    selector: \"app-base-tabs-container\",\n    standalone: true,\n    imports: [KeyValuePipe, MatCardModule, MatTabsModule, RouterModule],\n    templateUrl: \"./base-tabs-container.component.html\",\n    styleUrl: \"./base-tabs-container.component.scss\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BaseTabsContainerComponent<\n    T extends TopTrackLimited | TopArtistLimited,\n> {\n    @Input() items!: T[];\n    @Input() currentTimeRange!: TimeRangeOptions;\n\n    protected readonly TIME_RANGE_MAPPINGS = TIME_RANGE_MAPPINGS;\n    protected readonly keepOrder = keepOrder;\n}\n","<mat-card>\n    <nav mat-tab-nav-bar [tabPanel]=\"tabPanel\">\n        @for (\n            mapping of TIME_RANGE_MAPPINGS | keyvalue: keepOrder;\n            track $index\n        ) {\n            <a\n                mat-tab-link\n                [routerLink]=\"'../' + mapping.key\"\n                [active]=\"currentTimeRange === mapping.key\"\n            >\n                {{ mapping.value }}\n            </a>\n        }\n    </nav>\n    <mat-tab-nav-panel #tabPanel>\n        <ol>\n            @for (item of items; track $index) {\n                <li>{{ $index + 1 }} {{ item.name }}</li>\n            }\n        </ol>\n    </mat-tab-nav-panel>\n</mat-card>\n","import { HttpClient } from \"@angular/common/http\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { environment } from \"@env/environment\";\nimport {\n    Album,\n    TopArtist,\n    TopItems,\n    TopItemsParams,\n    TopItemsType,\n    TopTrack,\n} from \"@model/top-items.model\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class TopItemsHTTPService {\n    readonly #url = `${environment.apiBaseUrl}/me/top`;\n\n    readonly #httpClient = inject(HttpClient);\n\n    /**\n     * Fetches top items from the API based on the specified type and parameters.\n     *\n     * @param type - The type of top items to fetch. This determines the endpoint to which the HTTP request is made.\n     * @param params - Additional query parameters for the request, such as time range, limit and offset.\n     * @returns An observable that emits the fetched top items.\n     */\n    getTopItems$<\n        T extends TopArtist | TopTrack<Album, TopArtist>,\n        U extends TopItemsType,\n    >(type: U, params: TopItemsParams): Observable<TopItems<T>> {\n        return this.#httpClient.get<TopItems<T>>(`${this.#url}/${type}`, {\n            params,\n        });\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n    Album,\n    AlbumLimited,\n    TopArtist,\n    TopArtistLimited,\n    TopTrack,\n    TopTrackLimited,\n} from \"@model/top-items.model\";\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class TopItemsService {\n    /**\n     * Simplifies the `TopTrack` by transforming it to include only essential fields.\n     *\n     * @param track - The object to be converted.\n     * @returns An object containing a subset of properties from the original one.\n     */\n    convertTopTrackToLimited(\n        track: TopTrack<Album, TopArtist>,\n    ): TopTrackLimited {\n        const { album, external_urls, name, artists } = structuredClone(track);\n        return {\n            album: this.convertAlbumToLimited(album),\n            external_urls,\n            name,\n            artists: artists.map((artist) =>\n                this.convertTopArtistToLimited(artist),\n            ),\n        };\n    }\n\n    /**\n     * Simplifies the `Album` by transforming it to include only essential fields.\n     *\n     * @param album - The object to be converted.\n     * @returns An object containing a subset of properties from the original one.\n     */\n    convertAlbumToLimited(album: Album): AlbumLimited {\n        const {\n            external_urls,\n            name,\n            album_type,\n            total_tracks,\n            images,\n            release_date,\n        } = structuredClone(album);\n        return {\n            external_urls,\n            name,\n            album_type,\n            total_tracks,\n            images,\n            release_date,\n        };\n    }\n\n    /**\n     * Simplifies the `Artist` by transforming it to include only essential fields.\n     *\n     * @param artists - The object to be converted.\n     * @returns An object containing a subset of properties from the original one.\n     */\n    convertTopArtistToLimited(artist: TopArtist): TopArtistLimited {\n        const { external_urls, name, images, genres } = structuredClone(artist);\n        return { external_urls, name, images, genres };\n    }\n}\n","import { computed, inject, Injectable, signal } from \"@angular/core\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { TopItemsHTTPService } from \"@api/top-items-http.service\";\nimport {\n    Album,\n    TimeRangeOptions,\n    TopArtist,\n    TopItemsState,\n    TopTrack,\n    TopTrackLimited,\n} from \"@model/top-items.model\";\nimport { map, of, Subject, switchMap } from \"rxjs\";\n\nimport { TopItemsService } from \"../components/routes/top-items.service\";\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class TopItemsStateService {\n    readonly #topItemsHTTPService = inject(TopItemsHTTPService);\n    readonly #topItemsService = inject(TopItemsService);\n\n    readonly #topTracksState = signal<TopItemsState<TopTrackLimited>>({\n        itemsByTimeRange: {\n            [TimeRangeOptions.ShortTerm]: [],\n            [TimeRangeOptions.MediumTerm]: [],\n            [TimeRangeOptions.LongTerm]: [],\n        },\n        currentTimeRange: TimeRangeOptions.ShortTerm,\n    });\n\n    // #region selectors\n    topTracks = computed(\n        () =>\n            this.#topTracksState().itemsByTimeRange[\n                this.#topTracksState().currentTimeRange\n            ],\n    );\n\n    topTracksTimeRange = computed(\n        () => this.#topTracksState().currentTimeRange,\n    );\n    // #endregion\n\n    // #region sources\n    readonly #topTracksTimeRange$ = new Subject<TimeRangeOptions>();\n\n    readonly #topTracks$ = this.#topTracksTimeRange$.pipe(\n        switchMap((timeRange) => {\n            const topTracksByTimeRange =\n                this.#topTracksState().itemsByTimeRange[timeRange];\n            if (topTracksByTimeRange.length) {\n                return of(topTracksByTimeRange);\n            }\n            return this.#topItemsHTTPService\n                .getTopItems$<TopTrack<Album, TopArtist>, \"tracks\">(\"tracks\", {\n                    time_range: timeRange,\n                    limit: 50,\n                    offset: 0,\n                })\n                .pipe(\n                    map(({ items }) =>\n                        items.map((item) =>\n                            this.#topItemsService.convertTopTrackToLimited(\n                                item,\n                            ),\n                        ),\n                    ),\n                );\n        }),\n    );\n    // #endregion\n\n    constructor() {\n        // #region reducers\n        this.#topTracksTimeRange$\n            .pipe(takeUntilDestroyed())\n            .subscribe((timeRange) => {\n                this.#topTracksState.update(\n                    (state): TopItemsState<TopTrackLimited> => ({\n                        ...state,\n                        currentTimeRange: timeRange,\n                    }),\n                );\n            });\n\n        this.#topTracks$.pipe(takeUntilDestroyed()).subscribe((tracks) =>\n            this.#topTracksState.update(\n                (state): TopItemsState<TopTrackLimited> => ({\n                    ...state,\n                    itemsByTimeRange: {\n                        ...state.itemsByTimeRange,\n                        [state.currentTimeRange]: tracks,\n                    },\n                }),\n            ),\n        );\n        // #endregion\n    }\n\n    /**\n     * Publishes a new time range to the `topTracksTimeRange$` subject, updating the current time\n     * range for top tracks.\n     *\n     * @param timeRange - The new time range to be published.\n     */\n    publishTopTracksTimeRange(timeRange: TimeRangeOptions): void {\n        this.#topTracksTimeRange$.next(timeRange);\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    inject,\n    Input,\n    OnChanges,\n} from \"@angular/core\";\nimport { BaseTabsContainerComponent } from \"@lib/base-tabs-container/base-tabs-container.component\";\nimport { TimeRangeOptions } from \"@model/top-items.model\";\nimport { TopItemsStateService } from \"@state/top-items-state.service\";\n\n@Component({\n    selector: \"app-top-tracks\",\n    standalone: true,\n    imports: [BaseTabsContainerComponent],\n    templateUrl: \"./top-tracks.component.html\",\n    styleUrl: \"./top-tracks.component.scss\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TopTracksComponent implements OnChanges {\n    @Input() protected readonly timeRange: TimeRangeOptions =\n        TimeRangeOptions.ShortTerm;\n\n    protected readonly topItemsStateService = inject(TopItemsStateService);\n\n    ngOnChanges(): void {\n        this.topItemsStateService.publishTopTracksTimeRange(this.timeRange);\n    }\n}\n","<app-base-tabs-container\n    [items]=\"topItemsStateService.topTracks()\"\n    [currentTimeRange]=\"topItemsStateService.topTracksTimeRange()\"\n/>\n","import { Routes } from \"@angular/router\";\nimport { timeRangeGuard } from \"@core/helpers\";\nimport { TimeRangeOptions, TopItemsRoutes } from \"@model/top-items.model\";\n\nimport { TopTracksComponent } from \"./top-tracks.component\";\n\nexport default [\n    {\n        path: \":timeRange\",\n        component: TopTracksComponent,\n        canActivate: [timeRangeGuard(TopItemsRoutes.TopTracks)],\n    },\n    { path: \"**\", redirectTo: TimeRangeOptions.ShortTerm },\n] as Routes;\n"],"mappings":"+iCAMA,IAAMA,GAAM,CAAC,GAAG,EAKhB,IAAMC,GAA+B,IAAIC,EAAe,iBAAiB,EAOrEC,IAAwB,IAAM,CAChC,IAAMC,EAAN,MAAMA,CAAQ,CACZ,YAAYC,EAAQ,CAClB,KAAK,WAAaA,GAAQ,YAAc,QAC1C,CAqCF,EAnCID,EAAK,UAAO,SAAyBE,EAAG,CACtC,OAAO,IAAKA,GAAKF,GAAYG,EAAkBN,GAAiB,CAAC,CAAC,CACpE,EAGAG,EAAK,UAAyBI,EAAkB,CAC9C,KAAMJ,EACN,UAAW,CAAC,CAAC,UAAU,CAAC,EACxB,UAAW,CAAC,EAAG,eAAgB,UAAU,EACzC,SAAU,EACV,aAAc,SAA8BK,EAAIC,EAAK,CAC/CD,EAAK,GACJE,EAAY,wBAAyBD,EAAI,aAAe,UAAU,EAAE,qBAAsBA,EAAI,aAAe,UAAU,CAE9H,EACA,OAAQ,CACN,WAAY,YACd,EACA,SAAU,CAAC,SAAS,EACpB,WAAY,GACZ,SAAU,CAAIE,CAAmB,EACjC,mBAAoBC,GACpB,MAAO,EACP,KAAM,EACN,SAAU,SAA0BJ,EAAIC,EAAK,CACvCD,EAAK,IACJK,EAAgB,EAChBC,EAAa,CAAC,EAErB,EACA,OAAQ,CAAC,wpLAA4pL,EACrqL,cAAe,EACf,gBAAiB,CACnB,CAAC,EAtCL,IAAMZ,EAANC,EAyCA,OAAOD,CACT,GAAG,EAgZH,IAAIa,IAA8B,IAAM,CACtC,IAAMC,EAAN,MAAMA,CAAc,CAgBpB,EAdIA,EAAK,UAAO,SAA+BC,EAAG,CAC5C,OAAO,IAAKA,GAAKD,EACnB,EAGAA,EAAK,UAAyBE,EAAiB,CAC7C,KAAMF,CACR,CAAC,EAGDA,EAAK,UAAyBG,EAAiB,CAC7C,QAAS,CAACC,EAAiBC,GAAcD,CAAe,CAC1D,CAAC,EAdL,IAAML,EAANC,EAiBA,OAAOD,CACT,GAAG,EC7cH,IAAMO,GAAN,KAAoC,CAClC,YACAC,EAAM,CACJ,KAAK,KAAOA,EAEZ,KAAK,WAAa,IAAIC,EAEtB,KAAK,eAAiB,IAAIA,EAE1B,KAAK,oBAAsB,IAAI,IAC3B,OAAO,eAAmB,MAC5B,KAAK,gBAAkB,IAAI,eAAeC,GAAW,KAAK,eAAe,KAAKA,CAAO,CAAC,EAE1F,CAMA,QAAQC,EAAQ,CACd,OAAK,KAAK,oBAAoB,IAAIA,CAAM,GACtC,KAAK,oBAAoB,IAAIA,EAAQ,IAAIC,EAAWC,GAAY,CAC9D,IAAMC,EAAe,KAAK,eAAe,UAAUD,CAAQ,EAC3D,YAAK,iBAAiB,QAAQF,EAAQ,CACpC,IAAK,KAAK,IACZ,CAAC,EACM,IAAM,CACX,KAAK,iBAAiB,UAAUA,CAAM,EACtCG,EAAa,YAAY,EACzB,KAAK,oBAAoB,OAAOH,CAAM,CACxC,CACF,CAAC,EAAE,KAAKI,EAAOL,GAAWA,EAAQ,KAAKM,GAASA,EAAM,SAAWL,CAAM,CAAC,EAIxEM,GAAY,CACV,WAAY,EACZ,SAAU,EACZ,CAAC,EAAGC,EAAU,KAAK,UAAU,CAAC,CAAC,EAE1B,KAAK,oBAAoB,IAAIP,CAAM,CAC5C,CAEA,SAAU,CACR,KAAK,WAAW,KAAK,EACrB,KAAK,WAAW,SAAS,EACzB,KAAK,eAAe,SAAS,EAC7B,KAAK,oBAAoB,MAAM,CACjC,CACF,EAWIQ,IAAqC,IAAM,CAC7C,IAAMC,EAAN,MAAMA,CAAqB,CACzB,aAAc,CAEZ,KAAK,WAAa,IAAI,IAEtB,KAAK,QAAUC,EAAOC,CAAM,EACxB,OAAO,eAAmB,GAKhC,CACA,aAAc,CACZ,OAAW,CAAC,CAAET,CAAQ,IAAK,KAAK,WAC9BA,EAAS,QAAQ,EAEnB,KAAK,WAAW,MAAM,EAClB,OAAO,eAAmB,GAGhC,CAOA,QAAQF,EAAQY,EAAS,CACvB,IAAMC,EAAMD,GAAS,KAAO,cAC5B,OAAK,KAAK,WAAW,IAAIC,CAAG,GAC1B,KAAK,WAAW,IAAIA,EAAK,IAAIjB,GAA8BiB,CAAG,CAAC,EAE1D,KAAK,WAAW,IAAIA,CAAG,EAAE,QAAQb,CAAM,CAChD,CAaF,EAXIS,EAAK,UAAO,SAAsCK,EAAG,CACnD,OAAO,IAAKA,GAAKL,EACnB,EAGAA,EAAK,WAA0BM,EAAmB,CAChD,MAAON,EACP,QAASA,EAAqB,UAC9B,WAAY,MACd,CAAC,EA5CL,IAAMD,EAANC,EA+CA,OAAOD,CACT,GAAG,ECxGH,IAAMQ,GAAM,CAAC,GAAG,EAMhB,IAAMC,GAAM,CAAC,kBAAkB,EACzBC,GAAM,CAAC,SAAS,EAChBC,GAAM,CAAC,cAAc,EACrBC,GAAM,CAAC,eAAe,EACtBC,GAAM,CAAC,mBAAmB,EAgGhC,IAAMC,GAAO,CAAC,kBAAmB,EAAE,EAC7BC,GAAO,CAAC,eAAgB,EAAE,EAkNhC,IAAMC,GAAe,4BAEfC,GAAsB,mCAKtBC,GAAN,KAAgB,CACd,YAAYC,EAAQ,CAClB,KAAK,OAASA,CAChB,CAEA,MAAO,CACL,KAAK,OAAO,QAAQC,GAAQA,EAAK,iBAAiB,CAAC,CACrD,CAEA,eAAeC,EAAS,CACtB,IAAMC,EAAoB,KAAK,OAAO,KAAKF,GAAQA,EAAK,WAAW,gBAAkBC,CAAO,EACtFE,EAAc,KAAK,aACzB,GAAID,IAAsBC,IAG1BA,GAAa,iBAAiB,EAC1BD,GAAmB,CACrB,IAAME,EAAUD,GAAa,WAAW,cAAc,wBAAwB,EAE9ED,EAAkB,eAAeE,CAAO,EACxC,KAAK,aAAeF,CACtB,CACF,CACF,EACIG,IAA2B,IAAM,CACnC,IAAMC,EAAN,MAAMA,CAAW,CACf,aAAc,CACZ,KAAK,YAAcC,EAAOC,CAAU,EACpC,KAAK,cAAgB,EACvB,CAEA,IAAI,oBAAqB,CACvB,OAAO,KAAK,aACd,CACA,IAAI,mBAAmBC,EAAU,CAC3B,KAAK,gBAAkBA,IACzB,KAAK,cAAgBA,EACjB,KAAK,gBACP,KAAK,qBAAqB,EAGhC,CAEA,eAAeC,EAA6B,CAC1C,IAAMT,EAAU,KAAK,YAAY,cAGjC,GAAI,CAACS,GAA+B,CAACT,EAAQ,uBAAyB,CAAC,KAAK,sBAAuB,CACjGA,EAAQ,UAAU,IAAIL,EAAY,EAClC,MACF,CAIA,IAAMe,EAAoBV,EAAQ,sBAAsB,EAClDW,EAAaF,EAA4B,MAAQC,EAAkB,MACnEE,EAAYH,EAA4B,KAAOC,EAAkB,KACvEV,EAAQ,UAAU,IAAIJ,EAAmB,EACzC,KAAK,sBAAsB,MAAM,YAAY,YAAa,cAAcgB,CAAS,cAAcD,CAAU,GAAG,EAE5GX,EAAQ,sBAAsB,EAC9BA,EAAQ,UAAU,OAAOJ,EAAmB,EAC5CI,EAAQ,UAAU,IAAIL,EAAY,EAClC,KAAK,sBAAsB,MAAM,YAAY,YAAa,EAAE,CAC9D,CAEA,kBAAmB,CACjB,KAAK,YAAY,cAAc,UAAU,OAAOA,EAAY,CAC9D,CAEA,UAAW,CACT,KAAK,qBAAqB,CAC5B,CAEA,aAAc,CACZ,KAAK,gBAAgB,OAAO,EAC5B,KAAK,eAAiB,KAAK,sBAAwB,IACrD,CAEA,sBAAuB,CACrB,IAAMkB,EAAe,KAAK,YAAY,cAAc,eAAiB,SAC/DC,EAAgB,KAAK,eAAiBD,EAAa,cAAc,MAAM,EACvEE,EAAuB,KAAK,sBAAwBF,EAAa,cAAc,MAAM,EAC3FC,EAAc,UAAY,oBAC1BC,EAAqB,UAAY,mEACjCD,EAAc,YAAY,KAAK,qBAAqB,EACpD,KAAK,qBAAqB,CAC5B,CAKA,sBAAuB,CAChB,KAAK,eAGV,IAAME,EAAgB,KAAK,cAAgB,KAAK,YAAY,cAAc,cAAc,mBAAmB,EAAI,KAAK,YAAY,cAIhIA,EAAc,YAAY,KAAK,cAAc,CAC/C,CAeF,EAbIX,EAAK,UAAO,SAA4BY,EAAG,CACzC,OAAO,IAAKA,GAAKZ,EACnB,EAGAA,EAAK,UAAyBa,EAAkB,CAC9C,KAAMb,EACN,OAAQ,CACN,mBAAoB,CAAC,EAAG,qBAAsB,qBAAsBc,CAAgB,CACtF,EACA,SAAU,CAAIC,CAAwB,CACxC,CAAC,EAzFL,IAAMhB,EAANC,EA4FA,OAAOD,CACT,GAAG,EA0EH,IAAMiB,GAA2CC,GAAgC,CAC/E,QAAS,EACX,CAAC,EAKKC,GAAsB,IAKtBC,GAAyB,IAK3BC,IAAsC,IAAM,CAC9C,IAAMC,EAAN,MAAMA,CAAsB,CAE1B,IAAI,eAAgB,CAClB,OAAO,KAAK,cACd,CACA,IAAI,cAAcC,EAAG,CACnB,IAAMC,EAAQ,MAAMD,CAAC,EAAI,EAAIA,EACzB,KAAK,gBAAkBC,IACzB,KAAK,sBAAwB,GAC7B,KAAK,eAAiBA,EAClB,KAAK,aACP,KAAK,YAAY,iBAAiBA,CAAK,EAG7C,CACA,YAAYC,EAAaC,EAAoBC,EAAgBC,EAAMC,EAASC,EAAWC,EAAgB,CACrG,KAAK,YAAcN,EACnB,KAAK,mBAAqBC,EAC1B,KAAK,eAAiBC,EACtB,KAAK,KAAOC,EACZ,KAAK,QAAUC,EACf,KAAK,UAAYC,EACjB,KAAK,eAAiBC,EAEtB,KAAK,gBAAkB,EAEvB,KAAK,sBAAwB,GAE7B,KAAK,WAAa,IAAIC,EAEtB,KAAK,wBAA0B,GAE/B,KAAK,oBAAsB,GAE3B,KAAK,qBAAuB,GAE5B,KAAK,eAAiB,IAAIA,EAK1B,KAAK,kBAAoB,GACzB,KAAK,eAAiB,EAEtB,KAAK,mBAAqB,IAAIC,GAE9B,KAAK,aAAe,IAAIA,GACxB,KAAK,sBAAwBC,EAAOC,EAAoB,EACxD,KAAK,UAAYD,EAAOE,EAAQ,EAEhCP,EAAQ,kBAAkB,IAAM,CAC9BQ,EAAUZ,EAAY,cAAe,YAAY,EAAE,KAAKa,EAAU,KAAK,UAAU,CAAC,EAAE,UAAU,IAAM,CAClG,KAAK,cAAc,CACrB,CAAC,CACH,CAAC,CACH,CACA,iBAAkB,CAEhBD,EAAU,KAAK,mBAAmB,cAAe,aAAcpB,EAA2B,EAAE,KAAKqB,EAAU,KAAK,UAAU,CAAC,EAAE,UAAU,IAAM,CAC3I,KAAK,sBAAsB,QAAQ,CACrC,CAAC,EACDD,EAAU,KAAK,eAAe,cAAe,aAAcpB,EAA2B,EAAE,KAAKqB,EAAU,KAAK,UAAU,CAAC,EAAE,UAAU,IAAM,CACvI,KAAK,sBAAsB,OAAO,CACpC,CAAC,CACH,CACA,oBAAqB,CACnB,IAAMC,EAAY,KAAK,KAAO,KAAK,KAAK,OAASC,EAAG,KAAK,EAKnDC,EAAS,KAAK,sBAAsB,QAAQ,KAAK,YAAY,aAAa,EAAE,KAAKC,GAAa,EAAE,EAAGJ,EAAU,KAAK,UAAU,CAAC,EAI7HK,EAAiB,KAAK,eAAe,OAAO,GAAG,EAAE,KAAKL,EAAU,KAAK,UAAU,CAAC,EAChFM,EAAU,IAAM,CACpB,KAAK,iBAAiB,EACtB,KAAK,0BAA0B,CACjC,EACA,KAAK,YAAc,IAAIC,GAAgB,KAAK,MAAM,EAAE,0BAA0B,KAAK,oBAAoB,CAAC,EAAE,eAAe,EAAE,SAAS,EAEnI,cAAc,IAAM,EAAK,EAC1B,KAAK,YAAY,iBAAiB,KAAK,cAAc,EAIrDC,GAAgBF,EAAS,CACvB,SAAU,KAAK,SACjB,CAAC,EAGDG,GAAMR,EAAWI,EAAgBF,EAAQ,KAAK,OAAO,QAAS,KAAK,cAAc,CAAC,EAAE,KAAKH,EAAU,KAAK,UAAU,CAAC,EAAE,UAAU,IAAM,CAInI,KAAK,QAAQ,IAAI,IAAM,CACrB,QAAQ,QAAQ,EAAE,KAAK,IAAM,CAE3B,KAAK,gBAAkB,KAAK,IAAI,EAAG,KAAK,IAAI,KAAK,sBAAsB,EAAG,KAAK,eAAe,CAAC,EAC/FM,EAAQ,CACV,CAAC,CACH,CAAC,EACD,KAAK,YAAY,0BAA0B,KAAK,oBAAoB,CAAC,CACvE,CAAC,EAID,KAAK,YAAY,OAAO,UAAUI,GAAiB,CACjD,KAAK,aAAa,KAAKA,CAAa,EACpC,KAAK,aAAaA,CAAa,CACjC,CAAC,CACH,CAEA,eAAgB,CACd,OAAI,OAAO,gBAAmB,WACrBC,GAEF,KAAK,OAAO,QAAQ,KAAKC,GAAU,KAAK,MAAM,EAAGC,EAAUC,GAAY,IAAIC,EAAWC,GAAY,KAAK,QAAQ,kBAAkB,IAAM,CAC5I,IAAMC,EAAiB,IAAI,eAAeC,GAAWF,EAAS,KAAKE,CAAO,CAAC,EAC3E,OAAAJ,EAAS,QAAQK,GAAQF,EAAe,QAAQE,EAAK,WAAW,aAAa,CAAC,EACvE,IAAM,CACXF,EAAe,WAAW,CAC5B,CACF,CAAC,CAAC,CAAC,EAGHG,GAAK,CAAC,EAGNC,EAAOH,GAAWA,EAAQ,KAAK,GAAK,EAAE,YAAY,MAAQ,GAAK,EAAE,YAAY,OAAS,CAAC,CAAC,CAAC,CAC3F,CACA,uBAAwB,CAElB,KAAK,gBAAkB,KAAK,OAAO,SACrC,KAAK,iBAAiB,EACtB,KAAK,eAAiB,KAAK,OAAO,OAClC,KAAK,mBAAmB,aAAa,GAInC,KAAK,wBACP,KAAK,eAAe,KAAK,cAAc,EACvC,KAAK,wBAAwB,EAC7B,KAAK,0BAA0B,EAC/B,KAAK,sBAAwB,GAC7B,KAAK,mBAAmB,aAAa,GAInC,KAAK,yBACP,KAAK,yBAAyB,EAC9B,KAAK,uBAAyB,GAC9B,KAAK,mBAAmB,aAAa,EAEzC,CACA,aAAc,CACZ,KAAK,aAAa,QAAQ,EAC1B,KAAK,WAAW,KAAK,EACrB,KAAK,WAAW,SAAS,EACzB,KAAK,eAAe,SAAS,CAC/B,CAEA,eAAeI,EAAO,CAEpB,GAAI,CAAAC,GAAeD,CAAK,EAGxB,OAAQA,EAAM,QAAS,CACrB,IAAK,IACL,IAAK,IACH,GAAI,KAAK,aAAe,KAAK,cAAe,CAC1C,IAAMH,EAAO,KAAK,OAAO,IAAI,KAAK,UAAU,EACxCA,GAAQ,CAACA,EAAK,WAChB,KAAK,mBAAmB,KAAK,KAAK,UAAU,EAC5C,KAAK,cAAcG,CAAK,EAE5B,CACA,MACF,QACE,KAAK,YAAY,UAAUA,CAAK,CACpC,CACF,CAIA,mBAAoB,CAClB,IAAME,EAAc,KAAK,YAAY,cAAc,YAI/CA,IAAgB,KAAK,sBACvB,KAAK,oBAAsBA,GAAe,GAG1C,KAAK,QAAQ,IAAI,IAAM,CACrB,KAAK,iBAAiB,EACtB,KAAK,0BAA0B,EAC/B,KAAK,mBAAmB,aAAa,CACvC,CAAC,EAEL,CAQA,kBAAmB,CACjB,KAAK,wBAAwB,EAC7B,KAAK,wBAAwB,EAC7B,KAAK,yBAAyB,CAChC,CAEA,IAAI,YAAa,CACf,OAAO,KAAK,YAAc,KAAK,YAAY,gBAAkB,CAC/D,CAEA,IAAI,WAAWtC,EAAO,CAChB,CAAC,KAAK,cAAcA,CAAK,GAAK,KAAK,aAAeA,GAAS,CAAC,KAAK,aAGrE,KAAK,YAAY,cAAcA,CAAK,CACtC,CAKA,cAAcuC,EAAO,CACnB,OAAO,KAAK,OAAS,CAAC,CAAC,KAAK,OAAO,QAAQ,EAAEA,CAAK,EAAI,EACxD,CAKA,aAAaC,EAAU,CAIrB,GAHI,KAAK,yBACP,KAAK,eAAeA,CAAQ,EAE1B,KAAK,QAAU,KAAK,OAAO,OAAQ,CACrC,KAAK,OAAO,QAAQ,EAAEA,CAAQ,EAAE,MAAM,EAItC,IAAMC,EAAc,KAAK,kBAAkB,cAC/B,KAAK,oBAAoB,GAC1B,MACTA,EAAY,WAAa,EAEzBA,EAAY,WAAaA,EAAY,YAAcA,EAAY,WAEnE,CACF,CAEA,qBAAsB,CACpB,OAAO,KAAK,MAAQ,KAAK,KAAK,QAAU,MAAQ,MAAQ,KAC1D,CAEA,0BAA2B,CACzB,GAAI,KAAK,kBACP,OAEF,IAAMC,EAAiB,KAAK,eACtBC,EAAa,KAAK,oBAAoB,IAAM,MAAQ,CAACD,EAAiBA,EAO5E,KAAK,SAAS,cAAc,MAAM,UAAY,cAAc,KAAK,MAAMC,CAAU,CAAC,OAK9E,KAAK,UAAU,SAAW,KAAK,UAAU,QAC3C,KAAK,kBAAkB,cAAc,WAAa,EAEtD,CAEA,IAAI,gBAAiB,CACnB,OAAO,KAAK,eACd,CACA,IAAI,eAAe3C,EAAO,CACxB,KAAK,UAAUA,CAAK,CACtB,CASA,cAAc4C,EAAW,CACvB,IAAMC,EAAa,KAAK,kBAAkB,cAAc,YAElDC,GAAgBF,GAAa,SAAW,GAAK,GAAKC,EAAa,EACrE,OAAO,KAAK,UAAU,KAAK,gBAAkBC,CAAY,CAC3D,CAEA,sBAAsBF,EAAW,CAC/B,KAAK,cAAc,EACnB,KAAK,cAAcA,CAAS,CAC9B,CAOA,eAAeG,EAAY,CACzB,GAAI,KAAK,kBACP,OAEF,IAAMC,EAAgB,KAAK,OAAS,KAAK,OAAO,QAAQ,EAAED,CAAU,EAAI,KACxE,GAAI,CAACC,EACH,OAGF,IAAMH,EAAa,KAAK,kBAAkB,cAAc,YAClD,CACJ,WAAAI,EACA,YAAAC,CACF,EAAIF,EAAc,WAAW,cACzBG,EAAgBC,EAChB,KAAK,oBAAoB,GAAK,OAChCD,EAAiBF,EACjBG,EAAgBD,EAAiBD,IAEjCE,EAAgB,KAAK,cAAc,cAAc,YAAcH,EAC/DE,EAAiBC,EAAgBF,GAEnC,IAAMG,EAAmB,KAAK,eACxBC,EAAkB,KAAK,eAAiBT,EAC1CM,EAAiBE,EAEnB,KAAK,gBAAkBA,EAAmBF,EACjCC,EAAgBE,IAEzB,KAAK,gBAAkB,KAAK,IAAIF,EAAgBE,EAAiBH,EAAiBE,CAAgB,EAEtG,CASA,yBAA0B,CACxB,GAAI,KAAK,kBACP,KAAK,wBAA0B,OAC1B,CACL,IAAME,EAAc,KAAK,cAAc,cAAc,YAC/CC,EAAiB,KAAK,YAAY,cAAc,YAShDC,EAAYF,EAAcC,GAAkB,EAC7CC,IACH,KAAK,eAAiB,GAEpBA,IAAc,KAAK,0BACrB,KAAK,wBAA0BA,EAC/B,KAAK,mBAAmB,aAAa,EAEzC,CACF,CAUA,yBAA0B,CACpB,KAAK,kBACP,KAAK,oBAAsB,KAAK,qBAAuB,IAGvD,KAAK,qBAAuB,KAAK,gBAAkB,EACnD,KAAK,oBAAsB,KAAK,gBAAkB,KAAK,sBAAsB,EAC7E,KAAK,mBAAmB,aAAa,EAEzC,CAQA,uBAAwB,CACtB,IAAMC,EAAkB,KAAK,cAAc,cAAc,YACnDb,EAAa,KAAK,kBAAkB,cAAc,YACxD,OAAOa,EAAkBb,GAAc,CACzC,CAEA,2BAA4B,CAC1B,IAAMc,EAAe,KAAK,QAAU,KAAK,OAAO,OAAS,KAAK,OAAO,QAAQ,EAAE,KAAK,aAAa,EAAI,KAC/FC,EAAuBD,EAAeA,EAAa,WAAW,cAAgB,KAChFC,EACF,KAAK,QAAQ,eAAeA,CAAoB,EAEhD,KAAK,QAAQ,KAAK,CAEtB,CAEA,eAAgB,CACd,KAAK,eAAe,KAAK,CAC3B,CAMA,sBAAsBhB,EAAWiB,EAAY,CAGvCA,GAAcA,EAAW,QAAU,MAAQA,EAAW,SAAW,IAIrE,KAAK,cAAc,EAEnBC,GAAMnE,GAAqBC,EAAsB,EAEhD,KAAKkB,EAAUS,GAAM,KAAK,eAAgB,KAAK,UAAU,CAAC,CAAC,EAAE,UAAU,IAAM,CAC5E,GAAM,CACJ,kBAAAwC,EACA,SAAAC,CACF,EAAI,KAAK,cAAcpB,CAAS,GAE5BoB,IAAa,GAAKA,GAAYD,IAChC,KAAK,cAAc,CAEvB,CAAC,EACH,CAMA,UAAUE,EAAU,CAClB,GAAI,KAAK,kBACP,MAAO,CACL,kBAAmB,EACnB,SAAU,CACZ,EAEF,IAAMF,EAAoB,KAAK,sBAAsB,EACrD,YAAK,gBAAkB,KAAK,IAAI,EAAG,KAAK,IAAIA,EAAmBE,CAAQ,CAAC,EAGxE,KAAK,uBAAyB,GAC9B,KAAK,wBAAwB,EACtB,CACL,kBAAAF,EACA,SAAU,KAAK,eACjB,CACF,CAoBF,EAlBIjE,EAAK,UAAO,SAAuCoE,EAAG,CACpD,OAAO,IAAKA,GAAKpE,GAA0BqE,EAAqBC,CAAU,EAAMD,EAAqBE,EAAiB,EAAMF,EAAqBG,EAAa,EAAMH,EAAqBI,GAAgB,CAAC,EAAMJ,EAAqBK,CAAM,EAAML,EAAqBM,EAAQ,EAAMN,EAAkBO,GAAuB,CAAC,CAAC,CACjU,EAGA5E,EAAK,UAAyB6E,EAAkB,CAC9C,KAAM7E,EACN,OAAQ,CACN,kBAAmB,CAAC,EAAG,oBAAqB,oBAAqB8E,CAAgB,EACjF,cAAe,CAAC,EAAG,gBAAiB,gBAAiBC,EAAe,CACtE,EACA,QAAS,CACP,mBAAoB,qBACpB,aAAc,cAChB,EACA,SAAU,CAAIC,CAAwB,CACxC,CAAC,EAxeL,IAAMjF,EAANC,EA2eA,OAAOD,CACT,GAAG,EAgJH,IAAMkF,GAA+B,IAAIC,EAAe,iBAAiB,EAwsBzE,IAAIC,GAAe,EAKfC,IAA0B,IAAM,CAClC,IAAMC,EAAN,MAAMA,UAAkBC,EAAsB,CAE5C,IAAI,oBAAqB,CACvB,OAAO,KAAK,oBAAoB,KAClC,CACA,IAAI,mBAAmBC,EAAO,CAC5B,KAAK,oBAAoB,KAAKA,CAAK,EACnC,KAAK,mBAAmB,aAAa,CACvC,CACA,IAAI,mBAAoB,CACtB,OAAO,KAAK,kBACd,CACA,IAAI,kBAAkBA,EAAO,CAC3B,IAAMC,EAAcD,EAAQ,GAC5B,KAAK,mBAAqB,QAAQ,KAAKC,CAAW,EAAID,EAAQ,KAAOC,CACvE,CAEA,IAAI,iBAAkB,CACpB,OAAO,KAAK,gBACd,CACA,IAAI,gBAAgBD,EAAO,CACzB,IAAME,EAAY,KAAK,YAAY,cAAc,UACjDA,EAAU,OAAO,2BAA4B,kBAAkB,KAAK,eAAe,EAAE,EACjFF,GACFE,EAAU,IAAI,2BAA4B,kBAAkBF,CAAK,EAAE,EAErE,KAAK,iBAAmBA,CAC1B,CACA,YAAYG,EAAYC,EAAKC,EAAQC,EAAmBC,EAAeC,EAAUC,EAAeC,EAAe,CAC7G,MAAMP,EAAYG,EAAmBC,EAAeH,EAAKC,EAAQG,EAAUC,CAAa,EACxF,KAAK,oBAAsB,IAAIE,GAAgB,EAAK,EAEpD,KAAK,YAAc,GAEnB,KAAK,cAAgB,GAQrB,KAAK,MAAQ,UACb,KAAK,kBAAoBD,GAAiBA,EAAc,mBAAqB,KAAOA,EAAc,kBAAoB,GACtH,KAAK,mBAAqBA,GAAiBA,EAAc,oBAAsB,KAAOA,EAAc,mBAAqB,GACzH,KAAK,YAAcA,GAAiBA,EAAc,aAAe,KAAOA,EAAc,YAAc,EACtG,CACA,eAAgB,CAEhB,CACA,oBAAqB,CACnB,KAAK,QAAU,IAAIE,GAAU,KAAK,MAAM,EAGxC,KAAK,OAAO,QAAQ,KAAKC,GAAU,IAAI,EAAGC,EAAU,KAAK,UAAU,CAAC,EAAE,UAAU,IAAM,CACpF,KAAK,iBAAiB,CACxB,CAAC,EACD,MAAM,mBAAmB,CAC3B,CACA,iBAAkB,CACX,KAAK,SAGV,MAAM,gBAAgB,CACxB,CAEA,kBAAmB,CACjB,GAAI,CAAC,KAAK,OACR,OAEF,IAAMC,EAAQ,KAAK,OAAO,QAAQ,EAClC,QAASC,EAAI,EAAGA,EAAID,EAAM,OAAQC,IAChC,GAAID,EAAMC,CAAC,EAAE,OAAQ,CACnB,KAAK,cAAgBA,EACrB,KAAK,mBAAmB,aAAa,EACjC,KAAK,WACP,KAAK,SAAS,aAAeD,EAAMC,CAAC,EAAE,IAExC,MACF,CAGF,KAAK,cAAgB,GACrB,KAAK,QAAQ,KAAK,CACpB,CACA,UAAW,CACT,OAAO,KAAK,SAAW,UAAY,KAAK,YAAY,cAAc,aAAa,MAAM,CACvF,CAuHF,EArHIlB,EAAK,UAAO,SAA2BmB,EAAG,CACxC,OAAO,IAAKA,GAAKnB,GAAcoB,EAAqBC,CAAU,EAAMD,EAAqBE,GAAgB,CAAC,EAAMF,EAAqBG,CAAM,EAAMH,EAAqBI,EAAiB,EAAMJ,EAAqBK,EAAa,EAAML,EAAqBM,EAAQ,EAAMN,EAAkBO,GAAuB,CAAC,EAAMP,EAAkBQ,GAAiB,CAAC,CAAC,CAC/V,EAGA5B,EAAK,UAAyB6B,EAAkB,CAC9C,KAAM7B,EACN,UAAW,CAAC,CAAC,GAAI,kBAAmB,EAAE,CAAC,EACvC,eAAgB,SAAkC8B,EAAIC,EAAKC,EAAU,CAInE,GAHIF,EAAK,GACJG,GAAeD,EAAUE,GAAY,CAAC,EAEvCJ,EAAK,EAAG,CACV,IAAIK,EACDC,EAAeD,EAAQE,EAAY,CAAC,IAAMN,EAAI,OAASI,EAC5D,CACF,EACA,UAAW,SAAyBL,EAAIC,EAAK,CAQ3C,GAPID,EAAK,IACJQ,EAAYC,GAAK,CAAC,EAClBD,EAAYE,GAAK,CAAC,EAClBF,EAAYG,GAAK,CAAC,EAClBH,EAAYI,GAAK,CAAC,EAClBJ,EAAYK,GAAK,CAAC,GAEnBb,EAAK,EAAG,CACV,IAAIK,EACDC,EAAeD,EAAQE,EAAY,CAAC,IAAMN,EAAI,kBAAoBI,EAAG,OACrEC,EAAeD,EAAQE,EAAY,CAAC,IAAMN,EAAI,SAAWI,EAAG,OAC5DC,EAAeD,EAAQE,EAAY,CAAC,IAAMN,EAAI,cAAgBI,EAAG,OACjEC,EAAeD,EAAQE,EAAY,CAAC,IAAMN,EAAI,eAAiBI,EAAG,OAClEC,EAAeD,EAAQE,EAAY,CAAC,IAAMN,EAAI,mBAAqBI,EAAG,MAC3E,CACF,EACA,UAAW,CAAC,EAAG,sBAAuB,oBAAoB,EAC1D,SAAU,GACV,aAAc,SAAgCL,EAAIC,EAAK,CACjDD,EAAK,IACJc,GAAY,OAAQb,EAAI,SAAS,CAAC,EAClCc,GAAY,+BAAgCd,EAAI,iBAAiB,EACjEe,EAAY,iDAAkDf,EAAI,uBAAuB,EAAE,yBAA0BA,EAAI,oBAAoB,GAAK,KAAK,EAAE,mCAAoCA,EAAI,WAAW,EAAE,cAAeA,EAAI,QAAU,QAAUA,EAAI,QAAU,QAAQ,EAAE,aAAcA,EAAI,QAAU,QAAQ,EAAE,WAAYA,EAAI,QAAU,MAAM,EAAE,0BAA2BA,EAAI,iBAAmB,gBAAgB,EAE9Z,EACA,OAAQ,CACN,mBAAoB,CAAC,EAAG,qBAAsB,qBAAsBgB,CAAgB,EACpF,YAAa,CAAC,EAAG,mBAAoB,cAAeA,CAAgB,EACpE,kBAAmB,oBACnB,gBAAiB,kBACjB,cAAe,CAAC,EAAG,gBAAiB,gBAAiBA,CAAgB,EACrE,MAAO,QACP,SAAU,UACZ,EACA,SAAU,CAAC,eAAgB,WAAW,EACtC,WAAY,GACZ,SAAU,CAAIC,EAA6BC,GAA+BC,CAAmB,EAC7F,MAAOC,GACP,mBAAoBC,GACpB,MAAO,GACP,KAAM,EACN,OAAQ,CAAC,CAAC,oBAAqB,EAAE,EAAG,CAAC,mBAAoB,EAAE,EAAG,CAAC,UAAW,EAAE,EAAG,CAAC,eAAgB,EAAE,EAAG,CAAC,gBAAiB,EAAE,EAAG,CAAC,cAAe,OAAQ,OAAQ,SAAU,aAAc,GAAI,WAAY,KAAM,EAAG,gCAAiC,uCAAwC,EAAG,QAAS,YAAa,WAAY,oBAAqB,UAAU,EAAG,CAAC,EAAG,uCAAuC,EAAG,CAAC,EAAG,6BAA8B,EAAG,SAAS,EAAG,CAAC,EAAG,mBAAoB,EAAG,mBAAmB,EAAG,CAAC,EAAG,mBAAmB,EAAG,CAAC,cAAe,OAAQ,OAAQ,SAAU,aAAc,GAAI,WAAY,KAAM,EAAG,gCAAiC,sCAAuC,EAAG,YAAa,QAAS,WAAY,oBAAqB,UAAU,CAAC,EACruB,SAAU,SAA4BtB,EAAIC,EAAK,CAC7C,GAAID,EAAK,EAAG,CACV,IAAMuB,EAASC,GAAiB,EAC7BC,EAAgB,EAChBC,EAAe,EAAG,SAAU,EAAG,CAAC,EAChCC,EAAW,QAAS,UAAsD,CAC3E,OAAGC,EAAcL,CAAG,EACVM,EAAY5B,EAAI,sBAAsB,QAAQ,CAAC,CAC3D,CAAC,EAAE,YAAa,SAAwD6B,EAAQ,CAC9E,OAAGF,EAAcL,CAAG,EACVM,EAAY5B,EAAI,sBAAsB,SAAU6B,CAAM,CAAC,CACnE,CAAC,EAAE,WAAY,UAAyD,CACtE,OAAGF,EAAcL,CAAG,EACVM,EAAY5B,EAAI,cAAc,CAAC,CAC3C,CAAC,EACE8B,EAAU,EAAG,MAAO,CAAC,EACrBC,EAAa,EACbN,EAAe,EAAG,MAAO,EAAG,CAAC,EAC7BC,EAAW,UAAW,SAAmDG,EAAQ,CAClF,OAAGF,EAAcL,CAAG,EACVM,EAAY5B,EAAI,eAAe6B,CAAM,CAAC,CAClD,CAAC,EACEJ,EAAe,EAAG,MAAO,EAAG,CAAC,EAC7BC,EAAW,oBAAqB,UAA+D,CAChG,OAAGC,EAAcL,CAAG,EACVM,EAAY5B,EAAI,kBAAkB,CAAC,CAC/C,CAAC,EACEyB,EAAe,EAAG,MAAO,EAAG,CAAC,EAC7BO,EAAa,CAAC,EACdD,EAAa,EAAE,EAAE,EACjBN,EAAe,GAAI,SAAU,GAAI,CAAC,EAClCC,EAAW,YAAa,SAAyDG,EAAQ,CAC1F,OAAGF,EAAcL,CAAG,EACVM,EAAY5B,EAAI,sBAAsB,QAAS6B,CAAM,CAAC,CAClE,CAAC,EAAE,QAAS,UAAuD,CACjE,OAAGF,EAAcL,CAAG,EACVM,EAAY5B,EAAI,sBAAsB,OAAO,CAAC,CAC1D,CAAC,EAAE,WAAY,UAA0D,CACvE,OAAG2B,EAAcL,CAAG,EACVM,EAAY5B,EAAI,cAAc,CAAC,CAC3C,CAAC,EACE8B,EAAU,GAAI,MAAO,CAAC,EACtBC,EAAa,CAClB,CACIhC,EAAK,IACJgB,EAAY,yCAA0Cf,EAAI,oBAAoB,EAC9EiC,EAAW,oBAAqBjC,EAAI,sBAAwBA,EAAI,aAAa,EAAE,WAAYA,EAAI,sBAAwB,IAAI,EAC3HkC,EAAU,EAAE,EACZnB,EAAY,yCAA0Cf,EAAI,mBAAmB,EAC7EiC,EAAW,oBAAqBjC,EAAI,qBAAuBA,EAAI,aAAa,EAAE,WAAYA,EAAI,qBAAuB,IAAI,EAEhI,EACA,aAAc,CAACmC,GAAWC,EAAiB,EAC3C,OAAQ,CAAC,qxNAAqxN,EAC9xN,cAAe,CACjB,CAAC,EA5ML,IAAMpE,EAANC,EA+MA,OAAOD,CACT,GAAG,EAOCmC,IAA2B,IAAM,CACnC,IAAMkC,EAAN,MAAMA,UAAmBC,EAAW,CAElC,IAAI,QAAS,CACX,OAAO,KAAK,SACd,CACA,IAAI,OAAOnE,EAAO,CACZA,IAAU,KAAK,YACjB,KAAK,UAAYA,EACjB,KAAK,WAAW,iBAAiB,EAErC,CAKA,IAAI,gBAAiB,CACnB,OAAO,KAAK,UAAY,KAAK,eAAiB,KAAK,WAAW,eAAiB,CAAC,CAAC,KAAK,aAAa,QACrG,CACA,YAAYoE,EAAgCjE,EAAYkE,EAAqBC,EAAUC,EAAe9D,EAAe,CACnH,MAAM,EACN,KAAK,WAAa2D,EAClB,KAAK,WAAajE,EAClB,KAAK,cAAgBoE,EACrB,KAAK,WAAa,IAAIC,EAEtB,KAAK,UAAY,GAEjB,KAAK,SAAW,GAEhB,KAAK,cAAgB,GACrB,KAAK,SAAW,EAEhB,KAAK,GAAK,gBAAgB5E,IAAc,GACxC,KAAK,aAAeyE,GAAuB,CAAC,EAC5C,KAAK,SAAW,SAASC,CAAQ,GAAK,EAClC7D,IAAkB,mBACpB,KAAK,aAAa,UAAY,CAC5B,cAAe,EACf,aAAc,CAChB,GAEF2D,EAAW,oBAAoB,KAAKtD,EAAU,KAAK,UAAU,CAAC,EAAE,UAAU2D,GAAsB,CAC9F,KAAK,mBAAqBA,CAC5B,CAAC,CACH,CAEA,OAAQ,CACN,KAAK,WAAW,cAAc,MAAM,CACtC,CACA,iBAAkB,CAChB,KAAK,cAAc,QAAQ,KAAK,UAAU,CAC5C,CACA,aAAc,CACZ,KAAK,WAAW,KAAK,EACrB,KAAK,WAAW,SAAS,EACzB,MAAM,YAAY,EAClB,KAAK,cAAc,eAAe,KAAK,UAAU,CACnD,CACA,cAAe,CAGb,KAAK,WAAW,WAAa,KAAK,WAAW,OAAO,QAAQ,EAAE,QAAQ,IAAI,CAC5E,CACA,eAAeC,EAAO,EAChBA,EAAM,UAAY,IAASA,EAAM,UAAY,MAC3C,KAAK,SACPA,EAAM,eAAe,EACZ,KAAK,WAAW,WAGrBA,EAAM,UAAY,IACpBA,EAAM,eAAe,EAEvB,KAAK,WAAW,cAAc,MAAM,GAG1C,CACA,kBAAmB,CACjB,OAAO,KAAK,WAAW,SAAW,KAAK,WAAW,UAAU,GAAK,KAAK,WAAW,cAAc,aAAa,eAAe,CAC7H,CACA,kBAAmB,CACjB,OAAI,KAAK,WAAW,SACX,KAAK,OAAS,OAAS,QAEvB,KAAK,WAAW,cAAc,aAAa,eAAe,CAErE,CACA,iBAAkB,CAChB,OAAO,KAAK,QAAU,CAAC,KAAK,WAAW,SAAW,OAAS,IAC7D,CACA,UAAW,CACT,OAAO,KAAK,WAAW,SAAW,MAAQ,KAAK,WAAW,cAAc,aAAa,MAAM,CAC7F,CACA,cAAe,CACb,OAAI,KAAK,WAAW,SACX,KAAK,WAAa,CAAC,KAAK,SAAW,EAAI,GAEvC,KAAK,SAAW,GAAK,KAAK,QAErC,CA2DF,EAzDIR,EAAK,UAAO,SAA4BjD,EAAG,CACzC,OAAO,IAAKA,GAAKiD,GAAehD,EAAkBrB,EAAS,EAAMqB,EAAqBC,CAAU,EAAMD,EAAkByD,GAA2B,CAAC,EAAMC,GAAkB,UAAU,EAAM1D,EAAqB2D,EAAY,EAAM3D,EAAkBO,GAAuB,CAAC,CAAC,CAChR,EAGAyC,EAAK,UAAyBvC,EAAkB,CAC9C,KAAMuC,EACN,UAAW,CAAC,CAAC,GAAI,eAAgB,EAAE,EAAG,CAAC,GAAI,aAAc,EAAE,CAAC,EAC5D,UAAW,CAAC,EAAG,UAAW,mBAAoB,yBAAyB,EACvE,SAAU,GACV,aAAc,SAAiCtC,EAAIC,EAAK,CAClDD,EAAK,GACJ2B,EAAW,QAAS,UAA+C,CACpE,OAAO1B,EAAI,aAAa,CAC1B,CAAC,EAAE,UAAW,SAA+C6B,EAAQ,CACnE,OAAO7B,EAAI,eAAe6B,CAAM,CAClC,CAAC,EAEC9B,EAAK,IACJc,GAAY,gBAAiBb,EAAI,iBAAiB,CAAC,EAAE,eAAgBA,EAAI,gBAAgB,CAAC,EAAE,gBAAiBA,EAAI,QAAQ,EAAE,gBAAiBA,EAAI,iBAAiB,CAAC,EAAE,KAAMA,EAAI,EAAE,EAAE,WAAYA,EAAI,aAAa,CAAC,EAAE,OAAQA,EAAI,SAAS,CAAC,EACxOe,EAAY,uBAAwBf,EAAI,QAAQ,EAAE,kBAAmBA,EAAI,MAAM,EAEtF,EACA,OAAQ,CACN,OAAQ,CAAC,EAAG,SAAU,SAAUgB,CAAgB,EAChD,SAAU,CAAC,EAAG,WAAY,WAAYA,CAAgB,EACtD,cAAe,CAAC,EAAG,gBAAiB,gBAAiBA,CAAgB,EACrE,SAAU,CAAC,EAAG,WAAY,WAAY7C,GAASA,GAAS,KAAO,EAAI8E,GAAgB9E,CAAK,CAAC,EACzF,GAAI,IACN,EACA,SAAU,CAAC,YAAY,EACvB,WAAY,GACZ,SAAU,CAAI8C,EAA6BC,GAA+BC,CAAmB,EAC7F,MAAO+B,GACP,mBAAoB7B,GACpB,MAAO,EACP,KAAM,EACN,OAAQ,CAAC,CAAC,EAAG,iBAAiB,EAAG,CAAC,aAAc,GAAI,EAAG,qBAAsB,EAAG,mBAAoB,mBAAmB,EAAG,CAAC,EAAG,kBAAkB,EAAG,CAAC,EAAG,qBAAqB,CAAC,EAC7K,SAAU,SAA6BtB,EAAIC,EAAK,CAC1CD,EAAK,IACJyB,EAAgB,EAChBM,EAAU,EAAG,OAAQ,CAAC,EAAE,EAAG,MAAO,CAAC,EACnCL,EAAe,EAAG,OAAQ,CAAC,EAAE,EAAG,OAAQ,CAAC,EACzCO,EAAa,CAAC,EACdD,EAAa,EAAE,GAEhBhC,EAAK,IACJmC,EAAU,EACVD,EAAW,mBAAoBjC,EAAI,WAAW,aAAa,EAAE,oBAAqBA,EAAI,cAAc,EAE3G,EACA,aAAc,CAACmC,EAAS,EACxB,OAAQ,CAAC,s9HAAw9H,EACj+H,cAAe,EACf,gBAAiB,CACnB,CAAC,EA5JL,IAAMhC,EAANkC,EA+JA,OAAOlC,CACT,GAAG,EAOCgD,IAA+B,IAAM,CACvC,IAAMC,EAAN,MAAMA,CAAe,CACnB,aAAc,CAEZ,KAAK,GAAK,qBAAqBrF,IAAc,EAC/C,CAoCF,EAlCIqF,EAAK,UAAO,SAAgChE,EAAG,CAC7C,OAAO,IAAKA,GAAKgE,EACnB,EAGAA,EAAK,UAAyBtD,EAAkB,CAC9C,KAAMsD,EACN,UAAW,CAAC,CAAC,mBAAmB,CAAC,EACjC,UAAW,CAAC,OAAQ,WAAY,EAAG,uBAAuB,EAC1D,SAAU,EACV,aAAc,SAAqCrD,EAAIC,EAAK,CACtDD,EAAK,GACJc,GAAY,kBAAmBb,EAAI,YAAY,EAAE,KAAMA,EAAI,EAAE,CAEpE,EACA,OAAQ,CACN,GAAI,IACN,EACA,SAAU,CAAC,gBAAgB,EAC3B,WAAY,GACZ,SAAU,CAAImB,CAAmB,EACjC,mBAAoBE,GACpB,MAAO,EACP,KAAM,EACN,SAAU,SAAiCtB,EAAIC,EAAK,CAC9CD,EAAK,IACJyB,EAAgB,EAChBQ,EAAa,CAAC,EAErB,EACA,cAAe,EACf,gBAAiB,CACnB,CAAC,EAtCL,IAAMmB,EAANC,EAyCA,OAAOD,CACT,GAAG,EAICE,IAA8B,IAAM,CACtC,IAAMC,EAAN,MAAMA,CAAc,CAgBpB,EAdIA,EAAK,UAAO,SAA+BlE,EAAG,CAC5C,OAAO,IAAKA,GAAKkE,EACnB,EAGAA,EAAK,UAAyBC,EAAiB,CAC7C,KAAMD,CACR,CAAC,EAGDA,EAAK,UAAyBE,EAAiB,CAC7C,QAAS,CAACC,EAAiBA,CAAe,CAC5C,CAAC,EAdL,IAAMJ,EAANC,EAiBA,OAAOD,CACT,GAAG,4BEnzESK,EAAA,EAAA,IAAA,CAAA,EAKIC,GAAA,CAAA,EACJC,EAAA,iCAJIC,EAAA,aAAA,MAAAC,EAAAC,GAAA,EAAkC,SAAAC,EAAAC,mBAAAH,EAAAC,GAAA,EAGlCG,EAAA,EAAAC,GAAA,IAAAL,EAAAM,MAAA,GAAA,6BAOAV,EAAA,EAAA,IAAA,EAAIC,GAAA,CAAA,EAAgCC,EAAA,qCAAhCM,EAAA,EAAAG,GAAA,GAAAC,EAAA,EAAA,IAAAC,EAAAC,KAAA,EAAA,GDIpB,IAAaC,IAA0B,IAAA,CAAjC,IAAOA,EAAP,MAAOA,CAA0B,CARvCC,aAAA,CAcuB,KAAAC,oBAAsBA,GACtB,KAAAC,UAAYA,2CAPtBH,EAA0B,sBAA1BA,EAA0BI,UAAA,CAAA,CAAA,yBAAA,CAAA,EAAAC,OAAA,CAAAC,MAAA,QAAAd,iBAAA,kBAAA,EAAAe,WAAA,GAAAC,SAAA,CAAAC,CAAA,EAAAC,MAAA,GAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,WAAA,EAAA,EAAA,CAAA,kBAAA,GAAA,EAAA,UAAA,EAAA,CAAA,eAAA,GAAA,EAAA,aAAA,QAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,IAAAD,EAAA,ICtBvC7B,EAAA,EAAA,UAAA,EAAU,EAAA,MAAA,CAAA,EAEF+B,GAAA,EAAAC,GAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,mBAYJ/B,EAAA,EACAF,EAAA,EAAA,oBAAA,KAAA,CAAA,EAA6B,EAAA,IAAA,EAErB+B,GAAA,EAAAG,GAAA,EAAA,EAAA,KAAA,KAAAD,EAAA,EAGJ/B,EAAA,EAAK,EACW,oBApBCM,EAAA,EAAAL,EAAA,WAAAgC,CAAA,EACjB3B,EAAA,EAAA4B,GAAAC,GAAA,EAAA,EAAAP,EAAAb,oBAAAa,EAAAZ,SAAA,CAAA,EAeIV,EAAA,CAAA,EAAA4B,GAAAN,EAAAT,KAAA,kBDAEiB,GAAcC,GAAaC,GAAEC,GAAaC,GAAAC,GAAAC,GAAEC,GAAYC,EAAA,EAAAC,gBAAA,CAAA,CAAA,EAKhE,IAAOhC,EAAPiC,SAAOjC,CAA0B,GAAA,EENvC,IAAakC,IAAmB,IAAA,CAhBhC,IAAAC,EAAAC,EAgBM,IAAOF,EAAP,MAAOA,CAAmB,CAA1B,cACOG,EAAA,KAAAF,EAAO,GAAGG,GAAYC,UAAU,WAEhCF,EAAA,KAAAD,EAAcI,EAAOC,EAAU,GASxCC,aAGEC,EAASC,EAAsB,CAC7B,OAAOC,EAAA,KAAKT,GAAYU,IAAiB,GAAGD,EAAA,KAAKV,EAAI,IAAIQ,CAAI,GAAI,CAC7DC,OAAAA,EACH,CACL,GAlBST,EAAA,YAEAC,EAAA,kDAHAF,EAAmB,wBAAnBA,EAAmBa,QAAnBb,EAAmBc,UAAAC,WAFhB,MAAM,CAAA,EAEhB,IAAOf,EAAPgB,SAAOhB,CAAmB,GAAA,ECHhC,IAAaiB,IAAe,IAAA,CAAtB,IAAOA,EAAP,MAAOA,CAAe,CAOxBC,yBACIC,EAAiC,CAEjC,GAAM,CAAEC,MAAAA,EAAOC,cAAAA,EAAeC,KAAAA,EAAMC,QAAAA,CAAO,EAAKC,gBAAgBL,CAAK,EACrE,MAAO,CACHC,MAAO,KAAKK,sBAAsBL,CAAK,EACvCC,cAAAA,EACAC,KAAAA,EACAC,QAASA,EAAQG,IAAKC,GAClB,KAAKC,0BAA0BD,CAAM,CAAC,EAGlD,CAQAF,sBAAsBL,EAAY,CAC9B,GAAM,CACFC,cAAAA,EACAC,KAAAA,EACAO,WAAAA,EACAC,aAAAA,EACAC,OAAAA,EACAC,aAAAA,CAAY,EACZR,gBAAgBJ,CAAK,EACzB,MAAO,CACHC,cAAAA,EACAC,KAAAA,EACAO,WAAAA,EACAC,aAAAA,EACAC,OAAAA,EACAC,aAAAA,EAER,CAQAJ,0BAA0BD,EAAiB,CACvC,GAAM,CAAEN,cAAAA,EAAeC,KAAAA,EAAMS,OAAAA,EAAQE,OAAAA,CAAM,EAAKT,gBAAgBG,CAAM,EACtE,MAAO,CAAEN,cAAAA,EAAeC,KAAAA,EAAMS,OAAAA,EAAQE,OAAAA,CAAM,CAChD,yCAvDShB,EAAe,wBAAfA,EAAeiB,QAAfjB,EAAekB,UAAAC,WAFZ,MAAM,CAAA,EAEhB,IAAOnB,EAAPoB,SAAOpB,CAAe,GAAA,ECK5B,IAAaqB,IAAoB,IAAA,CAlBjC,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAkBM,IAAOL,EAAP,MAAOA,CAAoB,CAuD7BM,aAAA,CAtDSC,EAAA,KAAAN,GACAM,EAAA,KAAAL,GAEAK,EAAA,KAAAJ,GAuBAI,EAAA,KAAAH,GAEAG,EAAA,KAAAF,GA5BAG,EAAA,KAAAP,EAAuBQ,EAAOC,EAAmB,GACjDF,EAAA,KAAAN,EAAmBO,EAAOE,EAAe,GAEzCH,EAAA,KAAAL,EAAkBS,GAAuC,CAC9DC,iBAAkB,CACd,CAACC,EAAiBC,SAAS,EAAG,CAAA,EAC9B,CAACD,EAAiBE,UAAU,EAAG,CAAA,EAC/B,CAACF,EAAiBG,QAAQ,EAAG,CAAA,GAEjCC,iBAAkBJ,EAAiBC,UACtC,GAGD,KAAAI,UAAYC,GACR,IACIC,EAAA,KAAKlB,GAAL,WAAuBU,iBACnBQ,EAAA,KAAKlB,GAAL,WAAuBe,gBAAgB,CAC1C,EAGT,KAAAI,mBAAqBF,GACjB,IAAMC,EAAA,KAAKlB,GAAL,WAAuBe,gBAAgB,EAKxCV,EAAA,KAAAJ,EAAuB,IAAImB,GAE3Bf,EAAA,KAAAH,EAAcgB,EAAA,KAAKjB,GAAqBoB,KAC7CC,EAAWC,GAAa,CACpB,IAAMC,EACFN,EAAA,KAAKlB,GAAL,WAAuBU,iBAAiBa,CAAS,EACrD,OAAIC,EAAqBC,OACdC,EAAGF,CAAoB,EAE3BN,EAAA,KAAKpB,GACP6B,aAAmD,SAAU,CAC1DC,WAAYL,EACZM,MAAO,GACPC,OAAQ,EACX,EACAT,KACGU,GAAI,CAAC,CAAEC,MAAAA,CAAK,IACRA,EAAMD,IAAKE,GACPf,EAAA,KAAKnB,GAAiBmC,yBAClBD,CAAI,CACP,CACJ,CACJ,CAEb,CAAC,CAAC,GAMFf,EAAA,KAAKjB,GACAoB,KAAKc,GAAkB,CAAE,EACzBC,UAAWb,GAAa,CACrBL,EAAA,KAAKlB,GAAgBqC,OAChBC,GAA2CC,EAAAC,EAAA,GACrCF,GADqC,CAExCvB,iBAAkBQ,GACpB,CAEV,CAAC,EAELL,EAAA,KAAKhB,GAAYmB,KAAKc,GAAkB,CAAE,EAAEC,UAAWK,GACnDvB,EAAA,KAAKlB,GAAgBqC,OAChBC,GAA2CC,EAAAC,EAAA,GACrCF,GADqC,CAExC5B,iBAAkB6B,EAAAC,EAAA,GACXF,EAAM5B,kBADK,CAEd,CAAC4B,EAAMvB,gBAAgB,EAAG0B,KAEhC,CACL,CAGT,CAQAC,0BAA0BnB,EAA2B,CACjDL,EAAA,KAAKjB,GAAqB0C,KAAKpB,CAAS,CAC5C,GAzFSzB,EAAA,YACAC,EAAA,YAEAC,EAAA,YAuBAC,EAAA,YAEAC,EAAA,kDA7BAL,EAAoB,wBAApBA,EAAoB+C,QAApB/C,EAAoBgD,UAAAC,WAFjB,MAAM,CAAA,EAEhB,IAAOjD,EAAPkD,SAAOlD,CAAoB,GAAA,ECCjC,IAAamD,IAAkB,IAAA,CAAzB,IAAOA,EAAP,MAAOA,CAAkB,CAR/BC,aAAA,CASgC,KAAAC,UACxBC,EAAiBC,UAEF,KAAAC,qBAAuBC,EAAOC,EAAoB,EAErEC,aAAW,CACP,KAAKH,qBAAqBI,0BAA0B,KAAKP,SAAS,CACtE,yCARSF,EAAkB,sBAAlBA,EAAkBU,UAAA,CAAA,CAAA,gBAAA,CAAA,EAAAC,OAAA,CAAAT,UAAA,WAAA,EAAAU,WAAA,GAAAC,SAAA,CAAAC,GAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,OAAA,CAAA,CAAA,EAAA,QAAA,kBAAA,CAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,GCnB/BE,EAAA,EAAA,0BAAA,CAAA,OACIC,EAAA,QAAAF,EAAAhB,qBAAAmB,UAAA,CAAA,EAA0C,mBAAAH,EAAAhB,qBAAAoB,mBAAA,CAAA,iBDahCC,EAA0B,EAAAC,gBAAA,CAAA,CAAA,EAKlC,IAAO3B,EAAP4B,SAAO5B,CAAkB,GAAA,EEb/B,IAAA6B,GAAe,CACX,CACIC,KAAM,aACNC,UAAWC,GACXC,YAAa,CAACC,GAAeC,GAAeC,SAAS,CAAC,GAE1D,CAAEN,KAAM,KAAMO,WAAYC,EAAiBC,SAAS,CAAE","names":["_c0","MAT_CARD_CONFIG","InjectionToken","MatCard","_MatCard","config","t","ɵɵdirectiveInject","ɵɵdefineComponent","rf","ctx","ɵɵclassProp","ɵɵStandaloneFeature","_c0","ɵɵprojectionDef","ɵɵprojection","MatCardModule","_MatCardModule","t","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","CommonModule","SingleBoxSharedResizeObserver","_box","Subject","entries","target","Observable","observer","subscription","filter","entry","shareReplay","takeUntil","SharedResizeObserver","_SharedResizeObserver","inject","NgZone","options","box","t","ɵɵdefineInjectable","_c0","_c1","_c2","_c3","_c4","_c5","_c10","_c11","ACTIVE_CLASS","NO_TRANSITION_CLASS","MatInkBar","_items","item","element","correspondingItem","currentItem","domRect","InkBarItem","_InkBarItem","inject","ElementRef","newValue","previousIndicatorClientRect","currentClientRect","widthDelta","xPosition","documentNode","inkBarElement","inkBarContentElement","parentElement","t","ɵɵdefineDirective","booleanAttribute","ɵɵInputTransformsFeature","passiveEventListenerOptions","normalizePassiveListenerOptions","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_MatPaginatedTabHeader","v","value","_elementRef","_changeDetectorRef","_viewportRuler","_dir","_ngZone","_platform","_animationMode","Subject","EventEmitter","inject","SharedResizeObserver","Injector","fromEvent","takeUntil","dirChange","of","resize","debounceTime","viewportResize","realign","FocusKeyManager","afterNextRender","merge","newFocusIndex","EMPTY","startWith","switchMap","tabItems","Observable","observer","resizeObserver","entries","item","skip","filter","event","hasModifierKey","textContent","index","tabIndex","containerEl","scrollDistance","translateX","direction","viewLength","scrollAmount","labelIndex","selectedLabel","offsetLeft","offsetWidth","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","scrollWidth","containerWidth","isEnabled","lengthOfTabList","selectedItem","selectedLabelWrapper","mouseEvent","timer","maxScrollDistance","distance","position","t","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","ViewportRuler","Directionality","NgZone","Platform","ANIMATION_MODULE_TYPE","ɵɵdefineDirective","booleanAttribute","numberAttribute","ɵɵInputTransformsFeature","MAT_TABS_CONFIG","InjectionToken","nextUniqueId","MatTabNav","_MatTabNav","MatPaginatedTabHeader","value","stringValue","classList","elementRef","dir","ngZone","changeDetectorRef","viewportRuler","platform","animationMode","defaultConfig","BehaviorSubject","MatInkBar","startWith","takeUntil","items","i","t","ɵɵdirectiveInject","ElementRef","Directionality","NgZone","ChangeDetectorRef","ViewportRuler","Platform","ANIMATION_MODULE_TYPE","MAT_TABS_CONFIG","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","MatTabLink","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c1","_c2","_c3","_c4","_c5","ɵɵattribute","ɵɵstyleProp","ɵɵclassProp","booleanAttribute","ɵɵInputTransformsFeature","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","_c10","_c0","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","ɵɵresetView","$event","ɵɵelement","ɵɵelementEnd","ɵɵprojection","ɵɵproperty","ɵɵadvance","MatRipple","CdkObserveContent","_MatTabLink","InkBarItem","_tabNavBar","globalRippleOptions","tabIndex","_focusMonitor","Subject","fitInkBarToContent","event","MAT_RIPPLE_GLOBAL_OPTIONS","ɵɵinjectAttribute","FocusMonitor","numberAttribute","_c11","MatTabNavPanel","_MatTabNavPanel","MatTabsModule","_MatTabsModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","mapping_r1","key","ctx_r1","currentTimeRange","ɵɵadvance","ɵɵtextInterpolate1","value","ɵɵtextInterpolate2","$index_r4","item_r3","name","BaseTabsContainerComponent","constructor","TIME_RANGE_MAPPINGS","keepOrder","selectors","inputs","items","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵrepeaterCreate","BaseTabsContainerComponent_For_3_Template","ɵɵrepeaterTrackByIndex","BaseTabsContainerComponent_For_9_Template","tabPanel_r5","ɵɵrepeater","ɵɵpipeBind2","KeyValuePipe","MatCardModule","MatCard","MatTabsModule","MatTabNav","MatTabNavPanel","MatTabLink","RouterModule","RouterLink","changeDetection","_BaseTabsContainerComponent","TopItemsHTTPService","_url","_httpClient","__privateAdd","environment","apiBaseUrl","inject","HttpClient","getTopItems$","type","params","__privateGet","get","factory","ɵfac","providedIn","_TopItemsHTTPService","TopItemsService","convertTopTrackToLimited","track","album","external_urls","name","artists","structuredClone","convertAlbumToLimited","map","artist","convertTopArtistToLimited","album_type","total_tracks","images","release_date","genres","factory","ɵfac","providedIn","_TopItemsService","TopItemsStateService","_topItemsHTTPService","_topItemsService","_topTracksState","_topTracksTimeRange$","_topTracks$","constructor","__privateAdd","__privateSet","inject","TopItemsHTTPService","TopItemsService","signal","itemsByTimeRange","TimeRangeOptions","ShortTerm","MediumTerm","LongTerm","currentTimeRange","topTracks","computed","__privateGet","topTracksTimeRange","Subject","pipe","switchMap","timeRange","topTracksByTimeRange","length","of","getTopItems$","time_range","limit","offset","map","items","item","convertTopTrackToLimited","takeUntilDestroyed","subscribe","update","state","__spreadProps","__spreadValues","tracks","publishTopTracksTimeRange","next","factory","ɵfac","providedIn","_TopItemsStateService","TopTracksComponent","constructor","timeRange","TimeRangeOptions","ShortTerm","topItemsStateService","inject","TopItemsStateService","ngOnChanges","publishTopTracksTimeRange","selectors","inputs","standalone","features","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵelement","ɵɵproperty","topTracks","topTracksTimeRange","BaseTabsContainerComponent","changeDetection","_TopTracksComponent","top_tracks_routes_default","path","component","TopTracksComponent","canActivate","timeRangeGuard","TopItemsRoutes","TopTracks","redirectTo","TimeRangeOptions","ShortTerm"],"x_google_ignoreList":[0,1,2]}