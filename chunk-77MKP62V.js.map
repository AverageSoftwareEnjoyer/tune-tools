{
  "version": 3,
  "sources": ["src/app/components/routes/playlists/playlists.component.ts", "src/app/components/routes/playlists/playlists.component.html", "src/app/components/routes/playlists/playlists.routes.ts"],
  "sourcesContent": ["import { ChangeDetectionStrategy, Component } from \"@angular/core\";\n\n@Component({\n    selector: \"app-playlists\",\n    standalone: true,\n    imports: [],\n    templateUrl: \"./playlists.component.html\",\n    styleUrl: \"./playlists.component.scss\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlaylistsComponent {}\n", "<p>playlists works!</p>\n", "import { inject } from \"@angular/core\";\nimport { Router, Routes } from \"@angular/router\";\nimport { from, Observable } from \"rxjs\";\n\nimport { PlaylistsComponent } from \"./playlists.component\";\n\nconst playlistGuard = (): Observable<boolean> => {\n    const router = inject(Router);\n\n    // TODO: Update once workflows are introduced.\n    return from(router.navigateByUrl(\"/playlists\"));\n};\n\nexport default [\n    { path: \"\", component: PlaylistsComponent, pathMatch: \"full\" },\n    {\n        path: \"workflows\",\n        component: PlaylistsComponent,\n        canActivate: [playlistGuard],\n    },\n    { path: \"**\", redirectTo: \"\" },\n] as Routes;\n"],
  "mappings": "uJAUA,IAAaA,GAAkB,IAAA,CAAzB,IAAOA,EAAP,MAAOA,CAAkB,yCAAlBA,EAAkB,sBAAlBA,EAAkBC,UAAA,CAAA,CAAA,eAAA,CAAA,EAAAC,WAAA,GAAAC,SAAA,CAAAC,CAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,SAAA,SAAAC,EAAAC,EAAA,CAAAD,EAAA,ICV/BE,EAAA,EAAA,GAAA,EAAGC,EAAA,EAAA,kBAAA,EAAgBC,EAAA,wBDUb,IAAOZ,EAAPa,SAAOb,CAAkB,GAAA,EEJ/B,IAAMc,EAAgBA,IAA0B,CAC5C,IAAMC,EAASC,EAAOC,CAAM,EAG5B,OAAOC,EAAKH,EAAOI,cAAc,YAAY,CAAC,CAClD,EAEAC,EAAe,CACX,CAAEC,KAAM,GAAIC,UAAWC,EAAoBC,UAAW,MAAM,EAC5D,CACIH,KAAM,YACNC,UAAWC,EACXE,YAAa,CAACX,CAAa,GAE/B,CAAEO,KAAM,KAAMK,WAAY,EAAE,CAAE",
  "names": ["PlaylistsComponent", "selectors", "standalone", "features", "\u0275\u0275StandaloneFeature", "decls", "vars", "template", "rf", "ctx", "\u0275\u0275elementStart", "\u0275\u0275text", "\u0275\u0275elementEnd", "_PlaylistsComponent", "playlistGuard", "router", "inject", "Router", "from", "navigateByUrl", "playlists_routes_default", "path", "component", "PlaylistsComponent", "pathMatch", "canActivate", "redirectTo"]
}
