{"version":3,"sources":[".yarn/__virtual__/@angular-material-virtual-6cf3f02363/0/cache/@angular-material-npm-18.2.14-500c83b72e-2bf0928536.zip/node_modules/@angular/material/fesm2022/slide-toggle.mjs","src/app/api/user-http.service.ts","src/app/components/routes/settings/user.service.ts","src/app/state/user-state.service.ts","src/app/components/routes/settings/settings.component.ts","src/app/components/routes/settings/settings.component.html"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport * as i1 from '@angular/cdk/a11y';\nimport { MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst _c0 = [\"switch\"];\nconst _c1 = [\"*\"];\nfunction MatSlideToggle_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 12);\n    i0.ɵɵelement(2, \"path\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"svg\", 14);\n    i0.ɵɵelement(4, \"path\", 15);\n    i0.ɵɵelementEnd()();\n  }\n}\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-slide-toggle-default-options', {\n  providedIn: 'root',\n  factory: () => ({\n    disableToggleValue: false,\n    hideIcon: false,\n    disabledInteractive: false\n  })\n});\n\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSlideToggle),\n  multi: true\n};\n/** Change event object emitted by a slide toggle. */\nclass MatSlideToggleChange {\n  constructor(/** The source slide toggle of the event. */\n  source, /** The new `checked` value of the slide toggle. */\n  checked) {\n    this.source = source;\n    this.checked = checked;\n  }\n}\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\nlet MatSlideToggle = /*#__PURE__*/(() => {\n  class MatSlideToggle {\n    _createChangeEvent(isChecked) {\n      return new MatSlideToggleChange(this, isChecked);\n    }\n    /** Returns the unique id for the visual hidden button. */\n    get buttonId() {\n      return `${this.id || this._uniqueId}-button`;\n    }\n    /** Focuses the slide-toggle. */\n    focus() {\n      this._switchElement.nativeElement.focus();\n    }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n      return this._checked;\n    }\n    set checked(value) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n      return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(_elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode) {\n      this._elementRef = _elementRef;\n      this._focusMonitor = _focusMonitor;\n      this._changeDetectorRef = _changeDetectorRef;\n      this.defaults = defaults;\n      this._onChange = _ => {};\n      this._onTouched = () => {};\n      this._validatorOnChange = () => {};\n      this._checked = false;\n      /** Name value will be applied to the input element if present. */\n      this.name = null;\n      /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n      this.labelPosition = 'after';\n      /** Used to set the aria-label attribute on the underlying input element. */\n      this.ariaLabel = null;\n      /** Used to set the aria-labelledby attribute on the underlying input element. */\n      this.ariaLabelledby = null;\n      /** Whether the slide toggle is disabled. */\n      this.disabled = false;\n      /** Whether the slide toggle has a ripple. */\n      this.disableRipple = false;\n      /** Tabindex of slide toggle. */\n      this.tabIndex = 0;\n      /** An event will be dispatched each time the slide-toggle changes its value. */\n      this.change = new EventEmitter();\n      /**\n       * An event will be dispatched each time the slide-toggle input is toggled.\n       * This event is always emitted when the user toggles the slide toggle, but this does not mean\n       * the slide toggle's value has changed.\n       */\n      this.toggleChange = new EventEmitter();\n      this.tabIndex = parseInt(tabIndex) || 0;\n      this.color = defaults.color || 'accent';\n      this._noopAnimations = animationMode === 'NoopAnimations';\n      this.id = this._uniqueId = `mat-mdc-slide-toggle-${++nextUniqueId}`;\n      this.hideIcon = defaults.hideIcon ?? false;\n      this.disabledInteractive = defaults.disabledInteractive ?? false;\n      this._labelId = this._uniqueId + '-label';\n    }\n    ngAfterContentInit() {\n      this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n        if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n          this._focused = true;\n          this._changeDetectorRef.markForCheck();\n        } else if (!focusOrigin) {\n          // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n          // Angular does not expect events to be raised during change detection, so any state\n          // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n          // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n          // telling the form control it has been touched until the next tick.\n          Promise.resolve().then(() => {\n            this._focused = false;\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n          });\n        }\n      });\n    }\n    ngOnChanges(changes) {\n      if (changes['required']) {\n        this._validatorOnChange();\n      }\n    }\n    ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n      this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /** Implemented as a part of Validator. */\n    validate(control) {\n      return this.required && control.value !== true ? {\n        'required': true\n      } : null;\n    }\n    /** Implemented as a part of Validator. */\n    registerOnValidatorChange(fn) {\n      this._validatorOnChange = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n      this.checked = !this.checked;\n      this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n      this._onChange(this.checked);\n      this.change.emit(this._createChangeEvent(this.checked));\n    }\n    /** Method being called whenever the underlying button is clicked. */\n    _handleClick() {\n      if (!this.disabled) {\n        this.toggleChange.emit();\n        if (!this.defaults.disableToggleValue) {\n          this.checked = !this.checked;\n          this._onChange(this.checked);\n          this.change.emit(new MatSlideToggleChange(this, this.checked));\n        }\n      }\n    }\n    _getAriaLabelledBy() {\n      if (this.ariaLabelledby) {\n        return this.ariaLabelledby;\n      }\n      // Even though we have a `label` element with a `for` pointing to the button, we need the\n      // `aria-labelledby`, because the button gets flagged as not having a label by tools like axe.\n      return this.ariaLabel ? null : this._labelId;\n    }\n    static {\n      this.ɵfac = function MatSlideToggle_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSlideToggle)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSlideToggle,\n        selectors: [[\"mat-slide-toggle\"]],\n        viewQuery: function MatSlideToggle_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._switchElement = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-slide-toggle\"],\n        hostVars: 13,\n        hostBindings: function MatSlideToggle_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"name\", null)(\"aria-labelledby\", null);\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-mdc-slide-toggle-focused\", ctx._focused)(\"mat-mdc-slide-toggle-checked\", ctx.checked)(\"_mat-animation-noopable\", ctx._noopAnimations);\n          }\n        },\n        inputs: {\n          name: \"name\",\n          id: \"id\",\n          labelPosition: \"labelPosition\",\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n          ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n          required: [2, \"required\", \"required\", booleanAttribute],\n          color: \"color\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n          checked: [2, \"checked\", \"checked\", booleanAttribute],\n          hideIcon: [2, \"hideIcon\", \"hideIcon\", booleanAttribute],\n          disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n        },\n        outputs: {\n          change: \"change\",\n          toggleChange: \"toggleChange\"\n        },\n        exportAs: [\"matSlideToggle\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, {\n          provide: NG_VALIDATORS,\n          useExisting: MatSlideToggle,\n          multi: true\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 13,\n        vars: 27,\n        consts: [[\"switch\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"labelPosition\"], [\"role\", \"switch\", \"type\", \"button\", 1, \"mdc-switch\", 3, \"click\", \"tabIndex\", \"disabled\"], [1, \"mdc-switch__track\"], [1, \"mdc-switch__handle-track\"], [1, \"mdc-switch__handle\"], [1, \"mdc-switch__shadow\"], [1, \"mdc-elevation-overlay\"], [1, \"mdc-switch__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-slide-toggle-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mdc-switch__icons\"], [1, \"mdc-label\", 3, \"click\", \"for\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-switch__icon\", \"mdc-switch__icon--on\"], [\"d\", \"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-switch__icon\", \"mdc-switch__icon--off\"], [\"d\", \"M20 13H4v-2h16v2z\"]],\n        template: function MatSlideToggle_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 1)(1, \"button\", 2, 0);\n            i0.ɵɵlistener(\"click\", function MatSlideToggle_Template_button_click_1_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handleClick());\n            });\n            i0.ɵɵelement(3, \"span\", 3);\n            i0.ɵɵelementStart(4, \"span\", 4)(5, \"span\", 5)(6, \"span\", 6);\n            i0.ɵɵelement(7, \"span\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"span\", 8);\n            i0.ɵɵelement(9, \"span\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(10, MatSlideToggle_Conditional_10_Template, 5, 0, \"span\", 10);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(11, \"label\", 11);\n            i0.ɵɵlistener(\"click\", function MatSlideToggle_Template_label_click_11_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView($event.stopPropagation());\n            });\n            i0.ɵɵprojection(12);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            const switch_r2 = i0.ɵɵreference(2);\n            i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"mdc-switch--selected\", ctx.checked)(\"mdc-switch--unselected\", !ctx.checked)(\"mdc-switch--checked\", ctx.checked)(\"mdc-switch--disabled\", ctx.disabled)(\"mat-mdc-slide-toggle-disabled-interactive\", ctx.disabledInteractive);\n            i0.ɵɵproperty(\"tabIndex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"disabled\", ctx.disabled && !ctx.disabledInteractive);\n            i0.ɵɵattribute(\"id\", ctx.buttonId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx._getAriaLabelledBy())(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-required\", ctx.required || null)(\"aria-checked\", ctx.checked)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"matRippleTrigger\", switch_r2)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(!ctx.hideIcon ? 10 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"for\", ctx.buttonId);\n            i0.ɵɵattribute(\"id\", ctx._labelId);\n          }\n        },\n        dependencies: [MatRipple, _MatInternalFormField],\n        styles: [\".mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative;width:var(--mdc-switch-track-width)}.mdc-switch.mdc-switch--disabled{cursor:default;pointer-events:none}.mdc-switch.mat-mdc-slide-toggle-disabled-interactive{pointer-events:auto}.mdc-switch__track{overflow:hidden;position:relative;width:100%;height:var(--mdc-switch-track-height);border-radius:var(--mdc-switch-track-shape, var(--mat-app-corner-full))}.mdc-switch--disabled.mdc-switch .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity)}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%;border-width:var(--mat-switch-track-outline-width);border-color:var(--mat-switch-track-outline-color, var(--mat-app-outline))}.cdk-high-contrast-active .mdc-switch__track::before,.cdk-high-contrast-active .mdc-switch__track::after{border-color:currentColor}.mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track::after{border-width:var(--mat-switch-selected-track-outline-width);border-color:var(--mat-switch-selected-track-outline-color)}.mdc-switch--disabled .mdc-switch__track::before,.mdc-switch--disabled .mdc-switch__track::after{border-width:var(--mat-switch-disabled-unselected-track-outline-width);border-color:var(--mat-switch-disabled-unselected-track-outline-color, var(--mat-app-on-surface))}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0);background:var(--mdc-switch-unselected-track-color, var(--mat-app-surface-variant))}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch--selected .mdc-switch__track::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color, var(--mat-app-surface-variant))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color, var(--mat-app-surface-variant))}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color, var(--mat-app-surface-variant))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::before,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::before,.mdc-switch.mdc-switch--disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color, var(--mat-app-surface-variant))}.mdc-switch__track::after{transform:translateX(-100%);background:var(--mdc-switch-selected-track-color, var(--mat-app-primary))}[dir=rtl] .mdc-switch__track::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::after{transform:translateX(0)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color, var(--mat-app-primary))}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color, var(--mat-app-primary))}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color, var(--mat-app-primary))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__track::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__track::after,.mdc-switch.mdc-switch--disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color, var(--mat-app-on-surface))}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0);width:calc(100% - var(--mdc-switch-handle-width))}[dir=rtl] .mdc-switch__handle-track{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto;transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1);width:var(--mdc-switch-handle-width);height:var(--mdc-switch-handle-height);border-radius:var(--mdc-switch-handle-shape, var(--mat-app-corner-full))}[dir=rtl] .mdc-switch__handle{left:auto;right:0}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-switch-unselected-handle-size);height:var(--mat-switch-unselected-handle-size);margin:var(--mat-switch-unselected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-unselected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-switch-selected-handle-size);height:var(--mat-switch-selected-handle-size);margin:var(--mat-switch-selected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-selected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-switch-with-icon-handle-size);height:var(--mat-switch-with-icon-handle-size)}.mat-mdc-slide-toggle .mdc-switch:active:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-switch-pressed-handle-size);height:var(--mat-switch-pressed-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-selected-pressed-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected:active:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-unselected-pressed-handle-horizontal-margin)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-selected-handle-opacity)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-unselected-handle-opacity)}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}.cdk-high-contrast-active .mdc-switch__handle::before,.cdk-high-contrast-active .mdc-switch__handle::after{border-color:currentColor}.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color, var(--mat-app-on-primary))}.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color, var(--mat-app-primary-container))}.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color, var(--mat-app-primary-container))}.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color, var(--mat-app-primary-container))}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:hover:not(:focus):not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:focus:not(:active) .mdc-switch__handle::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled.mdc-switch--selected:active .mdc-switch__handle::after,.mdc-switch--selected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color, var(--mat-app-surface))}.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color, var(--mat-app-outline))}.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color, var(--mat-app-on-surface-variant))}.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color, var(--mat-app-on-surface-variant))}.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color, var(--mat-app-on-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color, var(--mat-app-on-surface))}.mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color)}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation-shadow)}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:hover:not(:focus):not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:focus:not(:active) .mdc-switch__shadow,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:active .mdc-switch__shadow,.mdc-switch.mdc-switch--disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation-shadow)}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1;width:var(--mdc-switch-state-layer-size);height:var(--mdc-switch-state-layer-size)}.mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mdc-switch--disabled .mdc-switch__ripple::after{display:none}.mat-mdc-slide-toggle-disabled-interactive .mdc-switch__ripple::after{display:block}.mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:75ms opacity cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:focus .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:active .mdc-switch__ripple::after,.mat-mdc-slide-toggle-disabled-interactive.mdc-switch--disabled:enabled:hover:not(:focus) .mdc-switch__ripple::after,.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mdc-switch-unselected-hover-state-layer-color, var(--mat-app-on-surface))}.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background:var(--mdc-switch-unselected-focus-state-layer-color, var(--mat-app-on-surface))}.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background:var(--mdc-switch-unselected-pressed-state-layer-color, var(--mat-app-on-surface));opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background:var(--mdc-switch-selected-hover-state-layer-color, var(--mat-app-primary))}.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background:var(--mdc-switch-selected-focus-state-layer-color, var(--mat-app-primary))}.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background:var(--mdc-switch-selected-pressed-state-layer-color, var(--mat-app-primary));opacity:var(--mdc-switch-selected-pressed-state-layer-opacity, var(--mat-app-pressed-state-layer-opacity));transition:opacity 75ms linear}.mdc-switch__icons{position:relative;height:100%;width:100%;z-index:1}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity)}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size);height:var(--mdc-switch-unselected-icon-size);fill:var(--mdc-switch-unselected-icon-color, var(--mat-app-surface-variant))}.mdc-switch--unselected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color, var(--mat-app-surface-variant))}.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size);height:var(--mdc-switch-selected-icon-size);fill:var(--mdc-switch-selected-icon-color, var(--mat-app-on-primary-container))}.mdc-switch--selected.mdc-switch--disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color, var(--mat-app-on-surface))}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle{-webkit-user-select:none;user-select:none;display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-internal-form-field{color:var(--mat-switch-label-text-color, var(--mat-app-on-surface));font-family:var(--mat-switch-label-text-font, var(--mat-app-body-medium-font));line-height:var(--mat-switch-label-text-line-height, var(--mat-app-body-medium-line-height));font-size:var(--mat-switch-label-text-size, var(--mat-app-body-medium-size));letter-spacing:var(--mat-switch-label-text-tracking, var(--mat-app-body-medium-tracking));font-weight:var(--mat-switch-label-text-weight, var(--mat-app-body-medium-weight))}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mdc-switch-disabled-label-text-color)}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSlideToggle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSlideToggleRequiredValidator),\n  multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nlet MatSlideToggleRequiredValidator = /*#__PURE__*/(() => {\n  class MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatSlideToggleRequiredValidator_BaseFactory;\n        return function MatSlideToggleRequiredValidator_Factory(__ngFactoryType__) {\n          return (ɵMatSlideToggleRequiredValidator_BaseFactory || (ɵMatSlideToggleRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator)))(__ngFactoryType__ || MatSlideToggleRequiredValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSlideToggleRequiredValidator,\n        selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatSlideToggleRequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated No longer used, `MatSlideToggle` implements required validation directly.\n * @breaking-change 19.0.0\n */\nlet _MatSlideToggleRequiredValidatorModule = /*#__PURE__*/(() => {\n  class _MatSlideToggleRequiredValidatorModule {\n    static {\n      this.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || _MatSlideToggleRequiredValidatorModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: _MatSlideToggleRequiredValidatorModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return _MatSlideToggleRequiredValidatorModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSlideToggleModule = /*#__PURE__*/(() => {\n  class MatSlideToggleModule {\n    static {\n      this.ɵfac = function MatSlideToggleModule_Factory(__ngFactoryType__) {\n        return new (__ngFactoryType__ || MatSlideToggleModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatSlideToggleModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatSlideToggle, MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatSlideToggleModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n","import { HttpClient } from \"@angular/common/http\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { environment } from \"@env/environment\";\nimport { UserInfo } from \"@model/user.model\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class UserHTTPService {\n    readonly #url = `${environment.apiBaseUrl}/me`;\n\n    readonly #httpClient = inject(HttpClient);\n\n    /**\n     * Gets the current user info from the Spotify API.\n     *\n     * @returns An observable that emits the current user info.\n     */\n    getUserInfo$(): Observable<UserInfo> {\n        return this.#httpClient.get<UserInfo>(this.#url);\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { UserInfo, UserInfoLimited } from \"@model/user.model\";\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class UserService {\n    /**\n     * Simplifies the `UserInfo` by transforming it to include only essential fields.\n     *\n     * @param userInfo - The object to be converted.\n     * @returns An object containing a subset of properties from the original one.\n     */\n    convertUserInfoToLimited(userInfo: UserInfo): UserInfoLimited {\n        const { country, display_name, external_urls, id, images } =\n            structuredClone(userInfo);\n        return {\n            country,\n            display_name,\n            id,\n            external_urls,\n            images,\n        };\n    }\n}\n","import { computed, inject, Injectable, signal } from \"@angular/core\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { UserHTTPService } from \"@api/user-http.service\";\nimport { Image, UserInfoLimited } from \"@model/user.model\";\nimport { UserService } from \"@routes/settings/user.service\";\nimport { map, Observable, Subject, switchMap } from \"rxjs\";\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class UserStateService {\n    readonly #userHTTPService = inject(UserHTTPService);\n    readonly #userService = inject(UserService);\n\n    readonly #userInfoState = signal<UserInfoLimited | null>(null);\n\n    // #region selectors\n    readonly isUserInfoStateEmpty = computed(() => !this.#userInfoState());\n\n    readonly displayName = computed(\n        () => this.#userInfoState()?.display_name ?? null,\n    );\n\n    readonly id = computed(() => this.#userInfoState()?.id ?? null);\n\n    readonly countryImage = computed<Image>(() => ({\n        url: this.#userInfoState()?.country\n            ? `https://flagsapi.com/${this.#userInfoState()?.country}/flat/64.png`\n            : null,\n        height: null,\n        width: null,\n    }));\n\n    readonly url = computed(\n        () => this.#userInfoState()?.external_urls.spotify ?? null,\n    );\n\n    readonly image = computed(\n        () => this.#userInfoState()?.images.at(-1) ?? null,\n    );\n    // #endregion\n\n    // #region sources\n    readonly #loadUserInfo$ = new Subject<void>();\n\n    readonly #userInfo$: Observable<UserInfoLimited> = this.#loadUserInfo$.pipe(\n        switchMap(() => this.#userHTTPService.getUserInfo$()),\n        map((userInfo) => this.#userService.convertUserInfoToLimited(userInfo)),\n    );\n    // #endregion\n\n    constructor() {\n        // #region reducers\n        this.#userInfo$.pipe(takeUntilDestroyed()).subscribe((userInfo) => {\n            this.#userInfoState.set(userInfo);\n        });\n        // #endregion\n    }\n\n    /**\n     * Publishes a new value to the `#loadUserInfo$` subject, indicating that current user's info\n     * should be loaded.\n     */\n    publishUserInfo(): void {\n        this.#loadUserInfo$.next();\n    }\n}\n","import {\n    ChangeDetectionStrategy,\n    Component,\n    DestroyRef,\n    inject,\n} from \"@angular/core\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\nimport { AuthService } from \"@core/auth/auth.service\";\nimport { ItemImageComponent } from \"@lib/item-image/item-image.component\";\nimport { ImageSizeOptions } from \"@model/image.model\";\nimport { Image } from \"@model/user.model\";\nimport { UserStateService } from \"@state/user-state.service\";\n\n@Component({\n    selector: \"app-settings\",\n    standalone: true,\n    imports: [\n        ItemImageComponent,\n        MatButtonModule,\n        MatCardModule,\n        MatIconModule,\n        MatSlideToggleModule,\n    ],\n    templateUrl: \"./settings.component.html\",\n    styleUrl: \"./settings.component.scss\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SettingsComponent {\n    protected readonly ImageSizeOptions = ImageSizeOptions;\n\n    readonly #authService = inject(AuthService);\n    readonly #destroyRef = inject(DestroyRef);\n    readonly #userStateService = inject(UserStateService);\n\n    constructor() {\n        if (this.#userStateService.isUserInfoStateEmpty()) {\n            this.#userStateService.publishUserInfo();\n        }\n    }\n\n    get countryImage(): Image {\n        return this.#userStateService.countryImage();\n    }\n\n    get displayName(): string | null {\n        return this.#userStateService.displayName();\n    }\n\n    get image(): Image | null {\n        return this.#userStateService.image();\n    }\n\n    get id(): string | null {\n        return this.#userStateService.id();\n    }\n\n    get url(): string | null {\n        return this.#userStateService.url();\n    }\n\n    /**\n     * Logs the current user out.\n     */\n    protected logout(): void {\n        this.#authService\n            .logoutAndRedirect$()\n            .pipe(takeUntilDestroyed(this.#destroyRef))\n            .subscribe();\n    }\n}\n","<mat-card class=\"user__card\">\n    <mat-card-content class=\"user__card-content\">\n        <section class=\"user__info\">\n            @if (image) {\n                <app-item-image\n                    [image]=\"image\"\n                    alt=\"Country flag\"\n                    [imageSize]=\"ImageSizeOptions.Small\"\n                />\n            }\n            <div class=\"user__name\">\n                <h3>{{ displayName }}</h3>\n                <h6>Username: {{ id }}</h6>\n            </div>\n        </section>\n        <app-item-image\n            [image]=\"countryImage\"\n            alt=\"Country flag\"\n            [imageSize]=\"ImageSizeOptions.Small\"\n        />\n        <section class=\"user__section\">\n            <h6>(Coming soon)</h6>\n            <mat-slide-toggle disabled> Toggle dark mode </mat-slide-toggle>\n        </section>\n        <section class=\"user__section\">\n            <button mat-button class=\"mat-color-error\" (click)=\"logout()\">\n                <mat-icon>logout</mat-icon>\n                Log out\n            </button>\n            <a\n                mat-flat-button\n                [href]=\"url\"\n                target=\"_blank\"\n                rel=\"noreferrer noopener\"\n                aria-label=\"View your profile on Spotify\"\n            >\n                <mat-icon>account_circle</mat-icon>\n                View your profile on Spotify\n            </a>\n        </section>\n    </mat-card-content>\n</mat-card>\n"],"mappings":"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","names":["_c0","_c1","MatSlideToggle_Conditional_10_Template","rf","ctx","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","InjectionToken","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatSlideToggle","MatSlideToggleChange","source","checked","nextUniqueId","_MatSlideToggle","isChecked","value","_elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","animationMode","_","EventEmitter","focusOrigin","changes","fn","control","isDisabled","__ngFactoryType__","ɵɵdirectiveInject","ElementRef","FocusMonitor","ChangeDetectorRef","ɵɵinjectAttribute","ANIMATION_MODULE_TYPE","ɵɵdefineComponent","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵhostProperty","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","booleanAttribute","numberAttribute","ɵɵProvidersFeature","NG_VALIDATORS","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵlistener","ɵɵrestoreView","ɵɵresetView","ɵɵtemplate","$event","ɵɵprojection","switch_r2","ɵɵreference","ɵɵproperty","ɵɵadvance","ɵɵconditional","MatRipple","_MatInternalFormField","MatSlideToggleModule","_MatSlideToggleModule","__ngFactoryType__","ɵɵdefineNgModule","ɵɵdefineInjector","MatSlideToggle","MatCommonModule","UserHTTPService","_url","_httpClient","__privateAdd","environment","apiBaseUrl","inject","HttpClient","getUserInfo$","__privateGet","get","factory","ɵfac","providedIn","_UserHTTPService","UserService","convertUserInfoToLimited","userInfo","country","display_name","external_urls","id","images","structuredClone","factory","ɵfac","providedIn","_UserService","UserStateService","_userHTTPService","_userService","_userInfoState","_loadUserInfo$","_userInfo$","constructor","__privateAdd","__privateSet","inject","UserHTTPService","UserService","signal","isUserInfoStateEmpty","computed","__privateGet","displayName","display_name","id","countryImage","url","country","height","width","external_urls","spotify","image","images","at","Subject","pipe","switchMap","getUserInfo$","map","userInfo","convertUserInfoToLimited","takeUntilDestroyed","subscribe","set","publishUserInfo","next","factory","ɵfac","providedIn","_UserStateService","ɵɵelement","ɵɵproperty","ctx_r0","image","ImageSizeOptions","Small","SettingsComponent","_authService","_destroyRef","_userStateService","constructor","__privateAdd","__privateSet","inject","AuthService","DestroyRef","UserStateService","__privateGet","isUserInfoStateEmpty","publishUserInfo","countryImage","displayName","id","url","logout","logoutAndRedirect$","pipe","takeUntilDestroyed","subscribe","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtemplate","SettingsComponent_Conditional_3_Template","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ɵɵadvance","ɵɵconditional","ɵɵtextInterpolate","ɵɵtextInterpolate1","ɵɵsanitizeUrl","ItemImageComponent","MatButtonModule","MatAnchor","MatButton","MatCardModule","MatCard","MatCardContent","MatIconModule","MatIcon","MatSlideToggleModule","MatSlideToggle","styles","changeDetection","_SettingsComponent"],"x_google_ignoreList":[0]}