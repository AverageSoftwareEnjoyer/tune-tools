{"version":3,"sources":["src/app/model/top-items.model.ts","src/app/core/helpers.ts",".yarn/__virtual__/@angular-cdk-virtual-185c92207b/0/cache/@angular-cdk-npm-18.1.0-d1cf9cd478-915d3269f4.zip/node_modules/@angular/cdk/fesm2022/observers/private.mjs",".yarn/__virtual__/@angular-material-virtual-c8c198319b/0/cache/@angular-material-npm-18.1.0-6c22d7bc2c-41f2e84d9c.zip/node_modules/@angular/material/fesm2022/tabs.mjs",".yarn/__virtual__/@angular-cdk-virtual-185c92207b/0/cache/@angular-cdk-npm-18.1.0-d1cf9cd478-915d3269f4.zip/node_modules/@angular/cdk/fesm2022/table.mjs",".yarn/__virtual__/@angular-material-virtual-c8c198319b/0/cache/@angular-material-npm-18.1.0-6c22d7bc2c-41f2e84d9c.zip/node_modules/@angular/material/fesm2022/table.mjs","src/app/model/image.model.ts","src/app/components-library/item-image/item-image.component.ts","src/app/components-library/item-image/item-image.component.html",".yarn/__virtual__/@angular-material-virtual-c8c198319b/0/cache/@angular-material-npm-18.1.0-6c22d7bc2c-41f2e84d9c.zip/node_modules/@angular/material/fesm2022/chips.mjs",".yarn/__virtual__/@angular-cdk-virtual-185c92207b/0/cache/@angular-cdk-npm-18.1.0-d1cf9cd478-915d3269f4.zip/node_modules/@angular/cdk/fesm2022/overlay.mjs",".yarn/__virtual__/@angular-material-virtual-c8c198319b/0/cache/@angular-material-npm-18.1.0-6c22d7bc2c-41f2e84d9c.zip/node_modules/@angular/material/fesm2022/tooltip.mjs","src/app/components/routes/top-tracks/top-tracks-details/top-tracks-details.component.ts","src/app/components/routes/top-tracks/top-tracks-details/top-tracks-details.component.html","src/app/components-library/base-table-container/base-table/base-table.component.ts","src/app/components-library/base-table-container/base-table/base-table.component.html","src/app/components-library/base-tabs-container/base-tabs-container.component.ts","src/app/components-library/base-tabs-container/base-tabs-container.component.html","src/app/api/top-items-http.service.ts","src/app/components/routes/top-items.service.ts","src/app/state/top-items-state.service.ts"],"sourcesContent":["import { ExternalUrls, Followers, Image } from \"./user.model\";\n\nexport interface Restrictions {\n    reason: \"market\" | \"product\" | \"explicit\";\n}\n\nexport interface ExternalIds {\n    isrc: string;\n    ean: string;\n    upc: string;\n}\n\nexport type SimplifiedArtist = Omit<TopItem<\"artist\">, \"popularity\">;\n\nexport interface Album extends Omit<TopItem<\"album\">, \"popularity\"> {\n    album_type: \"ALBUM\" | \"COMPILATION\" | \"EP\" | \"SINGLE\";\n    total_tracks: number;\n    available_markets: string[];\n    images: Image[];\n    release_date: string;\n    release_date_precision: \"year\" | \"month\" | \"day\";\n    restrictions: Restrictions;\n    artists: SimplifiedArtist[];\n}\n\nexport type TopItemsType = \"artists\" | \"tracks\";\n\nexport type TopItemsTypeExtended = TopItemsType | \"genres\";\n\nexport interface TopItemsMappings {\n    artists: TopArtistLimited;\n    tracks: TopTrackLimited;\n    genres: TopGenreLimited;\n}\n\nexport type ItemType = \"artist\" | \"track\" | \"album\";\n\nexport interface TopItem<T extends ItemType> {\n    external_urls: ExternalUrls;\n    href: string;\n    id: string;\n    name: string;\n    popularity: number;\n    type: T;\n    uri: string;\n}\n\nexport interface TopArtist extends TopItem<\"artist\"> {\n    followers: Followers;\n    genres: string[];\n    images: Image[];\n}\n\nexport interface TopTrack<\n    T extends Album | AlbumLimited,\n    U extends SimplifiedArtist | SimplifiedArtistLimited,\n> extends TopItem<\"track\"> {\n    album: T;\n    artists: U[];\n    available_markets: string[];\n    disc_number: number;\n    duration_ms: number;\n    explicit: boolean;\n    external_ids: ExternalIds;\n    restrictions: Restrictions;\n    preview_url: string | null;\n    track_number: number;\n    is_local: boolean;\n}\n\nexport interface TopItems<\n    T extends TopTrack<Album, SimplifiedArtist> | TopArtist,\n> {\n    href: string;\n    limit: number;\n    next: string | null;\n    offset: number;\n    previous: null;\n    total: number;\n    items: T[];\n}\n\nexport type TopArtists = TopItems<TopArtist>;\n\nexport type TopTracks = TopItems<TopTrack<Album, TopArtist>>;\n\nexport enum TimeRangeOptions {\n    ShortTerm = \"short_term\",\n    MediumTerm = \"medium_term\",\n    LongTerm = \"long_term\",\n}\n\nexport enum TimeRangeNames {\n    ShortTerm = \"Last 4 weeks\",\n    MediumTerm = \"Last 6 months\",\n    LongTerm = \"Last year\",\n}\n\nexport const TIME_RANGE_MAPPINGS: Record<TimeRangeOptions, TimeRangeNames> = {\n    [TimeRangeOptions.ShortTerm]: TimeRangeNames.ShortTerm,\n    [TimeRangeOptions.MediumTerm]: TimeRangeNames.MediumTerm,\n    [TimeRangeOptions.LongTerm]: TimeRangeNames.LongTerm,\n} as const;\n\nexport interface TopItemsParams\n    extends Record<string, TimeRangeOptions | number> {\n    time_range: TimeRangeOptions;\n    limit: 50;\n    offset: 0;\n}\n\nexport interface TopItemsByTimeRange<\n    T extends TopTrackLimited | TopArtistLimited | TopGenreLimited,\n> {\n    [TimeRangeOptions.ShortTerm]: T[];\n    [TimeRangeOptions.MediumTerm]: T[];\n    [TimeRangeOptions.LongTerm]: T[];\n}\n\nexport interface TopItemsState<\n    T extends TopTrackLimited | TopArtistLimited | TopGenreLimited,\n> {\n    itemsByTimeRange: TopItemsByTimeRange<T>;\n    currentTimeRange: TimeRangeOptions;\n}\n\nexport type AlbumLimited = Pick<\n    Album,\n    | \"external_urls\"\n    | \"name\"\n    | \"album_type\"\n    | \"total_tracks\"\n    | \"images\"\n    | \"release_date\"\n>;\n\nexport type TopTrackLimited = Pick<\n    TopTrack<AlbumLimited, SimplifiedArtistLimited>,\n    \"album\" | \"external_urls\" | \"name\" | \"artists\"\n>;\n\nexport type TopArtistLimited = Pick<\n    TopArtist,\n    \"external_urls\" | \"name\" | \"images\" | \"genres\"\n>;\n\nexport interface TopGenreLimited {\n    name: string;\n    score: number;\n}\n\nexport type SimplifiedArtistLimited = Pick<TopArtist, \"external_urls\" | \"name\">;\n\nexport enum TopItemsRoutes {\n    TopTracks = \"top-tracks\",\n    TopArtists = \"top-artists\",\n    TopGenres = \"top-genres\",\n}\n\nexport enum TopItemsColumnsKeys {\n    Index = \"index\",\n    Image = \"image\",\n    Name = \"name\",\n    Artists = \"artists\",\n    Link = \"link\",\n    Expand = \"expand\",\n    Genres = \"genres\",\n    Genre = \"genre\",\n    Score = \"score\",\n}\n\nexport const TOP_TRACKS_COLUMNS_MAPPINGS = {\n    [TopItemsColumnsKeys.Index]: \"No.\",\n    [TopItemsColumnsKeys.Image]: \"Album\",\n    [TopItemsColumnsKeys.Name]: \"Name\",\n    [TopItemsColumnsKeys.Artists]: \"Artists\",\n    [TopItemsColumnsKeys.Link]: \"Link\",\n} as const;\n\nexport const TOP_TRACKS_COLUMNS_MAPPINGS_FILTERED = {\n    [TopItemsColumnsKeys.Index]: \"No.\",\n    [TopItemsColumnsKeys.Image]: \"Album\",\n    [TopItemsColumnsKeys.Name]: \"Info\",\n    [TopItemsColumnsKeys.Link]: \"Link\",\n} as const;\n\nexport type TopTracksColumnsMappingsType = typeof TOP_TRACKS_COLUMNS_MAPPINGS;\n\nexport type TopTracksColumnsMappingsFilteredType =\n    typeof TOP_TRACKS_COLUMNS_MAPPINGS_FILTERED;\n\nexport const TOP_ARTISTS_COLUMNS_MAPPINGS = {\n    [TopItemsColumnsKeys.Index]: \"No.\",\n    [TopItemsColumnsKeys.Image]: \"Image\",\n    [TopItemsColumnsKeys.Name]: \"Name\",\n    [TopItemsColumnsKeys.Genres]: \"Genres\",\n    [TopItemsColumnsKeys.Link]: \"Link\",\n} as const;\n\nexport const TOP_ARTISTS_COLUMNS_MAPPINGS_FILTERED = {\n    [TopItemsColumnsKeys.Index]: \"No.\",\n    [TopItemsColumnsKeys.Image]: \"Image\",\n    [TopItemsColumnsKeys.Name]: \"Info\",\n    [TopItemsColumnsKeys.Link]: \"Link\",\n} as const;\n\nexport type TopArtistsColumnsMappingsType = typeof TOP_ARTISTS_COLUMNS_MAPPINGS;\n\nexport type TopArtistsColumnsMappingsFilteredType =\n    typeof TOP_ARTISTS_COLUMNS_MAPPINGS_FILTERED;\n\nexport const TOP_GENRES_COLUMNS_MAPPINGS_FILTERED = {\n    [TopItemsColumnsKeys.Index]: \"No.\",\n    [TopItemsColumnsKeys.Genre]: \"Genre\",\n    [TopItemsColumnsKeys.Score]: \"Score\",\n} as const;\n\nexport type TopGenresColumnsMappingsType =\n    typeof TOP_GENRES_COLUMNS_MAPPINGS_FILTERED;\n\nexport interface TopItemsColumnsMappings {\n    artists:\n        | TopArtistsColumnsMappingsType\n        | TopArtistsColumnsMappingsFilteredType;\n    tracks: TopTracksColumnsMappingsType | TopTracksColumnsMappingsFilteredType;\n    genres: TopGenresColumnsMappingsType;\n}\n","import { inject } from \"@angular/core\";\nimport { CanActivateFn, Router } from \"@angular/router\";\nimport { TimeRangeOptions, TopItemsRoutes } from \"@model/top-items.model\";\n\n/**\n * Checks if the provided value is a valid member of the specified enum-like object.\n * It returns a type guard function that can be used to check if a particular value is one of the\n * values in the enum-like object.\n *\n * @param enumObject - The enum-like object with string keys and values of any type.\n * @returns A function that takes a value of any type and returns `true` if the value is one of\n * the enum-like object's values, and `false` otherwise.\n */\nexport const isAnEnum =\n    <T extends Record<string, unknown>>(enumObject: T) =>\n    (maybeEnum: unknown): maybeEnum is T[keyof T] =>\n        Object.values(enumObject).includes(maybeEnum as T[keyof T]);\n\n/**\n * Creates a route guard function to validate `timeRange` parameters against the `TimeRangeOptions`\n * enum.\n * If the `timeRange` parameter is valid, the navigation proceeds; otherwise, it redirects to a\n * default route.\n *\n * @param baseRoute - The base route to which the user should be redirected if `timeRange` is\n * invalid.\n * @returns A route guard function that checks the validity of the `timeRange` route parameter.\n */\nexport const timeRangeGuard =\n    (baseRoute: TopItemsRoutes): CanActivateFn =>\n    (route) => {\n        if (isAnEnum(TimeRangeOptions)(route.params[\"timeRange\"])) {\n            return true;\n        }\n        return inject(Router).parseUrl(\n            `${baseRoute}/${TimeRangeOptions.ShortTerm}`,\n        );\n    };\n\n/**\n * Gets an element to be compared and returns `0` to maintain the order of key-value pairs received\n * from the KeyValuePipe.\n *\n * @returns `0` to maintain the order of key-value pairs.\n */\nexport const keepOrder = (): 0 => 0;\n","import * as i0 from '@angular/core';\nimport { inject, NgZone, Injectable } from '@angular/core';\nimport { Subject, Observable } from 'rxjs';\nimport { filter, shareReplay, takeUntil } from 'rxjs/operators';\n\n/**\n * Handler that logs \"ResizeObserver loop limit exceeded\" errors.\n * These errors are not shown in the Chrome console, so we log them to ensure developers are aware.\n * @param e The error\n */\nconst loopLimitExceededErrorHandler = e => {\n  if (e instanceof ErrorEvent && e.message === 'ResizeObserver loop limit exceeded') {\n    console.error(`${e.message}. This could indicate a performance issue with your app. See https://github.com/WICG/resize-observer/blob/master/explainer.md#error-handling`);\n  }\n};\n/**\n * A shared ResizeObserver to be used for a particular box type (content-box, border-box, or\n * device-pixel-content-box)\n */\nclass SingleBoxSharedResizeObserver {\n  constructor( /** The box type to observe for resizes. */\n  _box) {\n    this._box = _box;\n    /** Stream that emits when the shared observer is destroyed. */\n    this._destroyed = new Subject();\n    /** Stream of all events from the ResizeObserver. */\n    this._resizeSubject = new Subject();\n    /** A map of elements to streams of their resize events. */\n    this._elementObservables = new Map();\n    if (typeof ResizeObserver !== 'undefined') {\n      this._resizeObserver = new ResizeObserver(entries => this._resizeSubject.next(entries));\n    }\n  }\n  /**\n   * Gets a stream of resize events for the given element.\n   * @param target The element to observe.\n   * @return The stream of resize events for the element.\n   */\n  observe(target) {\n    if (!this._elementObservables.has(target)) {\n      this._elementObservables.set(target, new Observable(observer => {\n        const subscription = this._resizeSubject.subscribe(observer);\n        this._resizeObserver?.observe(target, {\n          box: this._box\n        });\n        return () => {\n          this._resizeObserver?.unobserve(target);\n          subscription.unsubscribe();\n          this._elementObservables.delete(target);\n        };\n      }).pipe(filter(entries => entries.some(entry => entry.target === target)),\n      // Share a replay of the last event so that subsequent calls to observe the same element\n      // receive initial sizing info like the first one. Also enable ref counting so the\n      // element will be automatically unobserved when there are no more subscriptions.\n      shareReplay({\n        bufferSize: 1,\n        refCount: true\n      }), takeUntil(this._destroyed)));\n    }\n    return this._elementObservables.get(target);\n  }\n  /** Destroys this instance. */\n  destroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._resizeSubject.complete();\n    this._elementObservables.clear();\n  }\n}\n/**\n * Allows observing resize events on multiple elements using a shared set of ResizeObserver.\n * Sharing a ResizeObserver instance is recommended for better performance (see\n * https://github.com/WICG/resize-observer/issues/59).\n *\n * Rather than share a single `ResizeObserver`, this class creates one `ResizeObserver` per type\n * of observed box ('content-box', 'border-box', and 'device-pixel-content-box'). This avoids\n * later calls to `observe` with a different box type from influencing the events dispatched to\n * earlier calls.\n */\nlet SharedResizeObserver = /*#__PURE__*/(() => {\n  class SharedResizeObserver {\n    constructor() {\n      /** Map of box type to shared resize observer. */\n      this._observers = new Map();\n      /** The Angular zone. */\n      this._ngZone = inject(NgZone);\n      if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        this._ngZone.runOutsideAngular(() => {\n          window.addEventListener('error', loopLimitExceededErrorHandler);\n        });\n      }\n    }\n    ngOnDestroy() {\n      for (const [, observer] of this._observers) {\n        observer.destroy();\n      }\n      this._observers.clear();\n      if (typeof ResizeObserver !== 'undefined' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        window.removeEventListener('error', loopLimitExceededErrorHandler);\n      }\n    }\n    /**\n     * Gets a stream of resize events for the given target element and box type.\n     * @param target The element to observe for resizes.\n     * @param options Options to pass to the `ResizeObserver`\n     * @return The stream of resize events for the element.\n     */\n    observe(target, options) {\n      const box = options?.box || 'content-box';\n      if (!this._observers.has(box)) {\n        this._observers.set(box, new SingleBoxSharedResizeObserver(box));\n      }\n      return this._observers.get(box).observe(target);\n    }\n    static {\n      this.ɵfac = function SharedResizeObserver_Factory(t) {\n        return new (t || SharedResizeObserver)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: SharedResizeObserver,\n        factory: SharedResizeObserver.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return SharedResizeObserver;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SharedResizeObserver };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Optional, booleanAttribute, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, Input, ContentChild, ViewChild, inject, ElementRef, EventEmitter, Injector, afterNextRender, ANIMATION_MODULE_TYPE, numberAttribute, Output, ContentChildren, forwardRef, QueryList, Attribute, NgModule } from '@angular/core';\nimport { MatRipple, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule } from '@angular/material/core';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet } from '@angular/cdk/portal';\nimport { Subject, fromEvent, of, merge, EMPTY, Observable, timer, Subscription, BehaviorSubject } from 'rxjs';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollable } from '@angular/cdk/scrolling';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport * as i2 from '@angular/cdk/bidi';\nimport * as i4 from '@angular/cdk/a11y';\nimport { FocusKeyManager, CdkMonitorFocus } from '@angular/cdk/a11y';\nimport { hasModifierKey, SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { SharedResizeObserver } from '@angular/cdk/observers/private';\nimport { takeUntil, debounceTime, startWith, switchMap, skip, filter, distinctUntilChanged } from 'rxjs/operators';\nimport { CdkObserveContent } from '@angular/cdk/observers';\nimport { DOCUMENT } from '@angular/common';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst _c0 = [\"*\"];\nfunction MatTab_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nconst _c1 = [\"tabListContainer\"];\nconst _c2 = [\"tabList\"];\nconst _c3 = [\"tabListInner\"];\nconst _c4 = [\"nextPaginator\"];\nconst _c5 = [\"previousPaginator\"];\nconst _c6 = a0 => ({\n  animationDuration: a0\n});\nconst _c7 = (a0, a1) => ({\n  value: a0,\n  params: a1\n});\nfunction MatTabBody_ng_template_2_Template(rf, ctx) {}\nconst _c8 = [\"tabBodyWrapper\"];\nconst _c9 = [\"tabHeader\"];\nfunction MatTabGroup_For_3_Conditional_6_ng_template_0_Template(rf, ctx) {}\nfunction MatTabGroup_For_3_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatTabGroup_For_3_Conditional_6_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n  }\n}\nfunction MatTabGroup_For_3_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const tab_r4 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate(tab_r4.textLabel);\n  }\n}\nfunction MatTabGroup_For_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7, 2);\n    i0.ɵɵlistener(\"click\", function MatTabGroup_For_3_Template_div_click_0_listener() {\n      const ctx_r2 = i0.ɵɵrestoreView(_r2);\n      const tab_r4 = ctx_r2.$implicit;\n      const ɵ$index_3_r5 = ctx_r2.$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      const tabHeader_r7 = i0.ɵɵreference(1);\n      return i0.ɵɵresetView(ctx_r5._handleClick(tab_r4, tabHeader_r7, ɵ$index_3_r5));\n    })(\"cdkFocusChange\", function MatTabGroup_For_3_Template_div_cdkFocusChange_0_listener($event) {\n      const ɵ$index_3_r5 = i0.ɵɵrestoreView(_r2).$index;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._tabFocusChanged($event, ɵ$index_3_r5));\n    });\n    i0.ɵɵelement(2, \"span\", 8)(3, \"div\", 9);\n    i0.ɵɵelementStart(4, \"span\", 10)(5, \"span\", 11);\n    i0.ɵɵtemplate(6, MatTabGroup_For_3_Conditional_6_Template, 1, 1, null, 12)(7, MatTabGroup_For_3_Conditional_7_Template, 1, 1);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const ɵ$index_3_r5 = ctx.$index;\n    const tabNode_r8 = i0.ɵɵreference(1);\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r4.labelClass);\n    i0.ɵɵclassProp(\"mdc-tab--active\", ctx_r5.selectedIndex === ɵ$index_3_r5);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabLabelId(ɵ$index_3_r5))(\"disabled\", tab_r4.disabled)(\"fitInkBarToContent\", ctx_r5.fitInkBarToContent);\n    i0.ɵɵattribute(\"tabIndex\", ctx_r5._getTabIndex(ɵ$index_3_r5))(\"aria-posinset\", ɵ$index_3_r5 + 1)(\"aria-setsize\", ctx_r5._tabs.length)(\"aria-controls\", ctx_r5._getTabContentId(ɵ$index_3_r5))(\"aria-selected\", ctx_r5.selectedIndex === ɵ$index_3_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matRippleTrigger\", tabNode_r8)(\"matRippleDisabled\", tab_r4.disabled || ctx_r5.disableRipple);\n    i0.ɵɵadvance(3);\n    i0.ɵɵconditional(tab_r4.templateLabel ? 6 : 7);\n  }\n}\nfunction MatTabGroup_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0);\n  }\n}\nfunction MatTabGroup_For_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-tab-body\", 13);\n    i0.ɵɵlistener(\"_onCentered\", function MatTabGroup_For_8_Template_mat_tab_body__onCentered_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._removeTabBodyWrapperHeight());\n    })(\"_onCentering\", function MatTabGroup_For_8_Template_mat_tab_body__onCentering_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5._setTabBodyWrapperHeight($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tab_r10 = ctx.$implicit;\n    const ɵ$index_23_r11 = ctx.$index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(tab_r10.bodyClass);\n    i0.ɵɵclassProp(\"mat-mdc-tab-body-active\", ctx_r5.selectedIndex === ɵ$index_23_r11);\n    i0.ɵɵproperty(\"id\", ctx_r5._getTabContentId(ɵ$index_23_r11))(\"content\", tab_r10.content)(\"position\", tab_r10.position)(\"origin\", tab_r10.origin)(\"animationDuration\", ctx_r5.animationDuration)(\"preserveContent\", ctx_r5.preserveContent);\n    i0.ɵɵattribute(\"tabindex\", ctx_r5.contentTabIndex != null && ctx_r5.selectedIndex === ɵ$index_23_r11 ? ctx_r5.contentTabIndex : null)(\"aria-labelledby\", ctx_r5._getTabLabelId(ɵ$index_23_r11))(\"aria-hidden\", ctx_r5.selectedIndex !== ɵ$index_23_r11);\n  }\n}\nconst _c10 = [\"mat-tab-nav-bar\", \"\"];\nconst _c11 = [\"mat-tab-link\", \"\"];\nconst MAT_TAB_CONTENT = /*#__PURE__*/new InjectionToken('MatTabContent');\n/** Decorates the `ng-template` tags and reads out the template from it. */\nlet MatTabContent = /*#__PURE__*/(() => {\n  class MatTabContent {\n    constructor( /** Content for the tab. */template) {\n      this.template = template;\n    }\n    static {\n      this.ɵfac = function MatTabContent_Factory(t) {\n        return new (t || MatTabContent)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatTabContent,\n        selectors: [[\"\", \"matTabContent\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_TAB_CONTENT,\n          useExisting: MatTabContent\n        }])]\n      });\n    }\n  }\n  return MatTabContent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_TAB_LABEL = /*#__PURE__*/new InjectionToken('MatTabLabel');\n/**\n * Used to provide a tab label to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB = /*#__PURE__*/new InjectionToken('MAT_TAB');\n/** Used to flag tab labels for use with the portal directive */\nlet MatTabLabel = /*#__PURE__*/(() => {\n  class MatTabLabel extends CdkPortal {\n    constructor(templateRef, viewContainerRef, _closestTab) {\n      super(templateRef, viewContainerRef);\n      this._closestTab = _closestTab;\n    }\n    static {\n      this.ɵfac = function MatTabLabel_Factory(t) {\n        return new (t || MatTabLabel)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatTabLabel,\n        selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_TAB_LABEL,\n          useExisting: MatTabLabel\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatTabLabel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nconst MAT_TAB_GROUP = /*#__PURE__*/new InjectionToken('MAT_TAB_GROUP');\nlet MatTab = /*#__PURE__*/(() => {\n  class MatTab {\n    /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n    get templateLabel() {\n      return this._templateLabel;\n    }\n    set templateLabel(value) {\n      this._setTemplateLabelInput(value);\n    }\n    /** @docs-private */\n    get content() {\n      return this._contentPortal;\n    }\n    constructor(_viewContainerRef, _closestTabGroup) {\n      this._viewContainerRef = _viewContainerRef;\n      this._closestTabGroup = _closestTabGroup;\n      /** whether the tab is disabled. */\n      this.disabled = false;\n      /**\n       * Template provided in the tab content that will be used if present, used to enable lazy-loading\n       */\n      this._explicitContent = undefined;\n      /** Plain text label for the tab, used when there is no template label. */\n      this.textLabel = '';\n      /** Portal that will be the hosted content of the tab */\n      this._contentPortal = null;\n      /** Emits whenever the internal state of the tab changes. */\n      this._stateChanges = new Subject();\n      /**\n       * The relatively indexed position where 0 represents the center, negative is left, and positive\n       * represents the right.\n       */\n      this.position = null;\n      /**\n       * The initial relatively index origin of the tab if it was created and selected after there\n       * was already a selected tab. Provides context of what position the tab should originate from.\n       */\n      this.origin = null;\n      /**\n       * Whether the tab is currently active.\n       */\n      this.isActive = false;\n    }\n    ngOnChanges(changes) {\n      if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n        this._stateChanges.next();\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    ngOnInit() {\n      this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setTemplateLabelInput(value) {\n      // Only update the label if the query managed to find one. This works around an issue where a\n      // user may have manually set `templateLabel` during creation mode, which would then get\n      // clobbered by `undefined` when the query resolves. Also note that we check that the closest\n      // tab matches the current one so that we don't pick up labels from nested tabs.\n      if (value && value._closestTab === this) {\n        this._templateLabel = value;\n      }\n    }\n    static {\n      this.ɵfac = function MatTab_Factory(t) {\n        return new (t || MatTab)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTab,\n        selectors: [[\"mat-tab\"]],\n        contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatTabLabel, 5);\n            i0.ɵɵcontentQuery(dirIndex, MatTabContent, 7, TemplateRef);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n          }\n        },\n        viewQuery: function MatTab_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(TemplateRef, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n          }\n        },\n        hostAttrs: [\"hidden\", \"\"],\n        inputs: {\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          textLabel: [0, \"label\", \"textLabel\"],\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n          labelClass: \"labelClass\",\n          bodyClass: \"bodyClass\"\n        },\n        exportAs: [\"matTab\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_TAB,\n          useExisting: MatTab\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatTab_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n          }\n        },\n        encapsulation: 2\n      });\n    }\n  }\n  return MatTab;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Class that is applied when a tab indicator is active. */\nconst ACTIVE_CLASS = 'mdc-tab-indicator--active';\n/** Class that is applied when the tab indicator should not transition. */\nconst NO_TRANSITION_CLASS = 'mdc-tab-indicator--no-transition';\n/**\n * Abstraction around the MDC tab indicator that acts as the tab header's ink bar.\n * @docs-private\n */\nclass MatInkBar {\n  constructor(_items) {\n    this._items = _items;\n  }\n  /** Hides the ink bar. */\n  hide() {\n    this._items.forEach(item => item.deactivateInkBar());\n  }\n  /** Aligns the ink bar to a DOM node. */\n  alignToElement(element) {\n    const correspondingItem = this._items.find(item => item.elementRef.nativeElement === element);\n    const currentItem = this._currentItem;\n    if (correspondingItem === currentItem) {\n      return;\n    }\n    currentItem?.deactivateInkBar();\n    if (correspondingItem) {\n      const domRect = currentItem?.elementRef.nativeElement.getBoundingClientRect?.();\n      // The ink bar won't animate unless we give it the `DOMRect` of the previous item.\n      correspondingItem.activateInkBar(domRect);\n      this._currentItem = correspondingItem;\n    }\n  }\n}\nlet InkBarItem = /*#__PURE__*/(() => {\n  class InkBarItem {\n    constructor() {\n      this._elementRef = inject(ElementRef);\n      this._fitToContent = false;\n    }\n    /** Whether the ink bar should fit to the entire tab or just its content. */\n    get fitInkBarToContent() {\n      return this._fitToContent;\n    }\n    set fitInkBarToContent(newValue) {\n      if (this._fitToContent !== newValue) {\n        this._fitToContent = newValue;\n        if (this._inkBarElement) {\n          this._appendInkBarElement();\n        }\n      }\n    }\n    /** Aligns the ink bar to the current item. */\n    activateInkBar(previousIndicatorClientRect) {\n      const element = this._elementRef.nativeElement;\n      // Early exit if no indicator is present to handle cases where an indicator\n      // may be activated without a prior indicator state\n      if (!previousIndicatorClientRect || !element.getBoundingClientRect || !this._inkBarContentElement) {\n        element.classList.add(ACTIVE_CLASS);\n        return;\n      }\n      // This animation uses the FLIP approach. You can read more about it at the link below:\n      // https://aerotwist.com/blog/flip-your-animations/\n      // Calculate the dimensions based on the dimensions of the previous indicator\n      const currentClientRect = element.getBoundingClientRect();\n      const widthDelta = previousIndicatorClientRect.width / currentClientRect.width;\n      const xPosition = previousIndicatorClientRect.left - currentClientRect.left;\n      element.classList.add(NO_TRANSITION_CLASS);\n      this._inkBarContentElement.style.setProperty('transform', `translateX(${xPosition}px) scaleX(${widthDelta})`);\n      // Force repaint before updating classes and transform to ensure the transform properly takes effect\n      element.getBoundingClientRect();\n      element.classList.remove(NO_TRANSITION_CLASS);\n      element.classList.add(ACTIVE_CLASS);\n      this._inkBarContentElement.style.setProperty('transform', '');\n    }\n    /** Removes the ink bar from the current item. */\n    deactivateInkBar() {\n      this._elementRef.nativeElement.classList.remove(ACTIVE_CLASS);\n    }\n    /** Initializes the foundation. */\n    ngOnInit() {\n      this._createInkBarElement();\n    }\n    /** Destroys the foundation. */\n    ngOnDestroy() {\n      this._inkBarElement?.remove();\n      this._inkBarElement = this._inkBarContentElement = null;\n    }\n    /** Creates and appends the ink bar element. */\n    _createInkBarElement() {\n      const documentNode = this._elementRef.nativeElement.ownerDocument || document;\n      const inkBarElement = this._inkBarElement = documentNode.createElement('span');\n      const inkBarContentElement = this._inkBarContentElement = documentNode.createElement('span');\n      inkBarElement.className = 'mdc-tab-indicator';\n      inkBarContentElement.className = 'mdc-tab-indicator__content mdc-tab-indicator__content--underline';\n      inkBarElement.appendChild(this._inkBarContentElement);\n      this._appendInkBarElement();\n    }\n    /**\n     * Appends the ink bar to the tab host element or content, depending on whether\n     * the ink bar should fit to content.\n     */\n    _appendInkBarElement() {\n      if (!this._inkBarElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Ink bar element has not been created and cannot be appended');\n      }\n      const parentElement = this._fitToContent ? this._elementRef.nativeElement.querySelector('.mdc-tab__content') : this._elementRef.nativeElement;\n      if (!parentElement && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Missing element to host the ink bar');\n      }\n      parentElement.appendChild(this._inkBarElement);\n    }\n    static {\n      this.ɵfac = function InkBarItem_Factory(t) {\n        return new (t || InkBarItem)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: InkBarItem,\n        inputs: {\n          fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute]\n        },\n        features: [i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return InkBarItem;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n  const method = element => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0'\n  });\n  return method;\n}\n/** Injection token for the MatInkBar's Positioner. */\nconst _MAT_INK_BAR_POSITIONER = /*#__PURE__*/new InjectionToken('MatInkBarPositioner', {\n  providedIn: 'root',\n  factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\nlet MatTabLabelWrapper = /*#__PURE__*/(() => {\n  class MatTabLabelWrapper extends InkBarItem {\n    constructor(elementRef) {\n      super();\n      this.elementRef = elementRef;\n      /** Whether the tab is disabled. */\n      this.disabled = false;\n    }\n    /** Sets focus on the wrapper element */\n    focus() {\n      this.elementRef.nativeElement.focus();\n    }\n    getOffsetLeft() {\n      return this.elementRef.nativeElement.offsetLeft;\n    }\n    getOffsetWidth() {\n      return this.elementRef.nativeElement.offsetWidth;\n    }\n    static {\n      this.ɵfac = function MatTabLabelWrapper_Factory(t) {\n        return new (t || MatTabLabelWrapper)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatTabLabelWrapper,\n        selectors: [[\"\", \"matTabLabelWrapper\", \"\"]],\n        hostVars: 3,\n        hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n            i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled);\n          }\n        },\n        inputs: {\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatTabLabelWrapper;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\nlet MatPaginatedTabHeader = /*#__PURE__*/(() => {\n  class MatPaginatedTabHeader {\n    /** The index of the active tab. */\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n    set selectedIndex(v) {\n      const value = isNaN(v) ? 0 : v;\n      if (this._selectedIndex != value) {\n        this._selectedIndexChanged = true;\n        this._selectedIndex = value;\n        if (this._keyManager) {\n          this._keyManager.updateActiveItem(value);\n        }\n      }\n    }\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._viewportRuler = _viewportRuler;\n      this._dir = _dir;\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      this._animationMode = _animationMode;\n      /** The distance in pixels that the tab labels should be translated to the left. */\n      this._scrollDistance = 0;\n      /** Whether the header should scroll to the selected index after the view has been checked. */\n      this._selectedIndexChanged = false;\n      /** Emits when the component is destroyed. */\n      this._destroyed = new Subject();\n      /** Whether the controls for pagination should be displayed */\n      this._showPaginationControls = false;\n      /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n      this._disableScrollAfter = true;\n      /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n      this._disableScrollBefore = true;\n      /** Stream that will stop the automated scrolling. */\n      this._stopScrolling = new Subject();\n      /**\n       * Whether pagination should be disabled. This can be used to avoid unnecessary\n       * layout recalculations if it's known that pagination won't be required.\n       */\n      this.disablePagination = false;\n      this._selectedIndex = 0;\n      /** Event emitted when the option is selected. */\n      this.selectFocusedIndex = new EventEmitter();\n      /** Event emitted when a label is focused. */\n      this.indexFocused = new EventEmitter();\n      this._sharedResizeObserver = inject(SharedResizeObserver);\n      this._injector = inject(Injector);\n      // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n      _ngZone.runOutsideAngular(() => {\n        fromEvent(_elementRef.nativeElement, 'mouseleave').pipe(takeUntil(this._destroyed)).subscribe(() => {\n          this._stopInterval();\n        });\n      });\n    }\n    ngAfterViewInit() {\n      // We need to handle these events manually, because we want to bind passive event listeners.\n      fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._handlePaginatorPress('before');\n      });\n      fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._handlePaginatorPress('after');\n      });\n    }\n    ngAfterContentInit() {\n      const dirChange = this._dir ? this._dir.change : of('ltr');\n      // We need to debounce resize events because the alignment logic is expensive.\n      // If someone animates the width of tabs, we don't want to realign on every animation frame.\n      // Once we haven't seen any more resize events in the last 32ms (~2 animaion frames) we can\n      // re-align.\n      const resize = this._sharedResizeObserver.observe(this._elementRef.nativeElement).pipe(debounceTime(32), takeUntil(this._destroyed));\n      // Note: We do not actually need to watch these events for proper functioning of the tabs,\n      // the resize events above should capture any viewport resize that we care about. However,\n      // removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n      const viewportResize = this._viewportRuler.change(150).pipe(takeUntil(this._destroyed));\n      const realign = () => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n      };\n      this._keyManager = new FocusKeyManager(this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap()\n      // Allow focus to land on disabled tabs, as per https://w3c.github.io/aria-practices/#kbd_disabled_controls\n      .skipPredicate(() => false);\n      this._keyManager.updateActiveItem(this._selectedIndex);\n      // Note: We do not need to realign after the first render for proper functioning of the tabs\n      // the resize events above should fire when we first start observing the element. However,\n      // removing this is fairly breaking for screenshot tests, so we're leaving it here for now.\n      afterNextRender(realign, {\n        injector: this._injector\n      });\n      // On dir change or resize, realign the ink bar and update the orientation of\n      // the key manager if the direction has changed.\n      merge(dirChange, viewportResize, resize, this._items.changes, this._itemsResized()).pipe(takeUntil(this._destroyed)).subscribe(() => {\n        // We need to defer this to give the browser some time to recalculate\n        // the element dimensions. The call has to be wrapped in `NgZone.run`,\n        // because the viewport change handler runs outside of Angular.\n        this._ngZone.run(() => {\n          Promise.resolve().then(() => {\n            // Clamp the scroll distance, because it can change with the number of tabs.\n            this._scrollDistance = Math.max(0, Math.min(this._getMaxScrollDistance(), this._scrollDistance));\n            realign();\n          });\n        });\n        this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n      });\n      // If there is a change in the focus key manager we need to emit the `indexFocused`\n      // event in order to provide a public event that notifies about focus changes. Also we realign\n      // the tabs container by scrolling the new focused tab into the visible section.\n      this._keyManager.change.subscribe(newFocusIndex => {\n        this.indexFocused.emit(newFocusIndex);\n        this._setTabFocus(newFocusIndex);\n      });\n    }\n    /** Sends any changes that could affect the layout of the items. */\n    _itemsResized() {\n      if (typeof ResizeObserver !== 'function') {\n        return EMPTY;\n      }\n      return this._items.changes.pipe(startWith(this._items), switchMap(tabItems => new Observable(observer => this._ngZone.runOutsideAngular(() => {\n        const resizeObserver = new ResizeObserver(entries => observer.next(entries));\n        tabItems.forEach(item => resizeObserver.observe(item.elementRef.nativeElement));\n        return () => {\n          resizeObserver.disconnect();\n        };\n      }))),\n      // Skip the first emit since the resize observer emits when an item\n      // is observed for new items when the tab is already inserted\n      skip(1),\n      // Skip emissions where all the elements are invisible since we don't want\n      // the header to try and re-render with invalid measurements. See #25574.\n      filter(entries => entries.some(e => e.contentRect.width > 0 && e.contentRect.height > 0)));\n    }\n    ngAfterContentChecked() {\n      // If the number of tab labels have changed, check if scrolling should be enabled\n      if (this._tabLabelCount != this._items.length) {\n        this.updatePagination();\n        this._tabLabelCount = this._items.length;\n        this._changeDetectorRef.markForCheck();\n      }\n      // If the selected index has changed, scroll to the label and check if the scrolling controls\n      // should be disabled.\n      if (this._selectedIndexChanged) {\n        this._scrollToLabel(this._selectedIndex);\n        this._checkScrollingControls();\n        this._alignInkBarToSelectedTab();\n        this._selectedIndexChanged = false;\n        this._changeDetectorRef.markForCheck();\n      }\n      // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n      // then translate the header to reflect this.\n      if (this._scrollDistanceChanged) {\n        this._updateTabScrollPosition();\n        this._scrollDistanceChanged = false;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    ngOnDestroy() {\n      this._keyManager?.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._stopScrolling.complete();\n    }\n    /** Handles keyboard events on the header. */\n    _handleKeydown(event) {\n      // We don't handle any key bindings with a modifier key.\n      if (hasModifierKey(event)) {\n        return;\n      }\n      switch (event.keyCode) {\n        case ENTER:\n        case SPACE:\n          if (this.focusIndex !== this.selectedIndex) {\n            const item = this._items.get(this.focusIndex);\n            if (item && !item.disabled) {\n              this.selectFocusedIndex.emit(this.focusIndex);\n              this._itemSelected(event);\n            }\n          }\n          break;\n        default:\n          this._keyManager.onKeydown(event);\n      }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     */\n    _onContentChanges() {\n      const textContent = this._elementRef.nativeElement.textContent;\n      // We need to diff the text content of the header, because the MutationObserver callback\n      // will fire even if the text content didn't change which is inefficient and is prone\n      // to infinite loops if a poorly constructed expression is passed in (see #14249).\n      if (textContent !== this._currentTextContent) {\n        this._currentTextContent = textContent || '';\n        // The content observer runs outside the `NgZone` by default, which\n        // means that we need to bring the callback back in ourselves.\n        this._ngZone.run(() => {\n          this.updatePagination();\n          this._alignInkBarToSelectedTab();\n          this._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n      this._checkPaginationEnabled();\n      this._checkScrollingControls();\n      this._updateTabScrollPosition();\n    }\n    /** Tracks which element has focus; used for keyboard navigation */\n    get focusIndex() {\n      return this._keyManager ? this._keyManager.activeItemIndex : 0;\n    }\n    /** When the focus index is set, we must manually send focus to the correct label */\n    set focusIndex(value) {\n      if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n        return;\n      }\n      this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     */\n    _isValidIndex(index) {\n      return this._items ? !!this._items.toArray()[index] : true;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     */\n    _setTabFocus(tabIndex) {\n      if (this._showPaginationControls) {\n        this._scrollToLabel(tabIndex);\n      }\n      if (this._items && this._items.length) {\n        this._items.toArray()[tabIndex].focus();\n        // Do not let the browser manage scrolling to focus the element, this will be handled\n        // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n        // should be the full width minus the offset width.\n        const containerEl = this._tabListContainer.nativeElement;\n        const dir = this._getLayoutDirection();\n        if (dir == 'ltr') {\n          containerEl.scrollLeft = 0;\n        } else {\n          containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n        }\n      }\n    }\n    /** The layout direction of the containing app. */\n    _getLayoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n    _updateTabScrollPosition() {\n      if (this.disablePagination) {\n        return;\n      }\n      const scrollDistance = this.scrollDistance;\n      const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n      // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n      // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n      // and ripples will exceed the boundaries of the visible tab bar.\n      // See: https://github.com/angular/components/issues/10276\n      // We round the `transform` here, because transforms with sub-pixel precision cause some\n      // browsers to blur the content of the element.\n      this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n      // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n      // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n      // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n      // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n      if (this._platform.TRIDENT || this._platform.EDGE) {\n        this._tabListContainer.nativeElement.scrollLeft = 0;\n      }\n    }\n    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n    get scrollDistance() {\n      return this._scrollDistance;\n    }\n    set scrollDistance(value) {\n      this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollHeader(direction) {\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      // Move the scroll distance one-third the length of the tab list's viewport.\n      const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n      return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /** Handles click events on the pagination arrows. */\n    _handlePaginatorClick(direction) {\n      this._stopInterval();\n      this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _scrollToLabel(labelIndex) {\n      if (this.disablePagination) {\n        return;\n      }\n      const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n      if (!selectedLabel) {\n        return;\n      }\n      // The view length is the visible width of the tab labels.\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      const {\n        offsetLeft,\n        offsetWidth\n      } = selectedLabel.elementRef.nativeElement;\n      let labelBeforePos, labelAfterPos;\n      if (this._getLayoutDirection() == 'ltr') {\n        labelBeforePos = offsetLeft;\n        labelAfterPos = labelBeforePos + offsetWidth;\n      } else {\n        labelAfterPos = this._tabListInner.nativeElement.offsetWidth - offsetLeft;\n        labelBeforePos = labelAfterPos - offsetWidth;\n      }\n      const beforeVisiblePos = this.scrollDistance;\n      const afterVisiblePos = this.scrollDistance + viewLength;\n      if (labelBeforePos < beforeVisiblePos) {\n        // Scroll header to move label to the before direction\n        this.scrollDistance -= beforeVisiblePos - labelBeforePos;\n      } else if (labelAfterPos > afterVisiblePos) {\n        // Scroll header to move label to the after direction\n        this.scrollDistance += Math.min(labelAfterPos - afterVisiblePos, labelBeforePos - beforeVisiblePos);\n      }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkPaginationEnabled() {\n      if (this.disablePagination) {\n        this._showPaginationControls = false;\n      } else {\n        const scrollWidth = this._tabListInner.nativeElement.scrollWidth;\n        const containerWidth = this._elementRef.nativeElement.offsetWidth;\n        // Usually checking that the scroll width is greater than the container width should be\n        // enough, but on Safari at specific widths the browser ends up rounding up when there's\n        // no pagination and rounding down once the pagination is added. This can throw the component\n        // into an infinite loop where the pagination shows up and disappears constantly. We work\n        // around it by adding a threshold to the calculation. From manual testing the threshold\n        // can be lowered to 2px and still resolve the issue, but we set a higher one to be safe.\n        // This shouldn't cause any content to be clipped, because tabs have a 24px horizontal\n        // padding. See b/316395154 for more information.\n        const isEnabled = scrollWidth - containerWidth >= 5;\n        if (!isEnabled) {\n          this.scrollDistance = 0;\n        }\n        if (isEnabled !== this._showPaginationControls) {\n          this._showPaginationControls = isEnabled;\n          this._changeDetectorRef.markForCheck();\n        }\n      }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _checkScrollingControls() {\n      if (this.disablePagination) {\n        this._disableScrollAfter = this._disableScrollBefore = true;\n      } else {\n        // Check if the pagination arrows should be activated.\n        this._disableScrollBefore = this.scrollDistance == 0;\n        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     */\n    _getMaxScrollDistance() {\n      const lengthOfTabList = this._tabListInner.nativeElement.scrollWidth;\n      const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n      return lengthOfTabList - viewLength || 0;\n    }\n    /** Tells the ink-bar to align itself to the current label wrapper */\n    _alignInkBarToSelectedTab() {\n      const selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;\n      const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n      if (selectedLabelWrapper) {\n        this._inkBar.alignToElement(selectedLabelWrapper);\n      } else {\n        this._inkBar.hide();\n      }\n    }\n    /** Stops the currently-running paginator interval.  */\n    _stopInterval() {\n      this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param direction In which direction the paginator should be scrolled.\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n      // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n      // null check the `button`, but we do it so we don't break tests that use fake events.\n      if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n        return;\n      }\n      // Avoid overlapping timers.\n      this._stopInterval();\n      // Start a timer after the delay and keep firing based on the interval.\n      timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed))).subscribe(() => {\n        const {\n          maxScrollDistance,\n          distance\n        } = this._scrollHeader(direction);\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @param position Position to which to scroll.\n     * @returns Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n      if (this.disablePagination) {\n        return {\n          maxScrollDistance: 0,\n          distance: 0\n        };\n      }\n      const maxScrollDistance = this._getMaxScrollDistance();\n      this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n      // Mark that the scroll distance has changed so that after the view is checked, the CSS\n      // transformation can move the header.\n      this._scrollDistanceChanged = true;\n      this._checkScrollingControls();\n      return {\n        maxScrollDistance,\n        distance: this._scrollDistance\n      };\n    }\n    static {\n      this.ɵfac = function MatPaginatedTabHeader_Factory(t) {\n        return new (t || MatPaginatedTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatPaginatedTabHeader,\n        inputs: {\n          disablePagination: [2, \"disablePagination\", \"disablePagination\", booleanAttribute],\n          selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute]\n        },\n        outputs: {\n          selectFocusedIndex: \"selectFocusedIndex\",\n          indexFocused: \"indexFocused\"\n        },\n        features: [i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return MatPaginatedTabHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\nlet MatTabHeader = /*#__PURE__*/(() => {\n  class MatTabHeader extends MatPaginatedTabHeader {\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode) {\n      super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n      /** Whether the ripple effect is disabled or not. */\n      this.disableRipple = false;\n    }\n    ngAfterContentInit() {\n      this._inkBar = new MatInkBar(this._items);\n      super.ngAfterContentInit();\n    }\n    _itemSelected(event) {\n      event.preventDefault();\n    }\n    static {\n      this.ɵfac = function MatTabHeader_Factory(t) {\n        return new (t || MatTabHeader)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTabHeader,\n        selectors: [[\"mat-tab-header\"]],\n        contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n          }\n        },\n        viewQuery: function MatTabHeader_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c1, 7);\n            i0.ɵɵviewQuery(_c2, 7);\n            i0.ɵɵviewQuery(_c3, 7);\n            i0.ɵɵviewQuery(_c4, 5);\n            i0.ɵɵviewQuery(_c5, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-tab-header\"],\n        hostVars: 4,\n        hostBindings: function MatTabHeader_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n          }\n        },\n        inputs: {\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 13,\n        vars: 10,\n        consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\", \"disabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-label-container\", 3, \"keydown\"], [\"role\", \"tablist\", 1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-labels\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\", \"disabled\"]],\n        template: function MatTabHeader_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"button\", 5, 0);\n            i0.ɵɵlistener(\"click\", function MatTabHeader_Template_button_click_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n            })(\"mousedown\", function MatTabHeader_Template_button_mousedown_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n            })(\"touchend\", function MatTabHeader_Template_button_touchend_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._stopInterval());\n            });\n            i0.ɵɵelement(2, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 7, 1);\n            i0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handleKeydown($event));\n            });\n            i0.ɵɵelementStart(5, \"div\", 8, 2);\n            i0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onContentChanges());\n            });\n            i0.ɵɵelementStart(7, \"div\", 9, 3);\n            i0.ɵɵprojection(9);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(10, \"button\", 10, 4);\n            i0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_button_mousedown_10_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n            })(\"click\", function MatTabHeader_Template_button_click_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n            })(\"touchend\", function MatTabHeader_Template_button_touchend_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._stopInterval());\n            });\n            i0.ɵɵelement(12, \"div\", 6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n            i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple)(\"disabled\", ctx._disableScrollBefore || null);\n            i0.ɵɵadvance(3);\n            i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n            i0.ɵɵadvance(7);\n            i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n            i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple)(\"disabled\", ctx._disableScrollAfter || null);\n          }\n        },\n        dependencies: [MatRipple, CdkObserveContent],\n        styles: [\".mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color)}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color)}.mat-mdc-tab-group-inverted-header .mat-mdc-tab-label-container{border-bottom:none;border-top-style:solid;border-top-width:var(--mat-tab-header-divider-height);border-top-color:var(--mat-tab-header-divider-color)}.mat-mdc-tab-labels{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-header .mat-mdc-tab-labels{justify-content:flex-end}.mat-mdc-tab::before{margin:5px}.cdk-high-contrast-active .mat-mdc-tab[aria-disabled=true]{color:GrayText}\"],\n        encapsulation: 2\n      });\n    }\n  }\n  return MatTabHeader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Injection token that can be used to provide the default options the tabs module. */\nconst MAT_TABS_CONFIG = /*#__PURE__*/new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nconst matTabsAnimations = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: /*#__PURE__*/trigger('translateTab', [\n  /*#__PURE__*/\n  // Transitions to `none` instead of 0, because some browsers might blur the content.\n  state('center, void, left-origin-center, right-origin-center', /*#__PURE__*/style({\n    transform: 'none',\n    visibility: 'visible'\n  })),\n  /*#__PURE__*/\n  // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n  // in order to ensure that the element has a height before its state changes. This is\n  // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n  // not have a static height and is not rendered. See related issue: #9465\n  state('left', /*#__PURE__*/style({\n    transform: 'translate3d(-100%, 0, 0)',\n    minHeight: '1px',\n    // Normally this is redundant since we detach the content from the DOM, but if the user\n    // opted into keeping the content in the DOM, we have to hide it so it isn't focusable.\n    visibility: 'hidden'\n  })), /*#__PURE__*/state('right', /*#__PURE__*/style({\n    transform: 'translate3d(100%, 0, 0)',\n    minHeight: '1px',\n    visibility: 'hidden'\n  })), /*#__PURE__*/transition('* => left, * => right, left => center, right => center', /*#__PURE__*/animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), /*#__PURE__*/transition('void => left-origin-center', [/*#__PURE__*/style({\n    transform: 'translate3d(-100%, 0, 0)',\n    visibility: 'hidden'\n  }), /*#__PURE__*/animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), /*#__PURE__*/transition('void => right-origin-center', [/*#__PURE__*/style({\n    transform: 'translate3d(100%, 0, 0)',\n    visibility: 'hidden'\n  }), /*#__PURE__*/animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])\n};\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\nlet MatTabBodyPortal = /*#__PURE__*/(() => {\n  class MatTabBodyPortal extends CdkPortalOutlet {\n    constructor(componentFactoryResolver, viewContainerRef, _host, _document) {\n      super(componentFactoryResolver, viewContainerRef, _document);\n      this._host = _host;\n      /** Subscription to events for when the tab body begins centering. */\n      this._centeringSub = Subscription.EMPTY;\n      /** Subscription to events for when the tab body finishes leaving from center position. */\n      this._leavingSub = Subscription.EMPTY;\n    }\n    /** Set initial visibility or set up subscription for changing visibility. */\n    ngOnInit() {\n      super.ngOnInit();\n      this._centeringSub = this._host._beforeCentering.pipe(startWith(this._host._isCenterPosition(this._host._position))).subscribe(isCentering => {\n        if (this._host._content && isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n      this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n        if (!this._host.preserveContent) {\n          this.detach();\n        }\n      });\n    }\n    /** Clean up centering subscription. */\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this._centeringSub.unsubscribe();\n      this._leavingSub.unsubscribe();\n    }\n    static {\n      this.ɵfac = function MatTabBodyPortal_Factory(t) {\n        return new (t || MatTabBodyPortal)(i0.ɵɵdirectiveInject(i0.ComponentFactoryResolver), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(forwardRef(() => MatTabBody)), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatTabBodyPortal,\n        selectors: [[\"\", \"matTabBodyHost\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatTabBodyPortal;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\nlet MatTabBody = /*#__PURE__*/(() => {\n  class MatTabBody {\n    /** The shifted index position of the tab body, where zero represents the active center tab. */\n    set position(position) {\n      this._positionIndex = position;\n      this._computePositionAnimationState();\n    }\n    constructor(_elementRef, _dir, changeDetectorRef) {\n      this._elementRef = _elementRef;\n      this._dir = _dir;\n      /** Subscription to the directionality change observable. */\n      this._dirChangeSubscription = Subscription.EMPTY;\n      /** Emits when an animation on the tab is complete. */\n      this._translateTabComplete = new Subject();\n      /** Event emitted when the tab begins to animate towards the center as the active tab. */\n      this._onCentering = new EventEmitter();\n      /** Event emitted before the centering of the tab begins. */\n      this._beforeCentering = new EventEmitter();\n      /** Event emitted before the centering of the tab begins. */\n      this._afterLeavingCenter = new EventEmitter();\n      /** Event emitted when the tab completes its animation towards the center. */\n      this._onCentered = new EventEmitter(true);\n      // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n      // anyway to prevent the animations module from throwing an error if the body is used on its own.\n      /** Duration for the tab's animation. */\n      this.animationDuration = '500ms';\n      /** Whether the tab's content should be kept in the DOM while it's off-screen. */\n      this.preserveContent = false;\n      if (_dir) {\n        this._dirChangeSubscription = _dir.change.subscribe(dir => {\n          this._computePositionAnimationState(dir);\n          changeDetectorRef.markForCheck();\n        });\n      }\n      // Ensure that we get unique animation events, because the `.done` callback can get\n      // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n      this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n        return x.fromState === y.fromState && x.toState === y.toState;\n      })).subscribe(event => {\n        // If the transition to the center is complete, emit an event.\n        if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n          this._onCentered.emit();\n        }\n        if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n          this._afterLeavingCenter.emit();\n        }\n      });\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     */\n    ngOnInit() {\n      if (this._position == 'center' && this.origin != null) {\n        this._position = this._computePositionFromOrigin(this.origin);\n      }\n    }\n    ngOnDestroy() {\n      this._dirChangeSubscription.unsubscribe();\n      this._translateTabComplete.complete();\n    }\n    _onTranslateTabStarted(event) {\n      const isCentering = this._isCenterPosition(event.toState);\n      this._beforeCentering.emit(isCentering);\n      if (isCentering) {\n        this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n      }\n    }\n    /** The text direction of the containing app. */\n    _getLayoutDirection() {\n      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /** Whether the provided position state is considered center, regardless of origin. */\n    _isCenterPosition(position) {\n      return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';\n    }\n    /** Computes the position state that will be used for the tab-body animation trigger. */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n      if (this._positionIndex < 0) {\n        this._position = dir == 'ltr' ? 'left' : 'right';\n      } else if (this._positionIndex > 0) {\n        this._position = dir == 'ltr' ? 'right' : 'left';\n      } else {\n        this._position = 'center';\n      }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     */\n    _computePositionFromOrigin(origin) {\n      const dir = this._getLayoutDirection();\n      if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {\n        return 'left-origin-center';\n      }\n      return 'right-origin-center';\n    }\n    static {\n      this.ɵfac = function MatTabBody_Factory(t) {\n        return new (t || MatTabBody)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTabBody,\n        selectors: [[\"mat-tab-body\"]],\n        viewQuery: function MatTabBody_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(CdkPortalOutlet, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-tab-body\"],\n        inputs: {\n          _content: [0, \"content\", \"_content\"],\n          origin: \"origin\",\n          animationDuration: \"animationDuration\",\n          preserveContent: \"preserveContent\",\n          position: \"position\"\n        },\n        outputs: {\n          _onCentering: \"_onCentering\",\n          _beforeCentering: \"_beforeCentering\",\n          _afterLeavingCenter: \"_afterLeavingCenter\",\n          _onCentered: \"_onCentered\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 3,\n        vars: 6,\n        consts: [[\"content\", \"\"], [\"cdkScrollable\", \"\", 1, \"mat-mdc-tab-body-content\"], [\"matTabBodyHost\", \"\"]],\n        template: function MatTabBody_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1, 0);\n            i0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onTranslateTabStarted($event));\n            })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._translateTabComplete.next($event));\n            });\n            i0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"@translateTab\", i0.ɵɵpureFunction2(3, _c7, ctx._position, i0.ɵɵpureFunction1(1, _c6, ctx.animationDuration)));\n          }\n        },\n        dependencies: [MatTabBodyPortal, CdkScrollable],\n        styles: [\".mat-mdc-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;outline:0;flex-basis:100%}.mat-mdc-tab-body.mat-mdc-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-mdc-tab-group.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body.mat-mdc-tab-body-active{overflow-y:hidden}.mat-mdc-tab-body-content{height:100%;overflow:auto}.mat-mdc-tab-group-dynamic-height .mat-mdc-tab-body-content{overflow:hidden}.mat-mdc-tab-body-content[style*=\\\"visibility: hidden\\\"]{display:none}\"],\n        encapsulation: 2,\n        data: {\n          animation: [matTabsAnimations.translateTab]\n        }\n      });\n    }\n  }\n  return MatTabBody;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n/** Boolean constant that determines whether the tab group supports the `backgroundColor` input */\nconst ENABLE_BACKGROUND_INPUT = true;\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nlet MatTabGroup = /*#__PURE__*/(() => {\n  class MatTabGroup {\n    /** Whether the ink bar should fit its width to the size of the tab label content. */\n    get fitInkBarToContent() {\n      return this._fitInkBarToContent;\n    }\n    set fitInkBarToContent(value) {\n      this._fitInkBarToContent = value;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** The index of the active tab. */\n    get selectedIndex() {\n      return this._selectedIndex;\n    }\n    set selectedIndex(value) {\n      this._indexToSelect = isNaN(value) ? null : value;\n    }\n    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n    get animationDuration() {\n      return this._animationDuration;\n    }\n    set animationDuration(value) {\n      const stringValue = value + '';\n      this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n    }\n    /**\n     * `tabindex` to be set on the inner element that wraps the tab content. Can be used for improved\n     * accessibility when the tab does not have focusable elements or if it has scrollable content.\n     * The `tabindex` will be removed automatically for inactive tabs.\n     * Read more at https://www.w3.org/TR/wai-aria-practices/examples/tabs/tabs-2/tabs.html\n     */\n    get contentTabIndex() {\n      return this._contentTabIndex;\n    }\n    set contentTabIndex(value) {\n      this._contentTabIndex = isNaN(value) ? null : value;\n    }\n    /**\n     * Theme color of the background of the tab group. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     *\n     * @deprecated The background color should be customized through Sass theming APIs.\n     * @breaking-change 20.0.0 Remove this input\n     */\n    get backgroundColor() {\n      return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n      if (!ENABLE_BACKGROUND_INPUT) {\n        throw new Error(`mat-tab-group background color must be set through the Sass theming API`);\n      }\n      const classList = this._elementRef.nativeElement.classList;\n      classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n      if (value) {\n        classList.add('mat-tabs-with-background', `mat-background-${value}`);\n      }\n      this._backgroundColor = value;\n    }\n    constructor(_elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._animationMode = _animationMode;\n      /** All of the tabs that belong to the group. */\n      this._tabs = new QueryList();\n      /** The tab index that should be selected after the content has been checked. */\n      this._indexToSelect = 0;\n      /** Index of the tab that was focused last. */\n      this._lastFocusedTabIndex = null;\n      /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n      this._tabBodyWrapperHeight = 0;\n      /** Subscription to tabs being added/removed. */\n      this._tabsSubscription = Subscription.EMPTY;\n      /** Subscription to changes in the tab labels. */\n      this._tabLabelSubscription = Subscription.EMPTY;\n      this._fitInkBarToContent = false;\n      /** Whether tabs should be stretched to fill the header. */\n      this.stretchTabs = true;\n      /** Whether the tab group should grow to the size of the active tab. */\n      this.dynamicHeight = false;\n      this._selectedIndex = null;\n      /** Position of the tab header. */\n      this.headerPosition = 'above';\n      /**\n       * Whether pagination should be disabled. This can be used to avoid unnecessary\n       * layout recalculations if it's known that pagination won't be required.\n       */\n      this.disablePagination = false;\n      /** Whether ripples in the tab group are disabled. */\n      this.disableRipple = false;\n      /**\n       * By default tabs remove their content from the DOM while it's off-screen.\n       * Setting this to `true` will keep it in the DOM which will prevent elements\n       * like iframes and videos from reloading next time it comes back into the view.\n       */\n      this.preserveContent = false;\n      /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n      this.selectedIndexChange = new EventEmitter();\n      /** Event emitted when focus has changed within a tab group. */\n      this.focusChange = new EventEmitter();\n      /** Event emitted when the body animation has completed */\n      this.animationDone = new EventEmitter();\n      /** Event emitted when the tab selection has changed. */\n      this.selectedTabChange = new EventEmitter(true);\n      /** Whether the tab group is rendered on the server. */\n      this._isServer = !inject(Platform).isBrowser;\n      this._groupId = nextId++;\n      this.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';\n      this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n      this.dynamicHeight = defaultConfig && defaultConfig.dynamicHeight != null ? defaultConfig.dynamicHeight : false;\n      if (defaultConfig?.contentTabIndex != null) {\n        this.contentTabIndex = defaultConfig.contentTabIndex;\n      }\n      this.preserveContent = !!defaultConfig?.preserveContent;\n      this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n      this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     */\n    ngAfterContentChecked() {\n      // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n      // the amount of tabs changes before the actual change detection runs.\n      const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n      // If there is a change in selected index, emit a change event. Should not trigger if\n      // the selected index has not yet been initialized.\n      if (this._selectedIndex != indexToSelect) {\n        const isFirstRun = this._selectedIndex == null;\n        if (!isFirstRun) {\n          this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n          // Preserve the height so page doesn't scroll up during tab change.\n          // Fixes https://stackblitz.com/edit/mat-tabs-scroll-page-top-on-tab-change\n          const wrapper = this._tabBodyWrapper.nativeElement;\n          wrapper.style.minHeight = wrapper.clientHeight + 'px';\n        }\n        // Changing these values after change detection has run\n        // since the checked content may contain references to them.\n        Promise.resolve().then(() => {\n          this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n          if (!isFirstRun) {\n            this.selectedIndexChange.emit(indexToSelect);\n            // Clear the min-height, this was needed during tab change to avoid\n            // unnecessary scrolling.\n            this._tabBodyWrapper.nativeElement.style.minHeight = '';\n          }\n        });\n      }\n      // Setup the position for each tab and optionally setup an origin on the next selected tab.\n      this._tabs.forEach((tab, index) => {\n        tab.position = index - indexToSelect;\n        // If there is already a selected tab, then set up an origin for the next selected tab\n        // if it doesn't have one already.\n        if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n          tab.origin = indexToSelect - this._selectedIndex;\n        }\n      });\n      if (this._selectedIndex !== indexToSelect) {\n        this._selectedIndex = indexToSelect;\n        this._lastFocusedTabIndex = null;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    ngAfterContentInit() {\n      this._subscribeToAllTabChanges();\n      this._subscribeToTabLabels();\n      // Subscribe to changes in the amount of tabs, in order to be\n      // able to re-render the content as new tabs are added or removed.\n      this._tabsSubscription = this._tabs.changes.subscribe(() => {\n        const indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // Maintain the previously-selected tab if a new tab is added or removed and there is no\n        // explicit change that selects a different tab.\n        if (indexToSelect === this._selectedIndex) {\n          const tabs = this._tabs.toArray();\n          let selectedTab;\n          for (let i = 0; i < tabs.length; i++) {\n            if (tabs[i].isActive) {\n              // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n              // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n              // adding a tab within the `selectedIndexChange` event.\n              this._indexToSelect = this._selectedIndex = i;\n              this._lastFocusedTabIndex = null;\n              selectedTab = tabs[i];\n              break;\n            }\n          }\n          // If we haven't found an active tab and a tab exists at the selected index, it means\n          // that the active tab was swapped out. Since this won't be picked up by the rendering\n          // loop in `ngAfterContentChecked`, we need to sync it up manually.\n          if (!selectedTab && tabs[indexToSelect]) {\n            Promise.resolve().then(() => {\n              tabs[indexToSelect].isActive = true;\n              this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            });\n          }\n        }\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n    /** Listens to changes in all of the tabs. */\n    _subscribeToAllTabChanges() {\n      // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n      // some that are inside of nested tab groups. We filter them out manually by checking that\n      // the closest group to the tab is the current one.\n      this._allTabs.changes.pipe(startWith(this._allTabs)).subscribe(tabs => {\n        this._tabs.reset(tabs.filter(tab => {\n          return tab._closestTabGroup === this || !tab._closestTabGroup;\n        }));\n        this._tabs.notifyOnChanges();\n      });\n    }\n    ngOnDestroy() {\n      this._tabs.destroy();\n      this._tabsSubscription.unsubscribe();\n      this._tabLabelSubscription.unsubscribe();\n    }\n    /** Re-aligns the ink bar to the selected tab element. */\n    realignInkBar() {\n      if (this._tabHeader) {\n        this._tabHeader._alignInkBarToSelectedTab();\n      }\n    }\n    /**\n     * Recalculates the tab group's pagination dimensions.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     */\n    updatePagination() {\n      if (this._tabHeader) {\n        this._tabHeader.updatePagination();\n      }\n    }\n    /**\n     * Sets focus to a particular tab.\n     * @param index Index of the tab to be focused.\n     */\n    focusTab(index) {\n      const header = this._tabHeader;\n      if (header) {\n        header.focusIndex = index;\n      }\n    }\n    _focusChanged(index) {\n      this._lastFocusedTabIndex = index;\n      this.focusChange.emit(this._createChangeEvent(index));\n    }\n    _createChangeEvent(index) {\n      const event = new MatTabChangeEvent();\n      event.index = index;\n      if (this._tabs && this._tabs.length) {\n        event.tab = this._tabs.toArray()[index];\n      }\n      return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     */\n    _subscribeToTabLabels() {\n      if (this._tabLabelSubscription) {\n        this._tabLabelSubscription.unsubscribe();\n      }\n      this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges)).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    /** Clamps the given index to the bounds of 0 and the tabs length. */\n    _clampTabIndex(index) {\n      // Note the `|| 0`, which ensures that values like NaN can't get through\n      // and which would otherwise throw the component into an infinite loop\n      // (since Math.max(NaN, 0) === NaN).\n      return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /** Returns a unique id for each tab label element */\n    _getTabLabelId(i) {\n      return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /** Returns a unique id for each tab content element */\n    _getTabContentId(i) {\n      return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n      if (!this.dynamicHeight || !this._tabBodyWrapperHeight) {\n        return;\n      }\n      const wrapper = this._tabBodyWrapper.nativeElement;\n      wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n      // This conditional forces the browser to paint the height so that\n      // the animation to the new height can have an origin.\n      if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n        wrapper.style.height = tabHeight + 'px';\n      }\n    }\n    /** Removes the height of the tab body wrapper. */\n    _removeTabBodyWrapperHeight() {\n      const wrapper = this._tabBodyWrapper.nativeElement;\n      this._tabBodyWrapperHeight = wrapper.clientHeight;\n      wrapper.style.height = '';\n      this.animationDone.emit();\n    }\n    /** Handle click events, setting new selected index if appropriate. */\n    _handleClick(tab, tabHeader, index) {\n      tabHeader.focusIndex = index;\n      if (!tab.disabled) {\n        this.selectedIndex = index;\n      }\n    }\n    /** Retrieves the tabindex for the tab. */\n    _getTabIndex(index) {\n      const targetIndex = this._lastFocusedTabIndex ?? this.selectedIndex;\n      return index === targetIndex ? 0 : -1;\n    }\n    /** Callback for when the focused state of a tab has changed. */\n    _tabFocusChanged(focusOrigin, index) {\n      // Mouse/touch focus happens during the `mousedown`/`touchstart` phase which\n      // can cause the tab to be moved out from under the pointer, interrupting the\n      // click sequence (see #21898). We don't need to scroll the tab into view for\n      // such cases anyway, because it will be done when the tab becomes selected.\n      if (focusOrigin && focusOrigin !== 'mouse' && focusOrigin !== 'touch') {\n        this._tabHeader.focusIndex = index;\n      }\n    }\n    static {\n      this.ɵfac = function MatTabGroup_Factory(t) {\n        return new (t || MatTabGroup)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTabGroup,\n        selectors: [[\"mat-tab-group\"]],\n        contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n          }\n        },\n        viewQuery: function MatTabGroup_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c8, 5);\n            i0.ɵɵviewQuery(_c9, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-tab-group\"],\n        hostVars: 10,\n        hostBindings: function MatTabGroup_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n            i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n            i0.ɵɵclassProp(\"mat-mdc-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-mdc-tab-group-inverted-header\", ctx.headerPosition === \"below\")(\"mat-mdc-tab-group-stretch-tabs\", ctx.stretchTabs);\n          }\n        },\n        inputs: {\n          color: \"color\",\n          fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n          stretchTabs: [2, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n          dynamicHeight: [2, \"dynamicHeight\", \"dynamicHeight\", booleanAttribute],\n          selectedIndex: [2, \"selectedIndex\", \"selectedIndex\", numberAttribute],\n          headerPosition: \"headerPosition\",\n          animationDuration: \"animationDuration\",\n          contentTabIndex: [2, \"contentTabIndex\", \"contentTabIndex\", numberAttribute],\n          disablePagination: [2, \"disablePagination\", \"disablePagination\", booleanAttribute],\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          preserveContent: [2, \"preserveContent\", \"preserveContent\", booleanAttribute],\n          backgroundColor: \"backgroundColor\"\n        },\n        outputs: {\n          selectedIndexChange: \"selectedIndexChange\",\n          focusChange: \"focusChange\",\n          animationDone: \"animationDone\",\n          selectedTabChange: \"selectedTabChange\"\n        },\n        exportAs: [\"matTabGroup\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_TAB_GROUP,\n          useExisting: MatTabGroup\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 9,\n        vars: 6,\n        consts: [[\"tabHeader\", \"\"], [\"tabBodyWrapper\", \"\"], [\"tabNode\", \"\"], [3, \"indexFocused\", \"selectFocusedIndex\", \"selectedIndex\", \"disableRipple\", \"disablePagination\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-mdc-focus-indicator\", 3, \"id\", \"mdc-tab--active\", \"class\", \"disabled\", \"fitInkBarToContent\"], [1, \"mat-mdc-tab-body-wrapper\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-mdc-tab-body-active\", \"class\", \"content\", \"position\", \"origin\", \"animationDuration\", \"preserveContent\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mdc-tab\", \"mat-mdc-tab\", \"mat-mdc-focus-indicator\", 3, \"click\", \"cdkFocusChange\", \"id\", \"disabled\", \"fitInkBarToContent\"], [1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"_onCentered\", \"_onCentering\", \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"preserveContent\"]],\n        template: function MatTabGroup_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"mat-tab-header\", 3, 0);\n            i0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._focusChanged($event));\n            })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx.selectedIndex = $event);\n            });\n            i0.ɵɵrepeaterCreate(2, MatTabGroup_For_3_Template, 8, 17, \"div\", 4, i0.ɵɵrepeaterTrackByIdentity);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(4, MatTabGroup_Conditional_4_Template, 1, 0);\n            i0.ɵɵelementStart(5, \"div\", 5, 1);\n            i0.ɵɵrepeaterCreate(7, MatTabGroup_For_8_Template, 1, 13, \"mat-tab-body\", 6, i0.ɵɵrepeaterTrackByIdentity);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n            i0.ɵɵadvance(2);\n            i0.ɵɵrepeater(ctx._tabs);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._isServer ? 4 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵrepeater(ctx._tabs);\n          }\n        },\n        dependencies: [MatTabHeader, MatTabLabelWrapper, CdkMonitorFocus, MatRipple, CdkPortalOutlet, MatTabBody],\n        styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mdc-secondary-navigation-tab-container-height);font-family:var(--mat-tab-header-label-text-font);font-size:var(--mat-tab-header-label-text-size);letter-spacing:var(--mat-tab-header-label-text-tracking);line-height:var(--mat-tab-header-label-text-line-height);font-weight:var(--mat-tab-header-label-text-weight)}.mat-mdc-tab.mdc-tab{flex-grow:0}.mat-mdc-tab .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color);border-top-width:var(--mdc-tab-indicator-active-indicator-height);border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color)}.mat-mdc-tab:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color)}.mat-mdc-tab.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color)}.mat-mdc-tab.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color)}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color)}.mat-mdc-tab.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color)}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color)}.mat-mdc-tab.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color)}.mat-mdc-tab.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color);display:inline-flex;align-items:center}.mat-mdc-tab .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-group.mat-mdc-tab-group-stretch-tabs>.mat-mdc-tab-header .mat-mdc-tab{flex-grow:1}.mat-mdc-tab-group{display:flex;flex-direction:column;max-width:100%}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mat-mdc-tab .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background.mat-primary>.mat-mdc-tab-header .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-header .mat-mdc-tab:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-focus-indicator::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mdc-tab__ripple::before,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-group.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header{flex-direction:column-reverse}.mat-mdc-tab-group.mat-mdc-tab-group-inverted-header .mdc-tab-indicator__content--underline{align-self:flex-start}.mat-mdc-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-mdc-tab-body-wrapper._mat-animation-noopable{transition:none !important;animation:none !important}\"],\n        encapsulation: 2\n      });\n    }\n  }\n  return MatTabGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** A simple change event emitted on focus or selection changes. */\nclass MatTabChangeEvent {}\n\n// Increasing integer for generating unique ids for tab nav components.\nlet nextUniqueId = 0;\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nlet MatTabNav = /*#__PURE__*/(() => {\n  class MatTabNav extends MatPaginatedTabHeader {\n    /** Whether the ink bar should fit its width to the size of the tab label content. */\n    get fitInkBarToContent() {\n      return this._fitInkBarToContent.value;\n    }\n    set fitInkBarToContent(value) {\n      this._fitInkBarToContent.next(value);\n      this._changeDetectorRef.markForCheck();\n    }\n    get animationDuration() {\n      return this._animationDuration;\n    }\n    set animationDuration(value) {\n      const stringValue = value + '';\n      this._animationDuration = /^\\d+$/.test(stringValue) ? value + 'ms' : stringValue;\n    }\n    /**\n     * Theme color of the background of the tab nav. This API is supported in M2 themes only, it\n     * has no effect in M3 themes.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.io/guide/theming#using-component-color-variants.\n     */\n    get backgroundColor() {\n      return this._backgroundColor;\n    }\n    set backgroundColor(value) {\n      const classList = this._elementRef.nativeElement.classList;\n      classList.remove('mat-tabs-with-background', `mat-background-${this.backgroundColor}`);\n      if (value) {\n        classList.add('mat-tabs-with-background', `mat-background-${value}`);\n      }\n      this._backgroundColor = value;\n    }\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode, defaultConfig) {\n      super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n      this._fitInkBarToContent = new BehaviorSubject(false);\n      /** Whether tabs should be stretched to fill the header. */\n      this.stretchTabs = true;\n      /** Whether the ripple effect is disabled or not. */\n      this.disableRipple = false;\n      /**\n       * Theme color of the nav bar. This API is supported in M2 themes only, it has\n       * no effect in M3 themes.\n       *\n       * For information on applying color variants in M3, see\n       * https://material.angular.io/guide/theming#using-component-color-variants.\n       */\n      this.color = 'primary';\n      this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;\n      this.fitInkBarToContent = defaultConfig && defaultConfig.fitInkBarToContent != null ? defaultConfig.fitInkBarToContent : false;\n      this.stretchTabs = defaultConfig && defaultConfig.stretchTabs != null ? defaultConfig.stretchTabs : true;\n    }\n    _itemSelected() {\n      // noop\n    }\n    ngAfterContentInit() {\n      this._inkBar = new MatInkBar(this._items);\n      // We need this to run before the `changes` subscription in parent to ensure that the\n      // selectedIndex is up-to-date by the time the super class starts looking for it.\n      this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n        this.updateActiveLink();\n      });\n      super.ngAfterContentInit();\n    }\n    ngAfterViewInit() {\n      if (!this.tabPanel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new Error('A mat-tab-nav-panel must be specified via [tabPanel].');\n      }\n      super.ngAfterViewInit();\n    }\n    /** Notifies the component that the active link has been changed. */\n    updateActiveLink() {\n      if (!this._items) {\n        return;\n      }\n      const items = this._items.toArray();\n      for (let i = 0; i < items.length; i++) {\n        if (items[i].active) {\n          this.selectedIndex = i;\n          this._changeDetectorRef.markForCheck();\n          if (this.tabPanel) {\n            this.tabPanel._activeTabId = items[i].id;\n          }\n          return;\n        }\n      }\n      // The ink bar should hide itself if no items are active.\n      this.selectedIndex = -1;\n      this._inkBar.hide();\n    }\n    _getRole() {\n      return this.tabPanel ? 'tablist' : this._elementRef.nativeElement.getAttribute('role');\n    }\n    static {\n      this.ɵfac = function MatTabNav_Factory(t) {\n        return new (t || MatTabNav)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i2.Directionality, 8), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.ViewportRuler), i0.ɵɵdirectiveInject(i3.Platform), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTabNav,\n        selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]],\n        contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._items = _t);\n          }\n        },\n        viewQuery: function MatTabNav_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c1, 7);\n            i0.ɵɵviewQuery(_c2, 7);\n            i0.ɵɵviewQuery(_c3, 7);\n            i0.ɵɵviewQuery(_c4, 5);\n            i0.ɵɵviewQuery(_c5, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tabListInner = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-tab-nav-bar\", \"mat-mdc-tab-header\"],\n        hostVars: 17,\n        hostBindings: function MatTabNav_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"role\", ctx._getRole());\n            i0.ɵɵstyleProp(\"--mat-tab-animation-duration\", ctx.animationDuration);\n            i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-mdc-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-mdc-tab-nav-bar-stretch-tabs\", ctx.stretchTabs)(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n          }\n        },\n        inputs: {\n          fitInkBarToContent: [2, \"fitInkBarToContent\", \"fitInkBarToContent\", booleanAttribute],\n          stretchTabs: [2, \"mat-stretch-tabs\", \"stretchTabs\", booleanAttribute],\n          animationDuration: \"animationDuration\",\n          backgroundColor: \"backgroundColor\",\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          color: \"color\",\n          tabPanel: \"tabPanel\"\n        },\n        exportAs: [\"matTabNavBar\", \"matTabNav\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c10,\n        ngContentSelectors: _c0,\n        decls: 13,\n        vars: 8,\n        consts: [[\"previousPaginator\", \"\"], [\"tabListContainer\", \"\"], [\"tabList\", \"\"], [\"tabListInner\", \"\"], [\"nextPaginator\", \"\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-before\", 3, \"click\", \"mousedown\", \"touchend\", \"matRippleDisabled\", \"disabled\"], [1, \"mat-mdc-tab-header-pagination-chevron\"], [1, \"mat-mdc-tab-link-container\", 3, \"keydown\"], [1, \"mat-mdc-tab-list\", 3, \"cdkObserveContent\"], [1, \"mat-mdc-tab-links\"], [\"aria-hidden\", \"true\", \"type\", \"button\", \"mat-ripple\", \"\", \"tabindex\", \"-1\", 1, \"mat-mdc-tab-header-pagination\", \"mat-mdc-tab-header-pagination-after\", 3, \"mousedown\", \"click\", \"touchend\", \"matRippleDisabled\", \"disabled\"]],\n        template: function MatTabNav_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"button\", 5, 0);\n            i0.ɵɵlistener(\"click\", function MatTabNav_Template_button_click_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorClick(\"before\"));\n            })(\"mousedown\", function MatTabNav_Template_button_mousedown_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorPress(\"before\", $event));\n            })(\"touchend\", function MatTabNav_Template_button_touchend_0_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._stopInterval());\n            });\n            i0.ɵɵelement(2, \"div\", 6);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 7, 1);\n            i0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handleKeydown($event));\n            });\n            i0.ɵɵelementStart(5, \"div\", 8, 2);\n            i0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._onContentChanges());\n            });\n            i0.ɵɵelementStart(7, \"div\", 9, 3);\n            i0.ɵɵprojection(9);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(10, \"button\", 10, 4);\n            i0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_button_mousedown_10_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorPress(\"after\", $event));\n            })(\"click\", function MatTabNav_Template_button_click_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handlePaginatorClick(\"after\"));\n            })(\"touchend\", function MatTabNav_Template_button_touchend_10_listener() {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._stopInterval());\n            });\n            i0.ɵɵelement(12, \"div\", 6);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n            i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple)(\"disabled\", ctx._disableScrollBefore || null);\n            i0.ɵɵadvance(10);\n            i0.ɵɵclassProp(\"mat-mdc-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n            i0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple)(\"disabled\", ctx._disableScrollAfter || null);\n          }\n        },\n        dependencies: [MatRipple, CdkObserveContent],\n        styles: [\".mdc-tab{min-width:90px;padding:0 24px;display:flex;flex:1 0 auto;justify-content:center;box-sizing:border-box;border:none;outline:none;text-align:center;white-space:nowrap;cursor:pointer;z-index:1}.mdc-tab__content{display:flex;align-items:center;justify-content:center;height:inherit;pointer-events:none}.mdc-tab__text-label{transition:150ms color linear;display:inline-block;line-height:1;z-index:2}.mdc-tab--active .mdc-tab__text-label{transition-delay:100ms}._mat-animation-noopable .mdc-tab__text-label{transition:none}.mdc-tab-indicator{display:flex;position:absolute;top:0;left:0;justify-content:center;width:100%;height:100%;pointer-events:none;z-index:1}.mdc-tab-indicator__content{transition:var(--mat-tab-animation-duration, 250ms) transform cubic-bezier(0.4, 0, 0.2, 1);transform-origin:left;opacity:0}.mdc-tab-indicator__content--underline{align-self:flex-end;box-sizing:border-box;width:100%;border-top-style:solid}.mdc-tab-indicator--active .mdc-tab-indicator__content{opacity:1}._mat-animation-noopable .mdc-tab-indicator__content,.mdc-tab-indicator--no-transition .mdc-tab-indicator__content{transition:none}.mat-mdc-tab-ripple{position:absolute;top:0;left:0;bottom:0;right:0;pointer-events:none}.mat-mdc-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mdc-tab-indicator .mdc-tab-indicator__content{transition-duration:var(--mat-tab-animation-duration, 250ms)}.mat-mdc-tab-header-pagination{-webkit-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:rgba(0,0,0,0);touch-action:none;box-sizing:content-box;background:none;border:none;outline:0;padding:0}.mat-mdc-tab-header-pagination::-moz-focus-inner{border:0}.mat-mdc-tab-header-pagination .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-header-pagination-controls-enabled .mat-mdc-tab-header-pagination{display:flex}.mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after{padding-left:4px}.mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before,.mat-mdc-tab-header-pagination-after{padding-right:4px}.mat-mdc-tab-header-rtl .mat-mdc-tab-header-pagination-before .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-header-pagination-after .mat-mdc-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-mdc-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;height:8px;width:8px;border-color:var(--mat-tab-header-pagination-icon-color)}.mat-mdc-tab-header-pagination-disabled{box-shadow:none;cursor:default;pointer-events:none}.mat-mdc-tab-header-pagination-disabled .mat-mdc-tab-header-pagination-chevron{opacity:.4}.mat-mdc-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-mdc-tab-list{transition:none}.mat-mdc-tab-links{display:flex;flex:1 0 auto}[mat-align-tabs=center]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-mdc-tab-link-container .mat-mdc-tab-links{justify-content:flex-end}.mat-mdc-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1;border-bottom-style:solid;border-bottom-width:var(--mat-tab-header-divider-height);border-bottom-color:var(--mat-tab-header-divider-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination{background-color:var(--mat-tab-header-with-background-background-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background.mat-primary>.mat-mdc-tab-link-container .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab__text-label{color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background:not(.mat-primary)>.mat-mdc-tab-link-container .mat-mdc-tab-link:not(.mdc-tab--active) .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-focus-indicator::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-focus-indicator::before{border-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mdc-tab__ripple::before,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-ripple-element,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mdc-tab__ripple::before{background-color:var(--mat-tab-header-with-background-foreground-color)}.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-link-container .mat-mdc-tab-header-pagination-chevron,.mat-mdc-tab-nav-bar.mat-tabs-with-background>.mat-mdc-tab-header-pagination .mat-mdc-tab-header-pagination-chevron{color:var(--mat-tab-header-with-background-foreground-color)}\"],\n        encapsulation: 2\n      });\n    }\n  }\n  return MatTabNav;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Link inside a `mat-tab-nav-bar`.\n */\nlet MatTabLink = /*#__PURE__*/(() => {\n  class MatTabLink extends InkBarItem {\n    /** Whether the link is active. */\n    get active() {\n      return this._isActive;\n    }\n    set active(value) {\n      if (value !== this._isActive) {\n        this._isActive = value;\n        this._tabNavBar.updateActiveLink();\n      }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * @docs-private\n     */\n    get rippleDisabled() {\n      return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;\n    }\n    constructor(_tabNavBar, /** @docs-private */elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n      super();\n      this._tabNavBar = _tabNavBar;\n      this.elementRef = elementRef;\n      this._focusMonitor = _focusMonitor;\n      this._destroyed = new Subject();\n      /** Whether the tab link is active or not. */\n      this._isActive = false;\n      /** Whether the tab link is disabled. */\n      this.disabled = false;\n      /** Whether ripples are disabled on the tab link. */\n      this.disableRipple = false;\n      this.tabIndex = 0;\n      /** Unique id for the tab. */\n      this.id = `mat-tab-link-${nextUniqueId++}`;\n      this.rippleConfig = globalRippleOptions || {};\n      this.tabIndex = parseInt(tabIndex) || 0;\n      if (animationMode === 'NoopAnimations') {\n        this.rippleConfig.animation = {\n          enterDuration: 0,\n          exitDuration: 0\n        };\n      }\n      _tabNavBar._fitInkBarToContent.pipe(takeUntil(this._destroyed)).subscribe(fitInkBarToContent => {\n        this.fitInkBarToContent = fitInkBarToContent;\n      });\n    }\n    /** Focuses the tab link. */\n    focus() {\n      this.elementRef.nativeElement.focus();\n    }\n    ngAfterViewInit() {\n      this._focusMonitor.monitor(this.elementRef);\n    }\n    ngOnDestroy() {\n      this._destroyed.next();\n      this._destroyed.complete();\n      super.ngOnDestroy();\n      this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n    _handleFocus() {\n      // Since we allow navigation through tabbing in the nav bar, we\n      // have to update the focused index whenever the link receives focus.\n      this._tabNavBar.focusIndex = this._tabNavBar._items.toArray().indexOf(this);\n    }\n    _handleKeydown(event) {\n      if (event.keyCode === SPACE || event.keyCode === ENTER) {\n        if (this.disabled) {\n          event.preventDefault();\n        } else if (this._tabNavBar.tabPanel) {\n          // Only prevent the default action on space since it can scroll the page.\n          // Don't prevent enter since it can break link navigation.\n          if (event.keyCode === SPACE) {\n            event.preventDefault();\n          }\n          this.elementRef.nativeElement.click();\n        }\n      }\n    }\n    _getAriaControls() {\n      return this._tabNavBar.tabPanel ? this._tabNavBar.tabPanel?.id : this.elementRef.nativeElement.getAttribute('aria-controls');\n    }\n    _getAriaSelected() {\n      if (this._tabNavBar.tabPanel) {\n        return this.active ? 'true' : 'false';\n      } else {\n        return this.elementRef.nativeElement.getAttribute('aria-selected');\n      }\n    }\n    _getAriaCurrent() {\n      return this.active && !this._tabNavBar.tabPanel ? 'page' : null;\n    }\n    _getRole() {\n      return this._tabNavBar.tabPanel ? 'tab' : this.elementRef.nativeElement.getAttribute('role');\n    }\n    _getTabIndex() {\n      if (this._tabNavBar.tabPanel) {\n        return this._isActive && !this.disabled ? 0 : -1;\n      } else {\n        return this.disabled ? -1 : this.tabIndex;\n      }\n    }\n    static {\n      this.ɵfac = function MatTabLink_Factory(t) {\n        return new (t || MatTabLink)(i0.ɵɵdirectiveInject(MatTabNav), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i4.FocusMonitor), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTabLink,\n        selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]],\n        hostAttrs: [1, \"mdc-tab\", \"mat-mdc-tab-link\", \"mat-mdc-focus-indicator\"],\n        hostVars: 11,\n        hostBindings: function MatTabLink_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"focus\", function MatTabLink_focus_HostBindingHandler() {\n              return ctx._handleFocus();\n            })(\"keydown\", function MatTabLink_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-controls\", ctx._getAriaControls())(\"aria-current\", ctx._getAriaCurrent())(\"aria-disabled\", ctx.disabled)(\"aria-selected\", ctx._getAriaSelected())(\"id\", ctx.id)(\"tabIndex\", ctx._getTabIndex())(\"role\", ctx._getRole());\n            i0.ɵɵclassProp(\"mat-mdc-tab-disabled\", ctx.disabled)(\"mdc-tab--active\", ctx.active);\n          }\n        },\n        inputs: {\n          active: [2, \"active\", \"active\", booleanAttribute],\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n          id: \"id\"\n        },\n        exportAs: [\"matTabLink\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        attrs: _c11,\n        ngContentSelectors: _c0,\n        decls: 5,\n        vars: 2,\n        consts: [[1, \"mdc-tab__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-tab-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mdc-tab__content\"], [1, \"mdc-tab__text-label\"]],\n        template: function MatTabLink_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelement(0, \"span\", 0)(1, \"div\", 1);\n            i0.ɵɵelementStart(2, \"span\", 2)(3, \"span\", 3);\n            i0.ɵɵprojection(4);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"matRippleTrigger\", ctx.elementRef.nativeElement)(\"matRippleDisabled\", ctx.rippleDisabled);\n          }\n        },\n        dependencies: [MatRipple],\n        styles: [\".mat-mdc-tab-link{-webkit-tap-highlight-color:rgba(0,0,0,0);-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale;text-decoration:none;background:none;height:var(--mdc-secondary-navigation-tab-container-height);font-family:var(--mat-tab-header-label-text-font);font-size:var(--mat-tab-header-label-text-size);letter-spacing:var(--mat-tab-header-label-text-tracking);line-height:var(--mat-tab-header-label-text-line-height);font-weight:var(--mat-tab-header-label-text-weight)}.mat-mdc-tab-link.mdc-tab{flex-grow:0}.mat-mdc-tab-link .mdc-tab-indicator__content--underline{border-color:var(--mdc-tab-indicator-active-indicator-color);border-top-width:var(--mdc-tab-indicator-active-indicator-height);border-radius:var(--mdc-tab-indicator-active-indicator-shape)}.mat-mdc-tab-link:hover .mdc-tab__text-label{color:var(--mat-tab-header-inactive-hover-label-text-color)}.mat-mdc-tab-link:focus .mdc-tab__text-label{color:var(--mat-tab-header-inactive-focus-label-text-color)}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__text-label{color:var(--mat-tab-header-active-label-text-color)}.mat-mdc-tab-link.mdc-tab--active .mdc-tab__ripple::before,.mat-mdc-tab-link.mdc-tab--active .mat-ripple-element{background-color:var(--mat-tab-header-active-ripple-color)}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab__text-label{color:var(--mat-tab-header-active-hover-label-text-color)}.mat-mdc-tab-link.mdc-tab--active:hover .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-hover-indicator-color)}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab__text-label{color:var(--mat-tab-header-active-focus-label-text-color)}.mat-mdc-tab-link.mdc-tab--active:focus .mdc-tab-indicator__content--underline{border-color:var(--mat-tab-header-active-focus-indicator-color)}.mat-mdc-tab-link.mat-mdc-tab-disabled{opacity:.4;pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__content{pointer-events:none}.mat-mdc-tab-link.mat-mdc-tab-disabled .mdc-tab__ripple::before,.mat-mdc-tab-link.mat-mdc-tab-disabled .mat-ripple-element{background-color:var(--mat-tab-header-disabled-ripple-color)}.mat-mdc-tab-link .mdc-tab__ripple::before{content:\\\"\\\";display:block;position:absolute;top:0;left:0;right:0;bottom:0;opacity:0;pointer-events:none;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-link .mdc-tab__text-label{color:var(--mat-tab-header-inactive-label-text-color);display:inline-flex;align-items:center}.mat-mdc-tab-link .mdc-tab__content{position:relative;pointer-events:auto}.mat-mdc-tab-link:hover .mdc-tab__ripple::before{opacity:.04}.mat-mdc-tab-link.cdk-program-focused .mdc-tab__ripple::before,.mat-mdc-tab-link.cdk-keyboard-focused .mdc-tab__ripple::before{opacity:.12}.mat-mdc-tab-link .mat-ripple-element{opacity:.12;background-color:var(--mat-tab-header-inactive-ripple-color)}.mat-mdc-tab-header.mat-mdc-tab-nav-bar-stretch-tabs .mat-mdc-tab-link{flex-grow:1}.mat-mdc-tab-link::before{margin:5px}@media(max-width: 599px){.mat-mdc-tab-link{min-width:72px}}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatTabLink;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Tab panel component associated with MatTabNav.\n */\nlet MatTabNavPanel = /*#__PURE__*/(() => {\n  class MatTabNavPanel {\n    constructor() {\n      /** Unique id for the tab panel. */\n      this.id = `mat-tab-nav-panel-${nextUniqueId++}`;\n    }\n    static {\n      this.ɵfac = function MatTabNavPanel_Factory(t) {\n        return new (t || MatTabNavPanel)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTabNavPanel,\n        selectors: [[\"mat-tab-nav-panel\"]],\n        hostAttrs: [\"role\", \"tabpanel\", 1, \"mat-mdc-tab-nav-panel\"],\n        hostVars: 2,\n        hostBindings: function MatTabNavPanel_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-labelledby\", ctx._activeTabId)(\"id\", ctx.id);\n          }\n        },\n        inputs: {\n          id: \"id\"\n        },\n        exportAs: [\"matTabNavPanel\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c0,\n        decls: 1,\n        vars: 0,\n        template: function MatTabNavPanel_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatTabNavPanel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatTabsModule = /*#__PURE__*/(() => {\n  class MatTabsModule {\n    static {\n      this.ɵfac = function MatTabsModule_Factory(t) {\n        return new (t || MatTabsModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatTabsModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatTabsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TAB, MAT_TABS_CONFIG, MAT_TAB_CONTENT, MAT_TAB_GROUP, MAT_TAB_LABEL, MatInkBar, MatPaginatedTabHeader, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabNavPanel, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MAT_INK_BAR_POSITIONER_FACTORY, matTabsAnimations };\n","import * as i1 from '@angular/cdk/bidi';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, isDataSource, _ViewRepeaterOperation, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]], \"*\"];\nconst _c1 = [\"caption\", \"colgroup, col\", \"*\"];\nfunction CdkTable_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction CdkTable_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 0);\n    i0.ɵɵelementContainer(1, 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"tbody\", 0);\n    i0.ɵɵelementContainer(3, 2)(4, 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"tfoot\", 0);\n    i0.ɵɵelementContainer(6, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CdkTable_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 1)(1, 2)(2, 3)(3, 4);\n  }\n}\nfunction CdkTextColumn_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n  }\n}\nfunction CdkTextColumn_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.dataAccessor(data_r2, ctx_r0.name), \" \");\n  }\n}\nexport { DataSource } from '@angular/cdk/collections';\nimport * as i2 from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, booleanAttribute, Inject, Optional, Input, ContentChild, inject, NgZone, Injectable, Component, ChangeDetectionStrategy, ViewEncapsulation, EmbeddedViewRef, EventEmitter, Injector, afterNextRender, Attribute, SkipSelf, Output, ContentChildren, ViewChild, NgModule } from '@angular/core';\nimport { Subject, BehaviorSubject, isObservable, of } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nconst CDK_TABLE = /*#__PURE__*/new InjectionToken('CDK_TABLE');\n/** Injection token that can be used to specify the text column options. */\nconst TEXT_COLUMN_OPTIONS = /*#__PURE__*/new InjectionToken('text-column-options');\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nlet CdkCellDef = /*#__PURE__*/(() => {\n  class CdkCellDef {\n    constructor( /** @docs-private */template) {\n      this.template = template;\n    }\n    static {\n      this.ɵfac = function CdkCellDef_Factory(t) {\n        return new (t || CdkCellDef)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkCellDef,\n        selectors: [[\"\", \"cdkCellDef\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return CdkCellDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nlet CdkHeaderCellDef = /*#__PURE__*/(() => {\n  class CdkHeaderCellDef {\n    constructor( /** @docs-private */template) {\n      this.template = template;\n    }\n    static {\n      this.ɵfac = function CdkHeaderCellDef_Factory(t) {\n        return new (t || CdkHeaderCellDef)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkHeaderCellDef,\n        selectors: [[\"\", \"cdkHeaderCellDef\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return CdkHeaderCellDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nlet CdkFooterCellDef = /*#__PURE__*/(() => {\n  class CdkFooterCellDef {\n    constructor( /** @docs-private */template) {\n      this.template = template;\n    }\n    static {\n      this.ɵfac = function CdkFooterCellDef_Factory(t) {\n        return new (t || CdkFooterCellDef)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkFooterCellDef,\n        selectors: [[\"\", \"cdkFooterCellDef\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return CdkFooterCellDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\nlet CdkColumnDef = /*#__PURE__*/(() => {\n  class CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n      return this._name;\n    }\n    set name(name) {\n      this._setNameInput(name);\n    }\n    /** Whether the cell is sticky. */\n    get sticky() {\n      return this._sticky;\n    }\n    set sticky(value) {\n      if (value !== this._sticky) {\n        this._sticky = value;\n        this._hasStickyChanged = true;\n      }\n    }\n    /**\n     * Whether this column should be sticky positioned on the end of the row. Should make sure\n     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n     * has been changed.\n     */\n    get stickyEnd() {\n      return this._stickyEnd;\n    }\n    set stickyEnd(value) {\n      if (value !== this._stickyEnd) {\n        this._stickyEnd = value;\n        this._hasStickyChanged = true;\n      }\n    }\n    constructor(_table) {\n      this._table = _table;\n      this._hasStickyChanged = false;\n      this._sticky = false;\n      this._stickyEnd = false;\n    }\n    /** Whether the sticky state has changed. */\n    hasStickyChanged() {\n      const hasStickyChanged = this._hasStickyChanged;\n      this.resetStickyChanged();\n      return hasStickyChanged;\n    }\n    /** Resets the sticky changed state. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n    /**\n     * Overridable method that sets the css classes that will be added to every cell in this\n     * column.\n     * In the future, columnCssClassName will change from type string[] to string and this\n     * will set a single string value.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n      this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n    }\n    /**\n     * This has been extracted to a util because of TS 4 and VE.\n     * View Engine doesn't support property rename inheritance.\n     * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n     * @docs-private\n     */\n    _setNameInput(value) {\n      // If the directive is set without a name (updated programmatically), then this setter will\n      // trigger with an empty string and should not overwrite the programmatically set value.\n      if (value) {\n        this._name = value;\n        this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/gi, '-');\n        this._updateColumnCssClassName();\n      }\n    }\n    static {\n      this.ɵfac = function CdkColumnDef_Factory(t) {\n        return new (t || CdkColumnDef)(i0.ɵɵdirectiveInject(CDK_TABLE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkColumnDef,\n        selectors: [[\"\", \"cdkColumnDef\", \"\"]],\n        contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, CdkCellDef, 5);\n            i0.ɵɵcontentQuery(dirIndex, CdkHeaderCellDef, 5);\n            i0.ɵɵcontentQuery(dirIndex, CdkFooterCellDef, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footerCell = _t.first);\n          }\n        },\n        inputs: {\n          name: [0, \"cdkColumnDef\", \"name\"],\n          sticky: [2, \"sticky\", \"sticky\", booleanAttribute],\n          stickyEnd: [2, \"stickyEnd\", \"stickyEnd\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n          useExisting: CdkColumnDef\n        }]), i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return CdkColumnDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nclass BaseCdkCell {\n  constructor(columnDef, elementRef) {\n    elementRef.nativeElement.classList.add(...columnDef._columnCssClassName);\n  }\n}\n/** Header cell template container that adds the right classes and role. */\nlet CdkHeaderCell = /*#__PURE__*/(() => {\n  class CdkHeaderCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n      super(columnDef, elementRef);\n    }\n    static {\n      this.ɵfac = function CdkHeaderCell_Factory(t) {\n        return new (t || CdkHeaderCell)(i0.ɵɵdirectiveInject(CdkColumnDef), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkHeaderCell,\n        selectors: [[\"cdk-header-cell\"], [\"th\", \"cdk-header-cell\", \"\"]],\n        hostAttrs: [\"role\", \"columnheader\", 1, \"cdk-header-cell\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CdkHeaderCell;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Footer cell template container that adds the right classes and role. */\nlet CdkFooterCell = /*#__PURE__*/(() => {\n  class CdkFooterCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n      super(columnDef, elementRef);\n      const role = columnDef._table?._getCellRole();\n      if (role) {\n        elementRef.nativeElement.setAttribute('role', role);\n      }\n    }\n    static {\n      this.ɵfac = function CdkFooterCell_Factory(t) {\n        return new (t || CdkFooterCell)(i0.ɵɵdirectiveInject(CdkColumnDef), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkFooterCell,\n        selectors: [[\"cdk-footer-cell\"], [\"td\", \"cdk-footer-cell\", \"\"]],\n        hostAttrs: [1, \"cdk-footer-cell\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CdkFooterCell;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Cell template container that adds the right classes and role. */\nlet CdkCell = /*#__PURE__*/(() => {\n  class CdkCell extends BaseCdkCell {\n    constructor(columnDef, elementRef) {\n      super(columnDef, elementRef);\n      const role = columnDef._table?._getCellRole();\n      if (role) {\n        elementRef.nativeElement.setAttribute('role', role);\n      }\n    }\n    static {\n      this.ɵfac = function CdkCell_Factory(t) {\n        return new (t || CdkCell)(i0.ɵɵdirectiveInject(CdkColumnDef), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkCell,\n        selectors: [[\"cdk-cell\"], [\"td\", \"cdk-cell\", \"\"]],\n        hostAttrs: [1, \"cdk-cell\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CdkCell;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @docs-private\n */\nclass _Schedule {\n  constructor() {\n    this.tasks = [];\n    this.endTasks = [];\n  }\n}\n/** Injection token used to provide a coalesced style scheduler. */\nconst _COALESCED_STYLE_SCHEDULER = /*#__PURE__*/new InjectionToken('_COALESCED_STYLE_SCHEDULER');\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\nlet _CoalescedStyleScheduler = /*#__PURE__*/(() => {\n  class _CoalescedStyleScheduler {\n    constructor(_unusedNgZone) {\n      this._currentSchedule = null;\n      this._ngZone = inject(NgZone);\n    }\n    /**\n     * Schedules the specified task to run at the end of the current VM turn.\n     */\n    schedule(task) {\n      this._createScheduleIfNeeded();\n      this._currentSchedule.tasks.push(task);\n    }\n    /**\n     * Schedules the specified task to run after other scheduled tasks at the end of the current\n     * VM turn.\n     */\n    scheduleEnd(task) {\n      this._createScheduleIfNeeded();\n      this._currentSchedule.endTasks.push(task);\n    }\n    _createScheduleIfNeeded() {\n      if (this._currentSchedule) {\n        return;\n      }\n      this._currentSchedule = new _Schedule();\n      this._ngZone.runOutsideAngular(() =>\n      // TODO(mmalerba): Scheduling this using something that runs less frequently\n      //  (e.g. requestAnimationFrame, setTimeout, etc.) causes noticeable jank with the column\n      //  resizer. We should audit the usages of schedule / scheduleEnd in that component and see\n      //  if we can refactor it so that we don't need to flush the tasks quite so frequently.\n      queueMicrotask(() => {\n        while (this._currentSchedule.tasks.length || this._currentSchedule.endTasks.length) {\n          const schedule = this._currentSchedule;\n          // Capture new tasks scheduled by the current set of tasks.\n          this._currentSchedule = new _Schedule();\n          for (const task of schedule.tasks) {\n            task();\n          }\n          for (const task of schedule.endTasks) {\n            task();\n          }\n        }\n        this._currentSchedule = null;\n      }));\n    }\n    static {\n      this.ɵfac = function _CoalescedStyleScheduler_Factory(t) {\n        return new (t || _CoalescedStyleScheduler)(i0.ɵɵinject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: _CoalescedStyleScheduler,\n        factory: _CoalescedStyleScheduler.ɵfac\n      });\n    }\n  }\n  return _CoalescedStyleScheduler;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nconst CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\nlet BaseRowDef = /*#__PURE__*/(() => {\n  class BaseRowDef {\n    constructor( /** @docs-private */template, _differs) {\n      this.template = template;\n      this._differs = _differs;\n    }\n    ngOnChanges(changes) {\n      // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n      // of the columns property or an empty array if none is provided.\n      if (!this._columnsDiffer) {\n        const columns = changes['columns'] && changes['columns'].currentValue || [];\n        this._columnsDiffer = this._differs.find(columns).create();\n        this._columnsDiffer.diff(columns);\n      }\n    }\n    /**\n     * Returns the difference between the current columns and the columns from the last diff, or null\n     * if there is no difference.\n     */\n    getColumnsDiff() {\n      return this._columnsDiffer.diff(this.columns);\n    }\n    /** Gets this row def's relevant cell template from the provided column def. */\n    extractCellTemplate(column) {\n      if (this instanceof CdkHeaderRowDef) {\n        return column.headerCell.template;\n      }\n      if (this instanceof CdkFooterRowDef) {\n        return column.footerCell.template;\n      } else {\n        return column.cell.template;\n      }\n    }\n    static {\n      this.ɵfac = function BaseRowDef_Factory(t) {\n        return new (t || BaseRowDef)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: BaseRowDef,\n        features: [i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return BaseRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nlet CdkHeaderRowDef = /*#__PURE__*/(() => {\n  class CdkHeaderRowDef extends BaseRowDef {\n    /** Whether the row is sticky. */\n    get sticky() {\n      return this._sticky;\n    }\n    set sticky(value) {\n      if (value !== this._sticky) {\n        this._sticky = value;\n        this._hasStickyChanged = true;\n      }\n    }\n    constructor(template, _differs, _table) {\n      super(template, _differs);\n      this._table = _table;\n      this._hasStickyChanged = false;\n      this._sticky = false;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n      super.ngOnChanges(changes);\n    }\n    /** Whether the sticky state has changed. */\n    hasStickyChanged() {\n      const hasStickyChanged = this._hasStickyChanged;\n      this.resetStickyChanged();\n      return hasStickyChanged;\n    }\n    /** Resets the sticky changed state. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n    static {\n      this.ɵfac = function CdkHeaderRowDef_Factory(t) {\n        return new (t || CdkHeaderRowDef)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(CDK_TABLE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkHeaderRowDef,\n        selectors: [[\"\", \"cdkHeaderRowDef\", \"\"]],\n        inputs: {\n          columns: [0, \"cdkHeaderRowDef\", \"columns\"],\n          sticky: [2, \"cdkHeaderRowDefSticky\", \"sticky\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkHeaderRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nlet CdkFooterRowDef = /*#__PURE__*/(() => {\n  class CdkFooterRowDef extends BaseRowDef {\n    /** Whether the row is sticky. */\n    get sticky() {\n      return this._sticky;\n    }\n    set sticky(value) {\n      if (value !== this._sticky) {\n        this._sticky = value;\n        this._hasStickyChanged = true;\n      }\n    }\n    constructor(template, _differs, _table) {\n      super(template, _differs);\n      this._table = _table;\n      this._hasStickyChanged = false;\n      this._sticky = false;\n    }\n    // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n    // Explicitly define it so that the method is called as part of the Angular lifecycle.\n    ngOnChanges(changes) {\n      super.ngOnChanges(changes);\n    }\n    /** Whether the sticky state has changed. */\n    hasStickyChanged() {\n      const hasStickyChanged = this._hasStickyChanged;\n      this.resetStickyChanged();\n      return hasStickyChanged;\n    }\n    /** Resets the sticky changed state. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n    static {\n      this.ɵfac = function CdkFooterRowDef_Factory(t) {\n        return new (t || CdkFooterRowDef)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(CDK_TABLE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkFooterRowDef,\n        selectors: [[\"\", \"cdkFooterRowDef\", \"\"]],\n        inputs: {\n          columns: [0, \"cdkFooterRowDef\", \"columns\"],\n          sticky: [2, \"cdkFooterRowDefSticky\", \"sticky\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkFooterRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nlet CdkRowDef = /*#__PURE__*/(() => {\n  class CdkRowDef extends BaseRowDef {\n    // TODO(andrewseguin): Add an input for providing a switch function to determine\n    //   if this template should be used.\n    constructor(template, _differs, _table) {\n      super(template, _differs);\n      this._table = _table;\n    }\n    static {\n      this.ɵfac = function CdkRowDef_Factory(t) {\n        return new (t || CdkRowDef)(i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(CDK_TABLE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkRowDef,\n        selectors: [[\"\", \"cdkRowDef\", \"\"]],\n        inputs: {\n          columns: [0, \"cdkRowDefColumns\", \"columns\"],\n          when: [0, \"cdkRowDefWhen\", \"when\"]\n        },\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CdkRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\nlet CdkCellOutlet = /*#__PURE__*/(() => {\n  class CdkCellOutlet {\n    /**\n     * Static property containing the latest constructed instance of this class.\n     * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n     * createEmbeddedView. After one of these components are created, this property will provide\n     * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n     * construct the cells with the provided context.\n     */\n    static {\n      this.mostRecentCellOutlet = null;\n    }\n    constructor(_viewContainer) {\n      this._viewContainer = _viewContainer;\n      CdkCellOutlet.mostRecentCellOutlet = this;\n    }\n    ngOnDestroy() {\n      // If this was the last outlet being rendered in the view, remove the reference\n      // from the static property after it has been destroyed to avoid leaking memory.\n      if (CdkCellOutlet.mostRecentCellOutlet === this) {\n        CdkCellOutlet.mostRecentCellOutlet = null;\n      }\n    }\n    static {\n      this.ɵfac = function CdkCellOutlet_Factory(t) {\n        return new (t || CdkCellOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkCellOutlet,\n        selectors: [[\"\", \"cdkCellOutlet\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return CdkCellOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nlet CdkHeaderRow = /*#__PURE__*/(() => {\n  class CdkHeaderRow {\n    static {\n      this.ɵfac = function CdkHeaderRow_Factory(t) {\n        return new (t || CdkHeaderRow)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CdkHeaderRow,\n        selectors: [[\"cdk-header-row\"], [\"tr\", \"cdk-header-row\", \"\"]],\n        hostAttrs: [\"role\", \"row\", 1, \"cdk-header-row\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 1,\n        vars: 0,\n        consts: [[\"cdkCellOutlet\", \"\"]],\n        template: function CdkHeaderRow_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementContainer(0, 0);\n          }\n        },\n        dependencies: [CdkCellOutlet],\n        encapsulation: 2\n      });\n    }\n  }\n  return CdkHeaderRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nlet CdkFooterRow = /*#__PURE__*/(() => {\n  class CdkFooterRow {\n    static {\n      this.ɵfac = function CdkFooterRow_Factory(t) {\n        return new (t || CdkFooterRow)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CdkFooterRow,\n        selectors: [[\"cdk-footer-row\"], [\"tr\", \"cdk-footer-row\", \"\"]],\n        hostAttrs: [\"role\", \"row\", 1, \"cdk-footer-row\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 1,\n        vars: 0,\n        consts: [[\"cdkCellOutlet\", \"\"]],\n        template: function CdkFooterRow_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementContainer(0, 0);\n          }\n        },\n        dependencies: [CdkCellOutlet],\n        encapsulation: 2\n      });\n    }\n  }\n  return CdkFooterRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nlet CdkRow = /*#__PURE__*/(() => {\n  class CdkRow {\n    static {\n      this.ɵfac = function CdkRow_Factory(t) {\n        return new (t || CdkRow)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CdkRow,\n        selectors: [[\"cdk-row\"], [\"tr\", \"cdk-row\", \"\"]],\n        hostAttrs: [\"role\", \"row\", 1, \"cdk-row\"],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 1,\n        vars: 0,\n        consts: [[\"cdkCellOutlet\", \"\"]],\n        template: function CdkRow_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementContainer(0, 0);\n          }\n        },\n        dependencies: [CdkCellOutlet],\n        encapsulation: 2\n      });\n    }\n  }\n  return CdkRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Row that can be used to display a message when no data is shown in the table. */\nlet CdkNoDataRow = /*#__PURE__*/(() => {\n  class CdkNoDataRow {\n    constructor(templateRef) {\n      this.templateRef = templateRef;\n      this._contentClassName = 'cdk-no-data-row';\n    }\n    static {\n      this.ɵfac = function CdkNoDataRow_Factory(t) {\n        return new (t || CdkNoDataRow)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkNoDataRow,\n        selectors: [[\"ng-template\", \"cdkNoDataRow\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return CdkNoDataRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nconst STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nclass StickyStyler {\n  /**\n   * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n   *     that uses the native `<table>` element.\n   * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n   *     sticky positioning applied.\n   * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n   *     by reversing left/right positions.\n   * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n   * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n   *     using inline styles. If false, it is assumed that position: sticky is included in\n   *     the component stylesheet for _stickCellCss.\n   * @param _positionListener A listener that is notified of changes to sticky rows/columns\n   *     and their dimensions.\n   */\n  constructor(_isNativeHtmlTable, _stickCellCss, direction, _coalescedStyleScheduler, _isBrowser = true, _needsPositionStickyOnElement = true, _positionListener) {\n    this._isNativeHtmlTable = _isNativeHtmlTable;\n    this._stickCellCss = _stickCellCss;\n    this.direction = direction;\n    this._coalescedStyleScheduler = _coalescedStyleScheduler;\n    this._isBrowser = _isBrowser;\n    this._needsPositionStickyOnElement = _needsPositionStickyOnElement;\n    this._positionListener = _positionListener;\n    this._cachedCellWidths = [];\n    this._borderCellCss = {\n      'top': `${_stickCellCss}-border-elem-top`,\n      'bottom': `${_stickCellCss}-border-elem-bottom`,\n      'left': `${_stickCellCss}-border-elem-left`,\n      'right': `${_stickCellCss}-border-elem-right`\n    };\n  }\n  /**\n   * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n   * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n   * @param rows The list of rows that should be cleared from sticking in the provided directions\n   * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n   */\n  clearStickyPositioning(rows, stickyDirections) {\n    const elementsToClear = [];\n    for (const row of rows) {\n      // If the row isn't an element (e.g. if it's an `ng-container`),\n      // it won't have inline styles or `children` so we skip it.\n      if (row.nodeType !== row.ELEMENT_NODE) {\n        continue;\n      }\n      elementsToClear.push(row);\n      for (let i = 0; i < row.children.length; i++) {\n        elementsToClear.push(row.children[i]);\n      }\n    }\n    // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n    this._coalescedStyleScheduler.schedule(() => {\n      for (const element of elementsToClear) {\n        this._removeStickyStyle(element, stickyDirections);\n      }\n    });\n  }\n  /**\n   * Applies sticky left and right positions to the cells of each row according to the sticky\n   * states of the rendered column definitions.\n   * @param rows The rows that should have its set of cells stuck according to the sticky states.\n   * @param stickyStartStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the start of the row.\n   * @param stickyEndStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the end of the row.\n   * @param recalculateCellWidths Whether the sticky styler should recalculate the width of each\n   *     column cell. If `false` cached widths will be used instead.\n   */\n  updateStickyColumns(rows, stickyStartStates, stickyEndStates, recalculateCellWidths = true) {\n    if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) || stickyEndStates.some(state => state))) {\n      if (this._positionListener) {\n        this._positionListener.stickyColumnsUpdated({\n          sizes: []\n        });\n        this._positionListener.stickyEndColumnsUpdated({\n          sizes: []\n        });\n      }\n      return;\n    }\n    // Coalesce with sticky row updates (and potentially other changes like column resize).\n    this._coalescedStyleScheduler.schedule(() => {\n      const firstRow = rows[0];\n      const numCells = firstRow.children.length;\n      const cellWidths = this._getCellWidths(firstRow, recalculateCellWidths);\n      const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n      const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n      const lastStickyStart = stickyStartStates.lastIndexOf(true);\n      const firstStickyEnd = stickyEndStates.indexOf(true);\n      const isRtl = this.direction === 'rtl';\n      const start = isRtl ? 'right' : 'left';\n      const end = isRtl ? 'left' : 'right';\n      for (const row of rows) {\n        for (let i = 0; i < numCells; i++) {\n          const cell = row.children[i];\n          if (stickyStartStates[i]) {\n            this._addStickyStyle(cell, start, startPositions[i], i === lastStickyStart);\n          }\n          if (stickyEndStates[i]) {\n            this._addStickyStyle(cell, end, endPositions[i], i === firstStickyEnd);\n          }\n        }\n      }\n      if (this._positionListener) {\n        this._positionListener.stickyColumnsUpdated({\n          sizes: lastStickyStart === -1 ? [] : cellWidths.slice(0, lastStickyStart + 1).map((width, index) => stickyStartStates[index] ? width : null)\n        });\n        this._positionListener.stickyEndColumnsUpdated({\n          sizes: firstStickyEnd === -1 ? [] : cellWidths.slice(firstStickyEnd).map((width, index) => stickyEndStates[index + firstStickyEnd] ? width : null).reverse()\n        });\n      }\n    });\n  }\n  /**\n   * Applies sticky positioning to the row's cells if using the native table layout, and to the\n   * row itself otherwise.\n   * @param rowsToStick The list of rows that should be stuck according to their corresponding\n   *     sticky state and to the provided top or bottom position.\n   * @param stickyStates A list of boolean states where each state represents whether the row\n   *     should be stuck in the particular top or bottom position.\n   * @param position The position direction in which the row should be stuck if that row should be\n   *     sticky.\n   *\n   */\n  stickRows(rowsToStick, stickyStates, position) {\n    // Since we can't measure the rows on the server, we can't stick the rows properly.\n    if (!this._isBrowser) {\n      return;\n    }\n    // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n    // (and potentially other changes like column resize).\n    this._coalescedStyleScheduler.schedule(() => {\n      // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n      // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n      // sticky states need to be reversed as well.\n      const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n      const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n      // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n      const stickyOffsets = [];\n      const stickyCellHeights = [];\n      const elementsToStick = [];\n      for (let rowIndex = 0, stickyOffset = 0; rowIndex < rows.length; rowIndex++) {\n        if (!states[rowIndex]) {\n          continue;\n        }\n        stickyOffsets[rowIndex] = stickyOffset;\n        const row = rows[rowIndex];\n        elementsToStick[rowIndex] = this._isNativeHtmlTable ? Array.from(row.children) : [row];\n        const height = row.getBoundingClientRect().height;\n        stickyOffset += height;\n        stickyCellHeights[rowIndex] = height;\n      }\n      const borderedRowIndex = states.lastIndexOf(true);\n      for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        if (!states[rowIndex]) {\n          continue;\n        }\n        const offset = stickyOffsets[rowIndex];\n        const isBorderedRowIndex = rowIndex === borderedRowIndex;\n        for (const element of elementsToStick[rowIndex]) {\n          this._addStickyStyle(element, position, offset, isBorderedRowIndex);\n        }\n      }\n      if (position === 'top') {\n        this._positionListener?.stickyHeaderRowsUpdated({\n          sizes: stickyCellHeights,\n          offsets: stickyOffsets,\n          elements: elementsToStick\n        });\n      } else {\n        this._positionListener?.stickyFooterRowsUpdated({\n          sizes: stickyCellHeights,\n          offsets: stickyOffsets,\n          elements: elementsToStick\n        });\n      }\n    });\n  }\n  /**\n   * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n   * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n   * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n   * the tfoot element.\n   */\n  updateStickyFooterContainer(tableElement, stickyStates) {\n    if (!this._isNativeHtmlTable) {\n      return;\n    }\n    // Coalesce with other sticky updates (and potentially other changes like column resize).\n    this._coalescedStyleScheduler.schedule(() => {\n      const tfoot = tableElement.querySelector('tfoot');\n      if (tfoot) {\n        if (stickyStates.some(state => !state)) {\n          this._removeStickyStyle(tfoot, ['bottom']);\n        } else {\n          this._addStickyStyle(tfoot, 'bottom', 0, false);\n        }\n      }\n    });\n  }\n  /**\n   * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n   * the zIndex, removing each of the provided sticky directions, and removing the\n   * sticky position if there are no more directions.\n   */\n  _removeStickyStyle(element, stickyDirections) {\n    for (const dir of stickyDirections) {\n      element.style[dir] = '';\n      element.classList.remove(this._borderCellCss[dir]);\n    }\n    // If the element no longer has any more sticky directions, remove sticky positioning and\n    // the sticky CSS class.\n    // Short-circuit checking element.style[dir] for stickyDirections as they\n    // were already removed above.\n    const hasDirection = STICKY_DIRECTIONS.some(dir => stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n    if (hasDirection) {\n      element.style.zIndex = this._getCalculatedZIndex(element);\n    } else {\n      // When not hasDirection, _getCalculatedZIndex will always return ''.\n      element.style.zIndex = '';\n      if (this._needsPositionStickyOnElement) {\n        element.style.position = '';\n      }\n      element.classList.remove(this._stickCellCss);\n    }\n  }\n  /**\n   * Adds the sticky styling to the element by adding the sticky style class, changing position\n   * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n   * direction and value.\n   */\n  _addStickyStyle(element, dir, dirValue, isBorderElement) {\n    element.classList.add(this._stickCellCss);\n    if (isBorderElement) {\n      element.classList.add(this._borderCellCss[dir]);\n    }\n    element.style[dir] = `${dirValue}px`;\n    element.style.zIndex = this._getCalculatedZIndex(element);\n    if (this._needsPositionStickyOnElement) {\n      element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n    }\n  }\n  /**\n   * Calculate what the z-index should be for the element, depending on what directions (top,\n   * bottom, left, right) have been set. It should be true that elements with a top direction\n   * should have the highest index since these are elements like a table header. If any of those\n   * elements are also sticky in another direction, then they should appear above other elements\n   * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n   * (e.g. footer rows) should then be next in the ordering such that they are below the header\n   * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n   * should minimally increment so that they are above non-sticky elements but below top and bottom\n   * elements.\n   */\n  _getCalculatedZIndex(element) {\n    const zIndexIncrements = {\n      top: 100,\n      bottom: 10,\n      left: 1,\n      right: 1\n    };\n    let zIndex = 0;\n    // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n    // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n    // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n    for (const dir of STICKY_DIRECTIONS) {\n      if (element.style[dir]) {\n        zIndex += zIndexIncrements[dir];\n      }\n    }\n    return zIndex ? `${zIndex}` : '';\n  }\n  /** Gets the widths for each cell in the provided row. */\n  _getCellWidths(row, recalculateCellWidths = true) {\n    if (!recalculateCellWidths && this._cachedCellWidths.length) {\n      return this._cachedCellWidths;\n    }\n    const cellWidths = [];\n    const firstRowCells = row.children;\n    for (let i = 0; i < firstRowCells.length; i++) {\n      let cell = firstRowCells[i];\n      cellWidths.push(cell.getBoundingClientRect().width);\n    }\n    this._cachedCellWidths = cellWidths;\n    return cellWidths;\n  }\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyStartColumnPositions(widths, stickyStates) {\n    const positions = [];\n    let nextPosition = 0;\n    for (let i = 0; i < widths.length; i++) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n    return positions;\n  }\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyEndColumnPositions(widths, stickyStates) {\n    const positions = [];\n    let nextPosition = 0;\n    for (let i = widths.length; i > 0; i--) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n    return positions;\n  }\n}\n\n/**\n * Returns an error to be thrown when attempting to find an nonexistent column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nfunction getTableUnknownColumnError(id) {\n  return Error(`Could not find column with id \"${id}\".`);\n}\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nfunction getTableDuplicateColumnNameError(name) {\n  return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nfunction getTableMultipleDefaultRowDefsError() {\n  return Error(`There can only be one default row without a when predicate function.`);\n}\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nfunction getTableMissingMatchingRowDefError(data) {\n  return Error(`Could not find a matching row definition for the` + `provided row data: ${JSON.stringify(data)}`);\n}\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nfunction getTableMissingRowDefsError() {\n  return Error('Missing definitions for header, footer, and row; ' + 'cannot determine which columns should be rendered.');\n}\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nfunction getTableUnknownDataSourceError() {\n  return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nfunction getTableTextColumnMissingParentTableError() {\n  return Error(`Text column could not find a parent table for registration.`);\n}\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nfunction getTableTextColumnMissingNameError() {\n  return Error(`Table text column must have a name.`);\n}\n\n/** The injection token used to specify the StickyPositioningListener. */\nconst STICKY_POSITIONING_LISTENER = /*#__PURE__*/new InjectionToken('CDK_SPL');\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nlet CdkRecycleRows = /*#__PURE__*/(() => {\n  class CdkRecycleRows {\n    static {\n      this.ɵfac = function CdkRecycleRows_Factory(t) {\n        return new (t || CdkRecycleRows)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkRecycleRows,\n        selectors: [[\"cdk-table\", \"recycleRows\", \"\"], [\"table\", \"cdk-table\", \"\", \"recycleRows\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: _VIEW_REPEATER_STRATEGY,\n          useClass: _RecycleViewRepeaterStrategy\n        }])]\n      });\n    }\n  }\n  return CdkRecycleRows;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\nlet DataRowOutlet = /*#__PURE__*/(() => {\n  class DataRowOutlet {\n    constructor(viewContainer, elementRef) {\n      this.viewContainer = viewContainer;\n      this.elementRef = elementRef;\n      const table = inject(CDK_TABLE);\n      table._rowOutlet = this;\n      table._outletAssigned();\n    }\n    static {\n      this.ɵfac = function DataRowOutlet_Factory(t) {\n        return new (t || DataRowOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: DataRowOutlet,\n        selectors: [[\"\", \"rowOutlet\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return DataRowOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\nlet HeaderRowOutlet = /*#__PURE__*/(() => {\n  class HeaderRowOutlet {\n    constructor(viewContainer, elementRef) {\n      this.viewContainer = viewContainer;\n      this.elementRef = elementRef;\n      const table = inject(CDK_TABLE);\n      table._headerRowOutlet = this;\n      table._outletAssigned();\n    }\n    static {\n      this.ɵfac = function HeaderRowOutlet_Factory(t) {\n        return new (t || HeaderRowOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: HeaderRowOutlet,\n        selectors: [[\"\", \"headerRowOutlet\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return HeaderRowOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\nlet FooterRowOutlet = /*#__PURE__*/(() => {\n  class FooterRowOutlet {\n    constructor(viewContainer, elementRef) {\n      this.viewContainer = viewContainer;\n      this.elementRef = elementRef;\n      const table = inject(CDK_TABLE);\n      table._footerRowOutlet = this;\n      table._outletAssigned();\n    }\n    static {\n      this.ɵfac = function FooterRowOutlet_Factory(t) {\n        return new (t || FooterRowOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FooterRowOutlet,\n        selectors: [[\"\", \"footerRowOutlet\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return FooterRowOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\nlet NoDataRowOutlet = /*#__PURE__*/(() => {\n  class NoDataRowOutlet {\n    constructor(viewContainer, elementRef) {\n      this.viewContainer = viewContainer;\n      this.elementRef = elementRef;\n      const table = inject(CDK_TABLE);\n      table._noDataRowOutlet = this;\n      table._outletAssigned();\n    }\n    static {\n      this.ɵfac = function NoDataRowOutlet_Factory(t) {\n        return new (t || NoDataRowOutlet)(i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NoDataRowOutlet,\n        selectors: [[\"\", \"noDataRowOutlet\", \"\"]],\n        standalone: true\n      });\n    }\n  }\n  return NoDataRowOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nconst CDK_TABLE_TEMPLATE =\n// Note that according to MDN, the `caption` element has to be projected as the **first**\n// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n`\n  <ng-content select=\"caption\"/>\n  <ng-content select=\"colgroup, col\"/>\n\n  <!--\n    Unprojected content throws a hydration error so we need this to capture it.\n    It gets removed on the client so it doesn't affect the layout.\n  -->\n  @if (_isServer) {\n    <ng-content/>\n  }\n\n  @if (_isNativeHtmlTable) {\n    <thead role=\"rowgroup\">\n      <ng-container headerRowOutlet/>\n    </thead>\n    <tbody role=\"rowgroup\">\n      <ng-container rowOutlet/>\n      <ng-container noDataRowOutlet/>\n    </tbody>\n    <tfoot role=\"rowgroup\">\n      <ng-container footerRowOutlet/>\n    </tfoot>\n  } @else {\n    <ng-container headerRowOutlet/>\n    <ng-container rowOutlet/>\n    <ng-container noDataRowOutlet/>\n    <ng-container footerRowOutlet/>\n  }\n`;\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nclass RowViewRef extends EmbeddedViewRef {}\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\nlet CdkTable = /*#__PURE__*/(() => {\n  class CdkTable {\n    /** Aria role to apply to the table's cells based on the table's own role. */\n    _getCellRole() {\n      if (this._cellRoleInternal === undefined) {\n        // Perform this lazily in case the table's role was updated by a directive after construction.\n        const role = this._elementRef.nativeElement.getAttribute('role');\n        const cellRole = role === 'grid' || role === 'treegrid' ? 'gridcell' : 'cell';\n        this._cellRoleInternal = this._isNativeHtmlTable && cellRole === 'cell' ? null : cellRole;\n      }\n      return this._cellRoleInternal;\n    }\n    /**\n     * Tracking function that will be used to check the differences in data changes. Used similarly\n     * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n     * relative to the function to know if a row should be added/removed/moved.\n     * Accepts a function that takes two parameters, `index` and `item`.\n     */\n    get trackBy() {\n      return this._trackByFn;\n    }\n    set trackBy(fn) {\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n        console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n      }\n      this._trackByFn = fn;\n    }\n    /**\n     * The table's source of data, which can be provided in three ways (in order of complexity):\n     *   - Simple data array (each object represents one table row)\n     *   - Stream that emits a data array each time the array changes\n     *   - `DataSource` object that implements the connect/disconnect interface.\n     *\n     * If a data array is provided, the table must be notified when the array's objects are\n     * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n     * render the diff since the last table render. If the data array reference is changed, the table\n     * will automatically trigger an update to the rows.\n     *\n     * When providing an Observable stream, the table will trigger an update automatically when the\n     * stream emits a new array of data.\n     *\n     * Finally, when providing a `DataSource` object, the table will use the Observable stream\n     * provided by the connect function and trigger updates when that stream emits new data array\n     * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n     * subscriptions registered during the connect process).\n     */\n    get dataSource() {\n      return this._dataSource;\n    }\n    set dataSource(dataSource) {\n      if (this._dataSource !== dataSource) {\n        this._switchDataSource(dataSource);\n      }\n    }\n    /**\n     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n     * dataobject will render the first row that evaluates its when predicate to true, in the order\n     * defined in the table, or otherwise the default row which does not have a when predicate.\n     */\n    get multiTemplateDataRows() {\n      return this._multiTemplateDataRows;\n    }\n    set multiTemplateDataRows(value) {\n      this._multiTemplateDataRows = value;\n      // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n      // this setter will be invoked before the row outlet has been defined hence the null check.\n      if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n        this._forceRenderDataRows();\n        this.updateStickyColumnStyles();\n      }\n    }\n    /**\n     * Whether to use a fixed table layout. Enabling this option will enforce consistent column widths\n     * and optimize rendering sticky styles for native tables. No-op for flex tables.\n     */\n    get fixedLayout() {\n      return this._fixedLayout;\n    }\n    set fixedLayout(value) {\n      this._fixedLayout = value;\n      // Toggling `fixedLayout` may change column widths. Sticky column styles should be recalculated.\n      this._forceRecalculateCellWidths = true;\n      this._stickyColumnStylesNeedReset = true;\n    }\n    constructor(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform, _viewRepeater, _coalescedStyleScheduler, _viewportRuler,\n    /**\n     * @deprecated `_stickyPositioningListener` parameter to become required.\n     * @breaking-change 13.0.0\n     */\n    _stickyPositioningListener,\n    /**\n     * @deprecated `_unusedNgZone` parameter to be removed.\n     * @breaking-change 19.0.0\n     */\n    _unusedNgZone) {\n      this._differs = _differs;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elementRef = _elementRef;\n      this._dir = _dir;\n      this._platform = _platform;\n      this._viewRepeater = _viewRepeater;\n      this._coalescedStyleScheduler = _coalescedStyleScheduler;\n      this._viewportRuler = _viewportRuler;\n      this._stickyPositioningListener = _stickyPositioningListener;\n      /** Subject that emits when the component has been destroyed. */\n      this._onDestroy = new Subject();\n      /**\n       * Map of all the user's defined columns (header, data, and footer cell template) identified by\n       * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n       * any custom column definitions added to `_customColumnDefs`.\n       */\n      this._columnDefsByName = new Map();\n      /**\n       * Column definitions that were defined outside of the direct content children of the table.\n       * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n       * column definitions as *its* content child.\n       */\n      this._customColumnDefs = new Set();\n      /**\n       * Data row definitions that were defined outside of the direct content children of the table.\n       * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n       * built-in data rows as *its* content child.\n       */\n      this._customRowDefs = new Set();\n      /**\n       * Header row definitions that were defined outside of the direct content children of the table.\n       * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n       * built-in header rows as *its* content child.\n       */\n      this._customHeaderRowDefs = new Set();\n      /**\n       * Footer row definitions that were defined outside of the direct content children of the table.\n       * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n       * built-in footer row as *its* content child.\n       */\n      this._customFooterRowDefs = new Set();\n      /**\n       * Whether the header row definition has been changed. Triggers an update to the header row after\n       * content is checked. Initialized as true so that the table renders the initial set of rows.\n       */\n      this._headerRowDefChanged = true;\n      /**\n       * Whether the footer row definition has been changed. Triggers an update to the footer row after\n       * content is checked. Initialized as true so that the table renders the initial set of rows.\n       */\n      this._footerRowDefChanged = true;\n      /**\n       * Whether the sticky column styles need to be updated. Set to `true` when the visible columns\n       * change.\n       */\n      this._stickyColumnStylesNeedReset = true;\n      /**\n       * Whether the sticky styler should recalculate cell widths when applying sticky styles. If\n       * `false`, cached values will be used instead. This is only applicable to tables with\n       * {@link fixedLayout} enabled. For other tables, cell widths will always be recalculated.\n       */\n      this._forceRecalculateCellWidths = true;\n      /**\n       * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n       * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n       * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n       * and row template matches, which allows the `IterableDiffer` to check rows by reference\n       * and understand which rows are added/moved/removed.\n       *\n       * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n       * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n       * contains an array of created pairs. The array is necessary to handle cases where the data\n       * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n       * stored.\n       */\n      this._cachedRenderRowsMap = new Map();\n      /**\n       * CSS class added to any row or cell that has sticky positioning applied. May be overridden by\n       * table subclasses.\n       */\n      this.stickyCssClass = 'cdk-table-sticky';\n      /**\n       * Whether to manually add position: sticky to all sticky cell elements. Not needed if\n       * the position is set in a selector associated with the value of stickyCssClass. May be\n       * overridden by table subclasses\n       */\n      this.needsPositionStickyOnElement = true;\n      /** Whether the no data row is currently showing anything. */\n      this._isShowingNoDataRow = false;\n      /** Whether the table has rendered out all the outlets for the first time. */\n      this._hasAllOutlets = false;\n      /** Whether the table is done initializing. */\n      this._hasInitialized = false;\n      this._cellRoleInternal = undefined;\n      this._multiTemplateDataRows = false;\n      this._fixedLayout = false;\n      /**\n       * Emits when the table completes rendering a set of data rows based on the latest data from the\n       * data source, even if the set of rows is empty.\n       */\n      this.contentChanged = new EventEmitter();\n      // TODO(andrewseguin): Remove max value as the end index\n      //   and instead calculate the view on init and scroll.\n      /**\n       * Stream containing the latest information on what rows are being displayed on screen.\n       * Can be used by the data source to as a heuristic of what data should be provided.\n       *\n       * @docs-private\n       */\n      this.viewChange = new BehaviorSubject({\n        start: 0,\n        end: Number.MAX_VALUE\n      });\n      this._injector = inject(Injector);\n      if (!role) {\n        _elementRef.nativeElement.setAttribute('role', 'table');\n      }\n      this._document = _document;\n      this._isServer = !_platform.isBrowser;\n      this._isNativeHtmlTable = _elementRef.nativeElement.nodeName === 'TABLE';\n    }\n    ngOnInit() {\n      this._setupStickyStyler();\n      // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n      // the user has provided a custom trackBy, return the result of that function as evaluated\n      // with the values of the `RenderRow`'s data and index.\n      this._dataDiffer = this._differs.find([]).create((_i, dataRow) => {\n        return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n      });\n      this._viewportRuler.change().pipe(takeUntil(this._onDestroy)).subscribe(() => {\n        this._forceRecalculateCellWidths = true;\n      });\n    }\n    ngAfterContentInit() {\n      this._hasInitialized = true;\n    }\n    ngAfterContentChecked() {\n      // Only start re-rendering in `ngAfterContentChecked` after the first render.\n      if (this._canRender()) {\n        this._render();\n      }\n    }\n    ngOnDestroy() {\n      [this._rowOutlet?.viewContainer, this._headerRowOutlet?.viewContainer, this._footerRowOutlet?.viewContainer, this._cachedRenderRowsMap, this._customColumnDefs, this._customRowDefs, this._customHeaderRowDefs, this._customFooterRowDefs, this._columnDefsByName].forEach(def => {\n        def?.clear();\n      });\n      this._headerRowDefs = [];\n      this._footerRowDefs = [];\n      this._defaultRowDef = null;\n      this._onDestroy.next();\n      this._onDestroy.complete();\n      if (isDataSource(this.dataSource)) {\n        this.dataSource.disconnect(this);\n      }\n    }\n    /**\n     * Renders rows based on the table's latest set of data, which was either provided directly as an\n     * input or retrieved through an Observable stream (directly or from a DataSource).\n     * Checks for differences in the data since the last diff to perform only the necessary\n     * changes (add/remove/move rows).\n     *\n     * If the table's data source is a DataSource or Observable, this will be invoked automatically\n     * each time the provided Observable stream emits a new data array. Otherwise if your data is\n     * an array, this function will need to be called to render any changes.\n     */\n    renderRows() {\n      this._renderRows = this._getAllRenderRows();\n      const changes = this._dataDiffer.diff(this._renderRows);\n      if (!changes) {\n        this._updateNoDataRow();\n        this.contentChanged.next();\n        return;\n      }\n      const viewContainer = this._rowOutlet.viewContainer;\n      this._viewRepeater.applyChanges(changes, viewContainer, (record, _adjustedPreviousIndex, currentIndex) => this._getEmbeddedViewArgs(record.item, currentIndex), record => record.item.data, change => {\n        if (change.operation === _ViewRepeaterOperation.INSERTED && change.context) {\n          this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n        }\n      });\n      // Update the meta context of a row's context data (index, count, first, last, ...)\n      this._updateRowIndexContext();\n      // Update rows that did not get added/removed/moved but may have had their identity changed,\n      // e.g. if trackBy matched data on some property but the actual data reference changed.\n      changes.forEachIdentityChange(record => {\n        const rowView = viewContainer.get(record.currentIndex);\n        rowView.context.$implicit = record.item.data;\n      });\n      this._updateNoDataRow();\n      afterNextRender(() => {\n        this.updateStickyColumnStyles();\n      }, {\n        injector: this._injector\n      });\n      this.contentChanged.next();\n    }\n    /** Adds a column definition that was not included as part of the content children. */\n    addColumnDef(columnDef) {\n      this._customColumnDefs.add(columnDef);\n    }\n    /** Removes a column definition that was not included as part of the content children. */\n    removeColumnDef(columnDef) {\n      this._customColumnDefs.delete(columnDef);\n    }\n    /** Adds a row definition that was not included as part of the content children. */\n    addRowDef(rowDef) {\n      this._customRowDefs.add(rowDef);\n    }\n    /** Removes a row definition that was not included as part of the content children. */\n    removeRowDef(rowDef) {\n      this._customRowDefs.delete(rowDef);\n    }\n    /** Adds a header row definition that was not included as part of the content children. */\n    addHeaderRowDef(headerRowDef) {\n      this._customHeaderRowDefs.add(headerRowDef);\n      this._headerRowDefChanged = true;\n    }\n    /** Removes a header row definition that was not included as part of the content children. */\n    removeHeaderRowDef(headerRowDef) {\n      this._customHeaderRowDefs.delete(headerRowDef);\n      this._headerRowDefChanged = true;\n    }\n    /** Adds a footer row definition that was not included as part of the content children. */\n    addFooterRowDef(footerRowDef) {\n      this._customFooterRowDefs.add(footerRowDef);\n      this._footerRowDefChanged = true;\n    }\n    /** Removes a footer row definition that was not included as part of the content children. */\n    removeFooterRowDef(footerRowDef) {\n      this._customFooterRowDefs.delete(footerRowDef);\n      this._footerRowDefChanged = true;\n    }\n    /** Sets a no data row definition that was not included as a part of the content children. */\n    setNoDataRow(noDataRow) {\n      this._customNoDataRow = noDataRow;\n    }\n    /**\n     * Updates the header sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n     * automatically called when the header row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyHeaderRowStyles() {\n      const headerRows = this._getRenderedRows(this._headerRowOutlet);\n      // Hide the thead element if there are no header rows. This is necessary to satisfy\n      // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n      // required child `row`.\n      if (this._isNativeHtmlTable) {\n        const thead = closestTableSection(this._headerRowOutlet, 'thead');\n        if (thead) {\n          thead.style.display = headerRows.length ? '' : 'none';\n        }\n      }\n      const stickyStates = this._headerRowDefs.map(def => def.sticky);\n      this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n      this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n      // Reset the dirty state of the sticky input change since it has been used.\n      this._headerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n     * automatically called when the footer row changes its displayed set of columns, or if its\n     * sticky input changes. May be called manually for cases where the cell content changes outside\n     * of these events.\n     */\n    updateStickyFooterRowStyles() {\n      const footerRows = this._getRenderedRows(this._footerRowOutlet);\n      // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n      // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n      // required child `row`.\n      if (this._isNativeHtmlTable) {\n        const tfoot = closestTableSection(this._footerRowOutlet, 'tfoot');\n        if (tfoot) {\n          tfoot.style.display = footerRows.length ? '' : 'none';\n        }\n      }\n      const stickyStates = this._footerRowDefs.map(def => def.sticky);\n      this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n      this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n      this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n      // Reset the dirty state of the sticky input change since it has been used.\n      this._footerRowDefs.forEach(def => def.resetStickyChanged());\n    }\n    /**\n     * Updates the column sticky styles. First resets all applied styles with respect to the cells\n     * sticking to the left and right. Then sticky styles are added for the left and right according\n     * to the column definitions for each cell in each row. This is automatically called when\n     * the data source provides a new set of data or when a column definition changes its sticky\n     * input. May be called manually for cases where the cell content changes outside of these events.\n     */\n    updateStickyColumnStyles() {\n      const headerRows = this._getRenderedRows(this._headerRowOutlet);\n      const dataRows = this._getRenderedRows(this._rowOutlet);\n      const footerRows = this._getRenderedRows(this._footerRowOutlet);\n      // For tables not using a fixed layout, the column widths may change when new rows are rendered.\n      // In a table using a fixed layout, row content won't affect column width, so sticky styles\n      // don't need to be cleared unless either the sticky column config changes or one of the row\n      // defs change.\n      if (this._isNativeHtmlTable && !this._fixedLayout || this._stickyColumnStylesNeedReset) {\n        // Clear the left and right positioning from all columns in the table across all rows since\n        // sticky columns span across all table sections (header, data, footer)\n        this._stickyStyler.clearStickyPositioning([...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n        this._stickyColumnStylesNeedReset = false;\n      }\n      // Update the sticky styles for each header row depending on the def's sticky state\n      headerRows.forEach((headerRow, i) => {\n        this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n      });\n      // Update the sticky styles for each data row depending on its def's sticky state\n      this._rowDefs.forEach(rowDef => {\n        // Collect all the rows rendered with this row definition.\n        const rows = [];\n        for (let i = 0; i < dataRows.length; i++) {\n          if (this._renderRows[i].rowDef === rowDef) {\n            rows.push(dataRows[i]);\n          }\n        }\n        this._addStickyColumnStyles(rows, rowDef);\n      });\n      // Update the sticky styles for each footer row depending on the def's sticky state\n      footerRows.forEach((footerRow, i) => {\n        this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n      });\n      // Reset the dirty state of the sticky input change since it has been used.\n      Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n    }\n    /** Invoked whenever an outlet is created and has been assigned to the table. */\n    _outletAssigned() {\n      // Trigger the first render once all outlets have been assigned. We do it this way, as\n      // opposed to waiting for the next `ngAfterContentChecked`, because we don't know when\n      // the next change detection will happen.\n      // Also we can't use queries to resolve the outlets, because they're wrapped in a\n      // conditional, so we have to rely on them being assigned via DI.\n      if (!this._hasAllOutlets && this._rowOutlet && this._headerRowOutlet && this._footerRowOutlet && this._noDataRowOutlet) {\n        this._hasAllOutlets = true;\n        // In some setups this may fire before `ngAfterContentInit`\n        // so we need a check here. See #28538.\n        if (this._canRender()) {\n          this._render();\n        }\n      }\n    }\n    /** Whether the table has all the information to start rendering. */\n    _canRender() {\n      return this._hasAllOutlets && this._hasInitialized;\n    }\n    /** Renders the table if its state has changed. */\n    _render() {\n      // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n      this._cacheRowDefs();\n      this._cacheColumnDefs();\n      // Make sure that the user has at least added header, footer, or data row def.\n      if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableMissingRowDefsError();\n      }\n      // Render updates if the list of columns have been changed for the header, row, or footer defs.\n      const columnsChanged = this._renderUpdatedColumns();\n      const rowDefsChanged = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n      // Ensure sticky column styles are reset if set to `true` elsewhere.\n      this._stickyColumnStylesNeedReset = this._stickyColumnStylesNeedReset || rowDefsChanged;\n      this._forceRecalculateCellWidths = rowDefsChanged;\n      // If the header row definition has been changed, trigger a render to the header row.\n      if (this._headerRowDefChanged) {\n        this._forceRenderHeaderRows();\n        this._headerRowDefChanged = false;\n      }\n      // If the footer row definition has been changed, trigger a render to the footer row.\n      if (this._footerRowDefChanged) {\n        this._forceRenderFooterRows();\n        this._footerRowDefChanged = false;\n      }\n      // If there is a data source and row definitions, connect to the data source unless a\n      // connection has already been made.\n      if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n        this._observeRenderChanges();\n      } else if (this._stickyColumnStylesNeedReset) {\n        // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n        // called when it row data arrives. Otherwise, we need to call it proactively.\n        this.updateStickyColumnStyles();\n      }\n      this._checkStickyStates();\n    }\n    /**\n     * Get the list of RenderRow objects to render according to the current list of data and defined\n     * row definitions. If the previous list already contained a particular pair, it should be reused\n     * so that the differ equates their references.\n     */\n    _getAllRenderRows() {\n      const renderRows = [];\n      // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n      // new cache while unused ones can be picked up by garbage collection.\n      const prevCachedRenderRows = this._cachedRenderRowsMap;\n      this._cachedRenderRowsMap = new Map();\n      // For each data object, get the list of rows that should be rendered, represented by the\n      // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n      for (let i = 0; i < this._data.length; i++) {\n        let data = this._data[i];\n        const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n        if (!this._cachedRenderRowsMap.has(data)) {\n          this._cachedRenderRowsMap.set(data, new WeakMap());\n        }\n        for (let j = 0; j < renderRowsForData.length; j++) {\n          let renderRow = renderRowsForData[j];\n          const cache = this._cachedRenderRowsMap.get(renderRow.data);\n          if (cache.has(renderRow.rowDef)) {\n            cache.get(renderRow.rowDef).push(renderRow);\n          } else {\n            cache.set(renderRow.rowDef, [renderRow]);\n          }\n          renderRows.push(renderRow);\n        }\n      }\n      return renderRows;\n    }\n    /**\n     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n     * `(T, CdkRowDef)` pair.\n     */\n    _getRenderRowsForData(data, dataIndex, cache) {\n      const rowDefs = this._getRowDefs(data, dataIndex);\n      return rowDefs.map(rowDef => {\n        const cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];\n        if (cachedRenderRows.length) {\n          const dataRow = cachedRenderRows.shift();\n          dataRow.dataIndex = dataIndex;\n          return dataRow;\n        } else {\n          return {\n            data,\n            rowDef,\n            dataIndex\n          };\n        }\n      });\n    }\n    /** Update the map containing the content's column definitions. */\n    _cacheColumnDefs() {\n      this._columnDefsByName.clear();\n      const columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n      columnDefs.forEach(columnDef => {\n        if (this._columnDefsByName.has(columnDef.name) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getTableDuplicateColumnNameError(columnDef.name);\n        }\n        this._columnDefsByName.set(columnDef.name, columnDef);\n      });\n    }\n    /** Update the list of all available row definitions that can be used. */\n    _cacheRowDefs() {\n      this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n      this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n      this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n      // After all row definitions are determined, find the row definition to be considered default.\n      const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n      if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableMultipleDefaultRowDefsError();\n      }\n      this._defaultRowDef = defaultRowDefs[0];\n    }\n    /**\n     * Check if the header, data, or footer rows have changed what columns they want to display or\n     * whether the sticky states have changed for the header or footer. If there is a diff, then\n     * re-render that section.\n     */\n    _renderUpdatedColumns() {\n      const columnsDiffReducer = (acc, def) => acc || !!def.getColumnsDiff();\n      // Force re-render data rows if the list of column definitions have changed.\n      const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n      if (dataColumnsChanged) {\n        this._forceRenderDataRows();\n      }\n      // Force re-render header/footer rows if the list of column definitions have changed.\n      const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n      if (headerColumnsChanged) {\n        this._forceRenderHeaderRows();\n      }\n      const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n      if (footerColumnsChanged) {\n        this._forceRenderFooterRows();\n      }\n      return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n    }\n    /**\n     * Switch to the provided data source by resetting the data and unsubscribing from the current\n     * render change subscription if one exists. If the data source is null, interpret this by\n     * clearing the row outlet. Otherwise start listening for new data.\n     */\n    _switchDataSource(dataSource) {\n      this._data = [];\n      if (isDataSource(this.dataSource)) {\n        this.dataSource.disconnect(this);\n      }\n      // Stop listening for data from the previous data source.\n      if (this._renderChangeSubscription) {\n        this._renderChangeSubscription.unsubscribe();\n        this._renderChangeSubscription = null;\n      }\n      if (!dataSource) {\n        if (this._dataDiffer) {\n          this._dataDiffer.diff([]);\n        }\n        if (this._rowOutlet) {\n          this._rowOutlet.viewContainer.clear();\n        }\n      }\n      this._dataSource = dataSource;\n    }\n    /** Set up a subscription for the data provided by the data source. */\n    _observeRenderChanges() {\n      // If no data source has been set, there is nothing to observe for changes.\n      if (!this.dataSource) {\n        return;\n      }\n      let dataStream;\n      if (isDataSource(this.dataSource)) {\n        dataStream = this.dataSource.connect(this);\n      } else if (isObservable(this.dataSource)) {\n        dataStream = this.dataSource;\n      } else if (Array.isArray(this.dataSource)) {\n        dataStream = of(this.dataSource);\n      }\n      if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownDataSourceError();\n      }\n      this._renderChangeSubscription = dataStream.pipe(takeUntil(this._onDestroy)).subscribe(data => {\n        this._data = data || [];\n        this.renderRows();\n      });\n    }\n    /**\n     * Clears any existing content in the header row outlet and creates a new embedded view\n     * in the outlet using the header row definition.\n     */\n    _forceRenderHeaderRows() {\n      // Clear the header row outlet if any content exists.\n      if (this._headerRowOutlet.viewContainer.length > 0) {\n        this._headerRowOutlet.viewContainer.clear();\n      }\n      this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n      this.updateStickyHeaderRowStyles();\n    }\n    /**\n     * Clears any existing content in the footer row outlet and creates a new embedded view\n     * in the outlet using the footer row definition.\n     */\n    _forceRenderFooterRows() {\n      // Clear the footer row outlet if any content exists.\n      if (this._footerRowOutlet.viewContainer.length > 0) {\n        this._footerRowOutlet.viewContainer.clear();\n      }\n      this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n      this.updateStickyFooterRowStyles();\n    }\n    /** Adds the sticky column styles for the rows according to the columns' stick states. */\n    _addStickyColumnStyles(rows, rowDef) {\n      const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n        const columnDef = this._columnDefsByName.get(columnName);\n        if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getTableUnknownColumnError(columnName);\n        }\n        return columnDef;\n      });\n      const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n      const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n      this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates, !this._fixedLayout || this._forceRecalculateCellWidths);\n    }\n    /** Gets the list of rows that have been rendered in the row outlet. */\n    _getRenderedRows(rowOutlet) {\n      const renderedRows = [];\n      for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n        const viewRef = rowOutlet.viewContainer.get(i);\n        renderedRows.push(viewRef.rootNodes[0]);\n      }\n      return renderedRows;\n    }\n    /**\n     * Get the matching row definitions that should be used for this row data. If there is only\n     * one row definition, it is returned. Otherwise, find the row definitions that has a when\n     * predicate that returns true with the data. If none return true, return the default row\n     * definition.\n     */\n    _getRowDefs(data, dataIndex) {\n      if (this._rowDefs.length == 1) {\n        return [this._rowDefs[0]];\n      }\n      let rowDefs = [];\n      if (this.multiTemplateDataRows) {\n        rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n      } else {\n        let rowDef = this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n        if (rowDef) {\n          rowDefs.push(rowDef);\n        }\n      }\n      if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableMissingMatchingRowDefError(data);\n      }\n      return rowDefs;\n    }\n    _getEmbeddedViewArgs(renderRow, index) {\n      const rowDef = renderRow.rowDef;\n      const context = {\n        $implicit: renderRow.data\n      };\n      return {\n        templateRef: rowDef.template,\n        context,\n        index\n      };\n    }\n    /**\n     * Creates a new row template in the outlet and fills it with the set of cell templates.\n     * Optionally takes a context to provide to the row and cells, as well as an optional index\n     * of where to place the new row template in the outlet.\n     */\n    _renderRow(outlet, rowDef, index, context = {}) {\n      // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n      const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n      this._renderCellTemplateForItem(rowDef, context);\n      return view;\n    }\n    _renderCellTemplateForItem(rowDef, context) {\n      for (let cellTemplate of this._getCellTemplates(rowDef)) {\n        if (CdkCellOutlet.mostRecentCellOutlet) {\n          CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n        }\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\n     * e.g. first/last/even/odd.\n     */\n    _updateRowIndexContext() {\n      const viewContainer = this._rowOutlet.viewContainer;\n      for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n        const viewRef = viewContainer.get(renderIndex);\n        const context = viewRef.context;\n        context.count = count;\n        context.first = renderIndex === 0;\n        context.last = renderIndex === count - 1;\n        context.even = renderIndex % 2 === 0;\n        context.odd = !context.even;\n        if (this.multiTemplateDataRows) {\n          context.dataIndex = this._renderRows[renderIndex].dataIndex;\n          context.renderIndex = renderIndex;\n        } else {\n          context.index = this._renderRows[renderIndex].dataIndex;\n        }\n      }\n    }\n    /** Gets the column definitions for the provided row def. */\n    _getCellTemplates(rowDef) {\n      if (!rowDef || !rowDef.columns) {\n        return [];\n      }\n      return Array.from(rowDef.columns, columnId => {\n        const column = this._columnDefsByName.get(columnId);\n        if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n          throw getTableUnknownColumnError(columnId);\n        }\n        return rowDef.extractCellTemplate(column);\n      });\n    }\n    /**\n     * Forces a re-render of the data rows. Should be called in cases where there has been an input\n     * change that affects the evaluation of which rows should be rendered, e.g. toggling\n     * `multiTemplateDataRows` or adding/removing row definitions.\n     */\n    _forceRenderDataRows() {\n      this._dataDiffer.diff([]);\n      this._rowOutlet.viewContainer.clear();\n      this.renderRows();\n    }\n    /**\n     * Checks if there has been a change in sticky states since last check and applies the correct\n     * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n     * during a change detection and after the inputs are settled (after content check).\n     */\n    _checkStickyStates() {\n      const stickyCheckReducer = (acc, d) => {\n        return acc || d.hasStickyChanged();\n      };\n      // Note that the check needs to occur for every definition since it notifies the definition\n      // that it can reset its dirty state. Using another operator like `some` may short-circuit\n      // remaining definitions and leave them in an unchecked state.\n      if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n        this.updateStickyHeaderRowStyles();\n      }\n      if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n        this.updateStickyFooterRowStyles();\n      }\n      if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n        this._stickyColumnStylesNeedReset = true;\n        this.updateStickyColumnStyles();\n      }\n    }\n    /**\n     * Creates the sticky styler that will be used for sticky rows and columns. Listens\n     * for directionality changes and provides the latest direction to the styler. Re-applies column\n     * stickiness when directionality changes.\n     */\n    _setupStickyStyler() {\n      const direction = this._dir ? this._dir.value : 'ltr';\n      this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement, this._stickyPositioningListener);\n      (this._dir ? this._dir.change : of()).pipe(takeUntil(this._onDestroy)).subscribe(value => {\n        this._stickyStyler.direction = value;\n        this.updateStickyColumnStyles();\n      });\n    }\n    /** Filters definitions that belong to this table from a QueryList. */\n    _getOwnDefs(items) {\n      return items.filter(item => !item._table || item._table === this);\n    }\n    /** Creates or removes the no data row, depending on whether any data is being shown. */\n    _updateNoDataRow() {\n      const noDataRow = this._customNoDataRow || this._noDataRow;\n      if (!noDataRow) {\n        return;\n      }\n      const shouldShow = this._rowOutlet.viewContainer.length === 0;\n      if (shouldShow === this._isShowingNoDataRow) {\n        return;\n      }\n      const container = this._noDataRowOutlet.viewContainer;\n      if (shouldShow) {\n        const view = container.createEmbeddedView(noDataRow.templateRef);\n        const rootNode = view.rootNodes[0];\n        // Only add the attributes if we have a single root node since it's hard\n        // to figure out which one to add it to when there are multiple.\n        if (view.rootNodes.length === 1 && rootNode?.nodeType === this._document.ELEMENT_NODE) {\n          rootNode.setAttribute('role', 'row');\n          rootNode.classList.add(noDataRow._contentClassName);\n        }\n      } else {\n        container.clear();\n      }\n      this._isShowingNoDataRow = shouldShow;\n      this._changeDetectorRef.markForCheck();\n    }\n    static {\n      this.ɵfac = function CdkTable_Factory(t) {\n        return new (t || CdkTable)(i0.ɵɵdirectiveInject(i0.IterableDiffers), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵinjectAttribute('role'), i0.ɵɵdirectiveInject(i1.Directionality, 8), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(_VIEW_REPEATER_STRATEGY), i0.ɵɵdirectiveInject(_COALESCED_STYLE_SCHEDULER), i0.ɵɵdirectiveInject(i3.ViewportRuler), i0.ɵɵdirectiveInject(STICKY_POSITIONING_LISTENER, 12), i0.ɵɵdirectiveInject(i0.NgZone, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CdkTable,\n        selectors: [[\"cdk-table\"], [\"table\", \"cdk-table\", \"\"]],\n        contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, CdkNoDataRow, 5);\n            i0.ɵɵcontentQuery(dirIndex, CdkColumnDef, 5);\n            i0.ɵɵcontentQuery(dirIndex, CdkRowDef, 5);\n            i0.ɵɵcontentQuery(dirIndex, CdkHeaderRowDef, 5);\n            i0.ɵɵcontentQuery(dirIndex, CdkFooterRowDef, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._noDataRow = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentColumnDefs = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentRowDefs = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentHeaderRowDefs = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._contentFooterRowDefs = _t);\n          }\n        },\n        hostAttrs: [1, \"cdk-table\"],\n        hostVars: 2,\n        hostBindings: function CdkTable_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"cdk-table-fixed-layout\", ctx.fixedLayout);\n          }\n        },\n        inputs: {\n          trackBy: \"trackBy\",\n          dataSource: \"dataSource\",\n          multiTemplateDataRows: [2, \"multiTemplateDataRows\", \"multiTemplateDataRows\", booleanAttribute],\n          fixedLayout: [2, \"fixedLayout\", \"fixedLayout\", booleanAttribute]\n        },\n        outputs: {\n          contentChanged: \"contentChanged\"\n        },\n        exportAs: [\"cdkTable\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CDK_TABLE,\n          useExisting: CdkTable\n        }, {\n          provide: _VIEW_REPEATER_STRATEGY,\n          useClass: _DisposeViewRepeaterStrategy\n        }, {\n          provide: _COALESCED_STYLE_SCHEDULER,\n          useClass: _CoalescedStyleScheduler\n        },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        {\n          provide: STICKY_POSITIONING_LISTENER,\n          useValue: null\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 5,\n        vars: 2,\n        consts: [[\"role\", \"rowgroup\"], [\"headerRowOutlet\", \"\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n        template: function CdkTable_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c0);\n            i0.ɵɵprojection(0);\n            i0.ɵɵprojection(1, 1);\n            i0.ɵɵtemplate(2, CdkTable_Conditional_2_Template, 1, 0)(3, CdkTable_Conditional_3_Template, 7, 0)(4, CdkTable_Conditional_4_Template, 4, 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._isServer ? 2 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx._isNativeHtmlTable ? 3 : 4);\n          }\n        },\n        dependencies: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],\n        styles: [\".cdk-table-fixed-layout{table-layout:fixed}\"],\n        encapsulation: 2\n      });\n    }\n  }\n  return CdkTable;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet(array, set) {\n  return array.concat(Array.from(set));\n}\n/**\n * Finds the closest table section to an outlet. We can't use `HTMLElement.closest` for this,\n * because the node representing the outlet is a comment.\n */\nfunction closestTableSection(outlet, section) {\n  const uppercaseSection = section.toUpperCase();\n  let current = outlet.viewContainer.element.nativeElement;\n  while (current) {\n    // 1 is an element node.\n    const nodeName = current.nodeType === 1 ? current.nodeName : null;\n    if (nodeName === uppercaseSection) {\n      return current;\n    } else if (nodeName === 'TABLE') {\n      // Stop traversing past the `table` node.\n      break;\n    }\n    current = current.parentNode;\n  }\n  return null;\n}\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nlet CdkTextColumn = /*#__PURE__*/(() => {\n  class CdkTextColumn {\n    /** Column name that should be used to reference this column. */\n    get name() {\n      return this._name;\n    }\n    set name(name) {\n      this._name = name;\n      // With Ivy, inputs can be initialized before static query results are\n      // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n      this._syncColumnDefName();\n    }\n    constructor(\n    // `CdkTextColumn` is always requiring a table, but we just assert it manually\n    // for better error reporting.\n    // tslint:disable-next-line: lightweight-tokens\n    _table, _options) {\n      this._table = _table;\n      this._options = _options;\n      /** Alignment of the cell values. */\n      this.justify = 'start';\n      this._options = _options || {};\n    }\n    ngOnInit() {\n      this._syncColumnDefName();\n      if (this.headerText === undefined) {\n        this.headerText = this._createDefaultHeaderText();\n      }\n      if (!this.dataAccessor) {\n        this.dataAccessor = this._options.defaultDataAccessor || ((data, name) => data[name]);\n      }\n      if (this._table) {\n        // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n        // since the columnDef will not pick up its content by the time the table finishes checking\n        // its content and initializing the rows.\n        this.columnDef.cell = this.cell;\n        this.columnDef.headerCell = this.headerCell;\n        this._table.addColumnDef(this.columnDef);\n      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw getTableTextColumnMissingParentTableError();\n      }\n    }\n    ngOnDestroy() {\n      if (this._table) {\n        this._table.removeColumnDef(this.columnDef);\n      }\n    }\n    /**\n     * Creates a default header text. Use the options' header text transformation function if one\n     * has been provided. Otherwise simply capitalize the column name.\n     */\n    _createDefaultHeaderText() {\n      const name = this.name;\n      if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableTextColumnMissingNameError();\n      }\n      if (this._options && this._options.defaultHeaderTextTransform) {\n        return this._options.defaultHeaderTextTransform(name);\n      }\n      return name[0].toUpperCase() + name.slice(1);\n    }\n    /** Synchronizes the column definition name with the text column name. */\n    _syncColumnDefName() {\n      if (this.columnDef) {\n        this.columnDef.name = this.name;\n      }\n    }\n    static {\n      this.ɵfac = function CdkTextColumn_Factory(t) {\n        return new (t || CdkTextColumn)(i0.ɵɵdirectiveInject(CdkTable, 8), i0.ɵɵdirectiveInject(TEXT_COLUMN_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: CdkTextColumn,\n        selectors: [[\"cdk-text-column\"]],\n        viewQuery: function CdkTextColumn_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(CdkColumnDef, 7);\n            i0.ɵɵviewQuery(CdkCellDef, 7);\n            i0.ɵɵviewQuery(CdkHeaderCellDef, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.columnDef = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cell = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.headerCell = _t.first);\n          }\n        },\n        inputs: {\n          name: \"name\",\n          headerText: \"headerText\",\n          dataAccessor: \"dataAccessor\",\n          justify: \"justify\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 3,\n        vars: 0,\n        consts: [[\"cdkColumnDef\", \"\"], [\"cdk-header-cell\", \"\", 3, \"text-align\", 4, \"cdkHeaderCellDef\"], [\"cdk-cell\", \"\", 3, \"text-align\", 4, \"cdkCellDef\"], [\"cdk-header-cell\", \"\"], [\"cdk-cell\", \"\"]],\n        template: function CdkTextColumn_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementContainerStart(0, 0);\n            i0.ɵɵtemplate(1, CdkTextColumn_th_1_Template, 2, 3, \"th\", 1)(2, CdkTextColumn_td_2_Template, 2, 3, \"td\", 2);\n            i0.ɵɵelementContainerEnd();\n          }\n        },\n        dependencies: [CdkColumnDef, CdkHeaderCellDef, CdkHeaderCell, CdkCellDef, CdkCell],\n        encapsulation: 2\n      });\n    }\n  }\n  return CdkTextColumn;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst EXPORTED_DECLARATIONS = [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, CdkRecycleRows, NoDataRowOutlet];\nlet CdkTableModule = /*#__PURE__*/(() => {\n  class CdkTableModule {\n    static {\n      this.ɵfac = function CdkTableModule_Factory(t) {\n        return new (t || CdkTableModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: CdkTableModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ScrollingModule]\n      });\n    }\n  }\n  return CdkTableModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n * @deprecated Implement the `CanStick` interface instead.\n * @breaking-change 19.0.0\n */\nfunction mixinHasStickyInput(base) {\n  return class extends base {\n    /** Whether sticky positioning should be applied. */\n    get sticky() {\n      return this._sticky;\n    }\n    set sticky(v) {\n      const prevValue = this._sticky;\n      this._sticky = coerceBooleanProperty(v);\n      this._hasStickyChanged = prevValue !== this._sticky;\n    }\n    /** Whether the sticky value has changed since this was last called. */\n    hasStickyChanged() {\n      const hasStickyChanged = this._hasStickyChanged;\n      this._hasStickyChanged = false;\n      return hasStickyChanged;\n    }\n    /** Resets the dirty check for cases where the sticky state has been used without checking. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n    constructor(...args) {\n      super(...args);\n      this._sticky = false;\n      /** Whether the sticky input has changed since it was last checked. */\n      this._hasStickyChanged = false;\n    }\n  };\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRecycleRows, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, STICKY_POSITIONING_LISTENER, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, booleanAttribute, NgModule } from '@angular/core';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CdkCellOutlet, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy, DataSource } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { map } from 'rxjs/operators';\n\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nconst _c0 = [[[\"caption\"]], [[\"colgroup\"], [\"col\"]], \"*\"];\nconst _c1 = [\"caption\", \"colgroup, col\", \"*\"];\nfunction MatTable_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction MatTable_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"thead\", 0);\n    i0.ɵɵelementContainer(1, 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"tbody\", 2);\n    i0.ɵɵelementContainer(3, 3)(4, 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"tfoot\", 0);\n    i0.ɵɵelementContainer(6, 5);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatTable_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0, 1)(1, 3)(2, 4)(3, 5);\n  }\n}\nfunction MatTextColumn_th_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 3);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.headerText, \" \");\n  }\n}\nfunction MatTextColumn_td_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const data_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵstyleProp(\"text-align\", ctx_r0.justify);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.dataAccessor(data_r2, ctx_r0.name), \" \");\n  }\n}\nlet MatRecycleRows = /*#__PURE__*/(() => {\n  class MatRecycleRows {\n    static {\n      this.ɵfac = function MatRecycleRows_Factory(t) {\n        return new (t || MatRecycleRows)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatRecycleRows,\n        selectors: [[\"mat-table\", \"recycleRows\", \"\"], [\"table\", \"mat-table\", \"\", \"recycleRows\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: _VIEW_REPEATER_STRATEGY,\n          useClass: _RecycleViewRepeaterStrategy\n        }])]\n      });\n    }\n  }\n  return MatRecycleRows;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatTable = /*#__PURE__*/(() => {\n  class MatTable extends CdkTable {\n    constructor() {\n      super(...arguments);\n      /** Overrides the sticky CSS class set by the `CdkTable`. */\n      this.stickyCssClass = 'mat-mdc-table-sticky';\n      /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n      this.needsPositionStickyOnElement = false;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatTable_BaseFactory;\n        return function MatTable_Factory(t) {\n          return (ɵMatTable_BaseFactory || (ɵMatTable_BaseFactory = i0.ɵɵgetInheritedFactory(MatTable)))(t || MatTable);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTable,\n        selectors: [[\"mat-table\"], [\"table\", \"mat-table\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-table\", \"mdc-data-table__table\"],\n        hostVars: 2,\n        hostBindings: function MatTable_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-table-fixed-layout\", ctx.fixedLayout);\n          }\n        },\n        exportAs: [\"matTable\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkTable,\n          useExisting: MatTable\n        }, {\n          provide: CDK_TABLE,\n          useExisting: MatTable\n        }, {\n          provide: _COALESCED_STYLE_SCHEDULER,\n          useClass: _CoalescedStyleScheduler\n        },\n        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n        //  is only included in the build if used.\n        {\n          provide: _VIEW_REPEATER_STRATEGY,\n          useClass: _DisposeViewRepeaterStrategy\n        },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        {\n          provide: STICKY_POSITIONING_LISTENER,\n          useValue: null\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 5,\n        vars: 2,\n        consts: [[\"role\", \"rowgroup\"], [\"headerRowOutlet\", \"\"], [\"role\", \"rowgroup\", 1, \"mdc-data-table__content\"], [\"rowOutlet\", \"\"], [\"noDataRowOutlet\", \"\"], [\"footerRowOutlet\", \"\"]],\n        template: function MatTable_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c0);\n            i0.ɵɵprojection(0);\n            i0.ɵɵprojection(1, 1);\n            i0.ɵɵtemplate(2, MatTable_Conditional_2_Template, 1, 0)(3, MatTable_Conditional_3_Template, 7, 0)(4, MatTable_Conditional_4_Template, 4, 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._isServer ? 2 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx._isNativeHtmlTable ? 3 : 4);\n          }\n        },\n        dependencies: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],\n        styles: [\".mat-mdc-table-sticky{position:sticky !important}mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}.mat-mdc-table{min-width:100%;border:0;border-spacing:0;table-layout:auto;white-space:normal;background-color:var(--mat-table-background-color)}.mdc-data-table__cell{box-sizing:border-box;overflow:hidden;text-align:left;text-overflow:ellipsis}[dir=rtl] .mdc-data-table__cell{text-align:right}.mdc-data-table__cell,.mdc-data-table__header-cell{padding:0 16px}.mat-mdc-header-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-header-container-height, 56px);color:var(--mat-table-header-headline-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-header-headline-font, Roboto, sans-serif);line-height:var(--mat-table-header-headline-line-height);font-size:var(--mat-table-header-headline-size, 14px);font-weight:var(--mat-table-header-headline-weight, 500)}.mat-mdc-row{height:var(--mat-table-row-item-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87))}.mat-mdc-row,.mdc-data-table__content{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;font-family:var(--mat-table-row-item-label-text-font, Roboto, sans-serif);line-height:var(--mat-table-row-item-label-text-line-height);font-size:var(--mat-table-row-item-label-text-size, 14px);font-weight:var(--mat-table-row-item-label-text-weight)}.mat-mdc-footer-row{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;height:var(--mat-table-footer-container-height, 52px);color:var(--mat-table-row-item-label-text-color, rgba(0, 0, 0, 0.87));font-family:var(--mat-table-footer-supporting-text-font, Roboto, sans-serif);line-height:var(--mat-table-footer-supporting-text-line-height);font-size:var(--mat-table-footer-supporting-text-size, 14px);font-weight:var(--mat-table-footer-supporting-text-weight);letter-spacing:var(--mat-table-footer-supporting-text-tracking)}.mat-mdc-header-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-header-headline-tracking);font-weight:inherit;line-height:inherit;box-sizing:border-box;text-overflow:ellipsis;overflow:hidden;outline:none;text-align:left}[dir=rtl] .mat-mdc-header-cell{text-align:right}.mat-mdc-cell{border-bottom-color:var(--mat-table-row-item-outline-color, rgba(0, 0, 0, 0.12));border-bottom-width:var(--mat-table-row-item-outline-width, 1px);border-bottom-style:solid;letter-spacing:var(--mat-table-row-item-label-text-tracking);line-height:inherit}.mdc-data-table__row:last-child .mat-mdc-cell{border-bottom:none}.mat-mdc-footer-cell{letter-spacing:var(--mat-table-row-item-label-text-tracking)}mat-row.mat-mdc-row,mat-header-row.mat-mdc-header-row,mat-footer-row.mat-mdc-footer-row{border-bottom:none}.mat-mdc-table tbody,.mat-mdc-table tfoot,.mat-mdc-table thead,.mat-mdc-cell,.mat-mdc-footer-cell,.mat-mdc-header-row,.mat-mdc-row,.mat-mdc-footer-row,.mat-mdc-table .mat-mdc-header-cell{background:inherit}.mat-mdc-table mat-header-row.mat-mdc-header-row,.mat-mdc-table mat-row.mat-mdc-row,.mat-mdc-table mat-footer-row.mat-mdc-footer-cell{height:unset}mat-header-cell.mat-mdc-header-cell,mat-cell.mat-mdc-cell,mat-footer-cell.mat-mdc-footer-cell{align-self:stretch}\"],\n        encapsulation: 2\n      });\n    }\n  }\n  return MatTable;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nlet MatCellDef = /*#__PURE__*/(() => {\n  class MatCellDef extends CdkCellDef {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatCellDef_BaseFactory;\n        return function MatCellDef_Factory(t) {\n          return (ɵMatCellDef_BaseFactory || (ɵMatCellDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatCellDef)))(t || MatCellDef);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCellDef,\n        selectors: [[\"\", \"matCellDef\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkCellDef,\n          useExisting: MatCellDef\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatCellDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nlet MatHeaderCellDef = /*#__PURE__*/(() => {\n  class MatHeaderCellDef extends CdkHeaderCellDef {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatHeaderCellDef_BaseFactory;\n        return function MatHeaderCellDef_Factory(t) {\n          return (ɵMatHeaderCellDef_BaseFactory || (ɵMatHeaderCellDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderCellDef)))(t || MatHeaderCellDef);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatHeaderCellDef,\n        selectors: [[\"\", \"matHeaderCellDef\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkHeaderCellDef,\n          useExisting: MatHeaderCellDef\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatHeaderCellDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nlet MatFooterCellDef = /*#__PURE__*/(() => {\n  class MatFooterCellDef extends CdkFooterCellDef {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatFooterCellDef_BaseFactory;\n        return function MatFooterCellDef_Factory(t) {\n          return (ɵMatFooterCellDef_BaseFactory || (ɵMatFooterCellDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterCellDef)))(t || MatFooterCellDef);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatFooterCellDef,\n        selectors: [[\"\", \"matFooterCellDef\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkFooterCellDef,\n          useExisting: MatFooterCellDef\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatFooterCellDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nlet MatColumnDef = /*#__PURE__*/(() => {\n  class MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n      return this._name;\n    }\n    set name(name) {\n      this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n      super._updateColumnCssClassName();\n      this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatColumnDef_BaseFactory;\n        return function MatColumnDef_Factory(t) {\n          return (ɵMatColumnDef_BaseFactory || (ɵMatColumnDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatColumnDef)))(t || MatColumnDef);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatColumnDef,\n        selectors: [[\"\", \"matColumnDef\", \"\"]],\n        inputs: {\n          name: [0, \"matColumnDef\", \"name\"]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkColumnDef,\n          useExisting: MatColumnDef\n        }, {\n          provide: 'MAT_SORT_HEADER_COLUMN_DEF',\n          useExisting: MatColumnDef\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatColumnDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Header cell template container that adds the right classes and role. */\nlet MatHeaderCell = /*#__PURE__*/(() => {\n  class MatHeaderCell extends CdkHeaderCell {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatHeaderCell_BaseFactory;\n        return function MatHeaderCell_Factory(t) {\n          return (ɵMatHeaderCell_BaseFactory || (ɵMatHeaderCell_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderCell)))(t || MatHeaderCell);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatHeaderCell,\n        selectors: [[\"mat-header-cell\"], [\"th\", \"mat-header-cell\", \"\"]],\n        hostAttrs: [\"role\", \"columnheader\", 1, \"mat-mdc-header-cell\", \"mdc-data-table__header-cell\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatHeaderCell;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Footer cell template container that adds the right classes and role. */\nlet MatFooterCell = /*#__PURE__*/(() => {\n  class MatFooterCell extends CdkFooterCell {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatFooterCell_BaseFactory;\n        return function MatFooterCell_Factory(t) {\n          return (ɵMatFooterCell_BaseFactory || (ɵMatFooterCell_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterCell)))(t || MatFooterCell);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatFooterCell,\n        selectors: [[\"mat-footer-cell\"], [\"td\", \"mat-footer-cell\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-footer-cell\", \"mdc-data-table__cell\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatFooterCell;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Cell template container that adds the right classes and role. */\nlet MatCell = /*#__PURE__*/(() => {\n  class MatCell extends CdkCell {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatCell_BaseFactory;\n        return function MatCell_Factory(t) {\n          return (ɵMatCell_BaseFactory || (ɵMatCell_BaseFactory = i0.ɵɵgetInheritedFactory(MatCell)))(t || MatCell);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatCell,\n        selectors: [[\"mat-cell\"], [\"td\", \"mat-cell\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-cell\", \"mdc-data-table__cell\"],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatCell;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// We can't reuse `CDK_ROW_TEMPLATE` because it's incompatible with local compilation mode.\nconst ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nlet MatHeaderRowDef = /*#__PURE__*/(() => {\n  class MatHeaderRowDef extends CdkHeaderRowDef {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatHeaderRowDef_BaseFactory;\n        return function MatHeaderRowDef_Factory(t) {\n          return (ɵMatHeaderRowDef_BaseFactory || (ɵMatHeaderRowDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderRowDef)))(t || MatHeaderRowDef);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatHeaderRowDef,\n        selectors: [[\"\", \"matHeaderRowDef\", \"\"]],\n        inputs: {\n          columns: [0, \"matHeaderRowDef\", \"columns\"],\n          sticky: [2, \"matHeaderRowDefSticky\", \"sticky\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkHeaderRowDef,\n          useExisting: MatHeaderRowDef\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatHeaderRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nlet MatFooterRowDef = /*#__PURE__*/(() => {\n  class MatFooterRowDef extends CdkFooterRowDef {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatFooterRowDef_BaseFactory;\n        return function MatFooterRowDef_Factory(t) {\n          return (ɵMatFooterRowDef_BaseFactory || (ɵMatFooterRowDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterRowDef)))(t || MatFooterRowDef);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatFooterRowDef,\n        selectors: [[\"\", \"matFooterRowDef\", \"\"]],\n        inputs: {\n          columns: [0, \"matFooterRowDef\", \"columns\"],\n          sticky: [2, \"matFooterRowDefSticky\", \"sticky\", booleanAttribute]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkFooterRowDef,\n          useExisting: MatFooterRowDef\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatFooterRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nlet MatRowDef = /*#__PURE__*/(() => {\n  class MatRowDef extends CdkRowDef {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatRowDef_BaseFactory;\n        return function MatRowDef_Factory(t) {\n          return (ɵMatRowDef_BaseFactory || (ɵMatRowDef_BaseFactory = i0.ɵɵgetInheritedFactory(MatRowDef)))(t || MatRowDef);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatRowDef,\n        selectors: [[\"\", \"matRowDef\", \"\"]],\n        inputs: {\n          columns: [0, \"matRowDefColumns\", \"columns\"],\n          when: [0, \"matRowDefWhen\", \"when\"]\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkRowDef,\n          useExisting: MatRowDef\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatRowDef;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nlet MatHeaderRow = /*#__PURE__*/(() => {\n  class MatHeaderRow extends CdkHeaderRow {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatHeaderRow_BaseFactory;\n        return function MatHeaderRow_Factory(t) {\n          return (ɵMatHeaderRow_BaseFactory || (ɵMatHeaderRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatHeaderRow)))(t || MatHeaderRow);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatHeaderRow,\n        selectors: [[\"mat-header-row\"], [\"tr\", \"mat-header-row\", \"\"]],\n        hostAttrs: [\"role\", \"row\", 1, \"mat-mdc-header-row\", \"mdc-data-table__header-row\"],\n        exportAs: [\"matHeaderRow\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkHeaderRow,\n          useExisting: MatHeaderRow\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        decls: 1,\n        vars: 0,\n        consts: [[\"cdkCellOutlet\", \"\"]],\n        template: function MatHeaderRow_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementContainer(0, 0);\n          }\n        },\n        dependencies: [CdkCellOutlet],\n        encapsulation: 2\n      });\n    }\n  }\n  return MatHeaderRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nlet MatFooterRow = /*#__PURE__*/(() => {\n  class MatFooterRow extends CdkFooterRow {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatFooterRow_BaseFactory;\n        return function MatFooterRow_Factory(t) {\n          return (ɵMatFooterRow_BaseFactory || (ɵMatFooterRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatFooterRow)))(t || MatFooterRow);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatFooterRow,\n        selectors: [[\"mat-footer-row\"], [\"tr\", \"mat-footer-row\", \"\"]],\n        hostAttrs: [\"role\", \"row\", 1, \"mat-mdc-footer-row\", \"mdc-data-table__row\"],\n        exportAs: [\"matFooterRow\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkFooterRow,\n          useExisting: MatFooterRow\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        decls: 1,\n        vars: 0,\n        consts: [[\"cdkCellOutlet\", \"\"]],\n        template: function MatFooterRow_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementContainer(0, 0);\n          }\n        },\n        dependencies: [CdkCellOutlet],\n        encapsulation: 2\n      });\n    }\n  }\n  return MatFooterRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nlet MatRow = /*#__PURE__*/(() => {\n  class MatRow extends CdkRow {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatRow_BaseFactory;\n        return function MatRow_Factory(t) {\n          return (ɵMatRow_BaseFactory || (ɵMatRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatRow)))(t || MatRow);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatRow,\n        selectors: [[\"mat-row\"], [\"tr\", \"mat-row\", \"\"]],\n        hostAttrs: [\"role\", \"row\", 1, \"mat-mdc-row\", \"mdc-data-table__row\"],\n        exportAs: [\"matRow\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkRow,\n          useExisting: MatRow\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        decls: 1,\n        vars: 0,\n        consts: [[\"cdkCellOutlet\", \"\"]],\n        template: function MatRow_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementContainer(0, 0);\n          }\n        },\n        dependencies: [CdkCellOutlet],\n        encapsulation: 2\n      });\n    }\n  }\n  return MatRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Row that can be used to display a message when no data is shown in the table. */\nlet MatNoDataRow = /*#__PURE__*/(() => {\n  class MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n      super(...arguments);\n      this._contentClassName = 'mat-mdc-no-data-row';\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatNoDataRow_BaseFactory;\n        return function MatNoDataRow_Factory(t) {\n          return (ɵMatNoDataRow_BaseFactory || (ɵMatNoDataRow_BaseFactory = i0.ɵɵgetInheritedFactory(MatNoDataRow)))(t || MatNoDataRow);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatNoDataRow,\n        selectors: [[\"ng-template\", \"matNoDataRow\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: CdkNoDataRow,\n          useExisting: MatNoDataRow\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatNoDataRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nlet MatTextColumn = /*#__PURE__*/(() => {\n  class MatTextColumn extends CdkTextColumn {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatTextColumn_BaseFactory;\n        return function MatTextColumn_Factory(t) {\n          return (ɵMatTextColumn_BaseFactory || (ɵMatTextColumn_BaseFactory = i0.ɵɵgetInheritedFactory(MatTextColumn)))(t || MatTextColumn);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatTextColumn,\n        selectors: [[\"mat-text-column\"]],\n        standalone: true,\n        features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        decls: 3,\n        vars: 0,\n        consts: [[\"matColumnDef\", \"\"], [\"mat-header-cell\", \"\", 3, \"text-align\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"text-align\", 4, \"matCellDef\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"]],\n        template: function MatTextColumn_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementContainerStart(0, 0);\n            i0.ɵɵtemplate(1, MatTextColumn_th_1_Template, 2, 3, \"th\", 1)(2, MatTextColumn_td_2_Template, 2, 3, \"td\", 2);\n            i0.ɵɵelementContainerEnd();\n          }\n        },\n        dependencies: [MatColumnDef, MatHeaderCellDef, MatHeaderCell, MatCellDef, MatCell],\n        encapsulation: 2\n      });\n    }\n  }\n  return MatTextColumn;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst EXPORTED_DECLARATIONS = [\n// Table\nMatTable, MatRecycleRows,\n// Template defs\nMatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef,\n// Cell directives\nMatHeaderCell, MatCell, MatFooterCell,\n// Row directives\nMatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn];\nlet MatTableModule = /*#__PURE__*/(() => {\n  class MatTableModule {\n    static {\n      this.ɵfac = function MatTableModule_Factory(t) {\n        return new (t || MatTableModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatTableModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, CdkTableModule, MatCommonModule]\n      });\n    }\n  }\n  return MatTableModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterPredicate,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends DataSource {\n  /** Array of data that should be rendered by the table, where each object represents one row. */\n  get data() {\n    return this._data.value;\n  }\n  set data(data) {\n    data = Array.isArray(data) ? data : [];\n    this._data.next(data);\n    // Normally the `filteredData` is updated by the re-render\n    // subscription, but that won't happen if it's inactive.\n    if (!this._renderChangesSubscription) {\n      this._filterData(data);\n    }\n  }\n  /**\n   * Filter term that should be used to filter out objects from the data array. To override how\n   * data objects match to this filter string, provide a custom function for filterPredicate.\n   */\n  get filter() {\n    return this._filter.value;\n  }\n  set filter(filter) {\n    this._filter.next(filter);\n    // Normally the `filteredData` is updated by the re-render\n    // subscription, but that won't happen if it's inactive.\n    if (!this._renderChangesSubscription) {\n      this._filterData(this.data);\n    }\n  }\n  /**\n   * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n   * emitted by the MatSort will trigger an update to the table's rendered data.\n   */\n  get sort() {\n    return this._sort;\n  }\n  set sort(sort) {\n    this._sort = sort;\n    this._updateChangeSubscription();\n  }\n  /**\n   * Instance of the paginator component used by the table to control what page of the data is\n   * displayed. Page changes emitted by the paginator will trigger an update to the\n   * table's rendered data.\n   *\n   * Note that the data source uses the paginator's properties to calculate which page of data\n   * should be displayed. If the paginator receives its properties as template inputs,\n   * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n   * initialized before assigning it to this data source.\n   */\n  get paginator() {\n    return this._paginator;\n  }\n  set paginator(paginator) {\n    this._paginator = paginator;\n    this._updateChangeSubscription();\n  }\n  constructor(initialData = []) {\n    super();\n    /** Stream emitting render data to the table (depends on ordered data changes). */\n    this._renderData = new BehaviorSubject([]);\n    /** Stream that emits when a new filter string is set on the data source. */\n    this._filter = new BehaviorSubject('');\n    /** Used to react to internal changes of the paginator that are made by the data source itself. */\n    this._internalPageChanges = new Subject();\n    /**\n     * Subscription to the changes that should trigger an update to the table's rendered rows, such\n     * as filtering, sorting, pagination, or base data changes.\n     */\n    this._renderChangesSubscription = null;\n    /**\n     * Data accessor function that is used for accessing data properties for sorting through\n     * the default sortData function.\n     * This default function assumes that the sort header IDs (which defaults to the column name)\n     * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n     * May be set to a custom function for different behavior.\n     * @param data Data object that is being accessed.\n     * @param sortHeaderId The name of the column that represents the data.\n     */\n    this.sortingDataAccessor = (data, sortHeaderId) => {\n      const value = data[sortHeaderId];\n      if (_isNumberValue(value)) {\n        const numberValue = Number(value);\n        // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n        // leave them as strings. For more info: https://goo.gl/y5vbSg\n        return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n      }\n      return value;\n    };\n    /**\n     * Gets a sorted copy of the data array based on the state of the MatSort. Called\n     * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n     * By default, the function retrieves the active sort and its direction and compares data\n     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n     * of data ordering.\n     * @param data The array of data that should be sorted.\n     * @param sort The connected MatSort that holds the current sort state.\n     */\n    this.sortData = (data, sort) => {\n      const active = sort.active;\n      const direction = sort.direction;\n      if (!active || direction == '') {\n        return data;\n      }\n      return data.sort((a, b) => {\n        let valueA = this.sortingDataAccessor(a, active);\n        let valueB = this.sortingDataAccessor(b, active);\n        // If there are data in the column that can be converted to a number,\n        // it must be ensured that the rest of the data\n        // is of the same type so as not to order incorrectly.\n        const valueAType = typeof valueA;\n        const valueBType = typeof valueB;\n        if (valueAType !== valueBType) {\n          if (valueAType === 'number') {\n            valueA += '';\n          }\n          if (valueBType === 'number') {\n            valueB += '';\n          }\n        }\n        // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n        // one value exists while the other doesn't. In this case, existing value should come last.\n        // This avoids inconsistent results when comparing values to undefined/null.\n        // If neither value exists, return 0 (equal).\n        let comparatorResult = 0;\n        if (valueA != null && valueB != null) {\n          // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n          if (valueA > valueB) {\n            comparatorResult = 1;\n          } else if (valueA < valueB) {\n            comparatorResult = -1;\n          }\n        } else if (valueA != null) {\n          comparatorResult = 1;\n        } else if (valueB != null) {\n          comparatorResult = -1;\n        }\n        return comparatorResult * (direction == 'asc' ? 1 : -1);\n      });\n    };\n    /**\n     * Checks if a data object matches the data source's filter string. By default, each data object\n     * is converted to a string of its properties and returns true if the filter has\n     * at least one occurrence in that string. By default, the filter string has its whitespace\n     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n     * filter matching.\n     * @param data Data object used to check against the filter.\n     * @param filter Filter string that has been set on the data source.\n     * @returns Whether the filter matches against the data\n     */\n    this.filterPredicate = (data, filter) => {\n      // Transform the data into a lowercase string of all property values.\n      const dataStr = Object.keys(data).reduce((currentTerm, key) => {\n        // Use an obscure Unicode character to delimit the words in the concatenated string.\n        // This avoids matches where the values of two columns combined will match the user's query\n        // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n        // that has a very low chance of being typed in by somebody in a text field. This one in\n        // particular is \"White up-pointing triangle with dot\" from\n        // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n        return currentTerm + data[key] + '◬';\n      }, '').toLowerCase();\n      // Transform the filter by converting it to lowercase and removing whitespace.\n      const transformedFilter = filter.trim().toLowerCase();\n      return dataStr.indexOf(transformedFilter) != -1;\n    };\n    this._data = new BehaviorSubject(initialData);\n    this._updateChangeSubscription();\n  }\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with\n   * the provided base data and send it to the table for rendering.\n   */\n  _updateChangeSubscription() {\n    // Sorting and/or pagination should be watched if sort and/or paginator are provided.\n    // The events should emit whenever the component emits a change or initializes, or if no\n    // component is provided, a stream with just a null event should be provided.\n    // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n    // pipeline can progress to the next step. Note that the value from these streams are not used,\n    // they purely act as a signal to progress in the pipeline.\n    const sortChange = this._sort ? merge(this._sort.sortChange, this._sort.initialized) : of(null);\n    const pageChange = this._paginator ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized) : of(null);\n    const dataStream = this._data;\n    // Watch for base data or filter changes to provide a filtered set of data.\n    const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n    // Watch for filtered data or sort changes to provide an ordered set of data.\n    const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n    // Watch for ordered data or page changes to provide a paged set of data.\n    const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n    // Watched for paged data changes and send the result to the table to render.\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n  }\n  /**\n   * Returns a filtered data array where each filter object contains the filter string within\n   * the result of the filterPredicate function. If no filter is set, returns the data array\n   * as provided.\n   */\n  _filterData(data) {\n    // If there is a filter string, filter out data that does not contain it.\n    // Each data object is converted to a string using the function defined by filterPredicate.\n    // May be overridden for customization.\n    this.filteredData = this.filter == null || this.filter === '' ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\n    if (this.paginator) {\n      this._updatePaginator(this.filteredData.length);\n    }\n    return this.filteredData;\n  }\n  /**\n   * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n   * data array as provided. Uses the default data accessor for data lookup, unless a\n   * sortDataAccessor function is defined.\n   */\n  _orderData(data) {\n    // If there is no active sort or direction, return the data without trying to sort.\n    if (!this.sort) {\n      return data;\n    }\n    return this.sortData(data.slice(), this.sort);\n  }\n  /**\n   * Returns a paged slice of the provided data array according to the provided paginator's page\n   * index and length. If there is no paginator provided, returns the data array as provided.\n   */\n  _pageData(data) {\n    if (!this.paginator) {\n      return data;\n    }\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.slice(startIndex, startIndex + this.paginator.pageSize);\n  }\n  /**\n   * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n   * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n   * guard against making property changes within a round of change detection.\n   */\n  _updatePaginator(filteredDataLength) {\n    Promise.resolve().then(() => {\n      const paginator = this.paginator;\n      if (!paginator) {\n        return;\n      }\n      paginator.length = filteredDataLength;\n      // If the page index is set beyond the page, reduce it to the last page.\n      if (paginator.pageIndex > 0) {\n        const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n        const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n        if (newPageIndex !== paginator.pageIndex) {\n          paginator.pageIndex = newPageIndex;\n          // Since the paginator only emits after user-generated changes,\n          // we need our own stream so we know to should re-render the data.\n          this._internalPageChanges.next();\n        }\n      }\n    });\n  }\n  /**\n   * Used by the MatTable. Called when it connects to the data source.\n   * @docs-private\n   */\n  connect() {\n    if (!this._renderChangesSubscription) {\n      this._updateChangeSubscription();\n    }\n    return this._renderData;\n  }\n  /**\n   * Used by the MatTable. Called when it disconnects from the data source.\n   * @docs-private\n   */\n  disconnect() {\n    this._renderChangesSubscription?.unsubscribe();\n    this._renderChangesSubscription = null;\n  }\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn };\n","export enum ImageSizeOptions {\n    Small = \"Small\",\n    Medium = \"Medium\",\n    Big = \"Big\",\n}\n\nexport const IMAGE_SIZE_MAPPINGS = {\n    [ImageSizeOptions.Small]: 64,\n    [ImageSizeOptions.Medium]: 128,\n    [ImageSizeOptions.Big]: 256,\n} as const;\n","import { NgOptimizedImage } from \"@angular/common\";\nimport { ChangeDetectionStrategy, Component, input } from \"@angular/core\";\nimport { IMAGE_SIZE_MAPPINGS, ImageSizeOptions } from \"@model/image.model\";\nimport { Image } from \"@model/user.model\";\n\n@Component({\n    selector: \"app-item-image\",\n    standalone: true,\n    imports: [NgOptimizedImage],\n    templateUrl: \"./item-image.component.html\",\n    styleUrl: \"./item-image.component.scss\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ItemImageComponent {\n    image = input.required<Image>();\n    alt = input.required<string>();\n    imageSize = input<ImageSizeOptions | null>(null);\n\n    protected readonly IMAGE_SIZE_MAPPINGS = IMAGE_SIZE_MAPPINGS;\n}\n","<img\n    [ngSrc]=\"image().url\"\n    [alt]=\"alt()\"\n    [height]=\"imageSize() ? IMAGE_SIZE_MAPPINGS[imageSize()!] : image().height\"\n    [width]=\"imageSize() ? IMAGE_SIZE_MAPPINGS[imageSize()!] : image().width\"\n    priority\n/>\n","import * as i1 from '@angular/cdk/a11y';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, booleanAttribute, numberAttribute, Directive, Inject, Input, EventEmitter, inject, Injector, afterNextRender, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Attribute, ContentChildren, Output, ContentChild, ViewChild, QueryList, forwardRef, Self, NgModule } from '@angular/core';\nimport * as i3 from '@angular/material/core';\nimport { MatRippleLoader, MAT_RIPPLE_GLOBAL_OPTIONS, _ErrorStateTracker, MatCommonModule, MatRippleModule, ErrorStateMatcher } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, Validators } from '@angular/forms';\nimport * as i1$2 from '@angular/material/form-field';\nimport { MatFormFieldControl, MAT_FORM_FIELD } from '@angular/material/form-field';\n\n/** Injection token to be used to override the default options for the chips module. */\nconst _c0 = [\"*\", [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c1 = [\"*\", \"mat-chip-avatar, [matChipAvatar]\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChip_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChip_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipOption_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementStart(2, \"span\", 8);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 9);\n    i0.ɵɵelement(4, \"path\", 10);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MatChipOption_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c2 = \".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width);border-radius:var(--mdc-chip-container-shape-radius);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color)}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size);height:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.cdk-high-contrast-active .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius);width:var(--mdc-chip-with-icon-icon-size);height:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color);--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color);--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color);--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color)}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color)}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color);opacity:var(--mdc-chip-hover-state-layer-opacity)}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color);opacity:var(--mdc-chip-selected-hover-state-layer-opacity)}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color);opacity:var(--mdc-chip-selected-focus-state-layer-opacity)}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color)}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background:var(--mat-chip-trailing-action-state-layer-color)}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity)}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity)}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background:var(--mat-chip-selected-trailing-action-state-layer-color)}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-2px;bottom:-2px;left:6px;right:6px;border-radius:50%}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\";\nconst _c3 = [[[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"\", \"matChipEditInput\", \"\"]], \"*\", [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c4 = [\"mat-chip-avatar, [matChipAvatar]\", \"[matChipEditInput]\", \"*\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChipRow_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 0);\n  }\n}\nfunction MatChipRow_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 2);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipRow_Conditional_4_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 1);\n  }\n}\nfunction MatChipRow_Conditional_4_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\nfunction MatChipRow_Conditional_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MatChipRow_Conditional_4_Conditional_0_Template, 1, 0)(1, MatChipRow_Conditional_4_Conditional_1_Template, 1, 0, \"span\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r0.contentEditInput ? 0 : 1);\n  }\n}\nfunction MatChipRow_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction MatChipRow_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 5);\n    i0.ɵɵprojection(1, 3);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c5 = [\"*\"];\nconst _c6 = \".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\";\nconst MAT_CHIPS_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-chips-default-options', {\n  providedIn: 'root',\n  factory: () => ({\n    separatorKeyCodes: [ENTER]\n  })\n});\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = /*#__PURE__*/new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = /*#__PURE__*/new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = /*#__PURE__*/new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = /*#__PURE__*/new InjectionToken('MatChip');\n\n/**\n * Section within a chip.\n * @docs-private\n */\nlet MatChipAction = /*#__PURE__*/(() => {\n  class MatChipAction {\n    /** Whether the action is disabled. */\n    get disabled() {\n      return this._disabled || this._parentChip.disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n    }\n    /**\n     * Determine the value of the disabled attribute for this chip action.\n     */\n    _getDisabledAttribute() {\n      // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n      // string to indicate that disabled attribute should be included.\n      return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n    }\n    /**\n     * Determine the value of the tabindex attribute for this chip action.\n     */\n    _getTabindex() {\n      return this.disabled && !this._allowFocusWhenDisabled || !this.isInteractive ? null : this.tabIndex.toString();\n    }\n    constructor(_elementRef, _parentChip) {\n      this._elementRef = _elementRef;\n      this._parentChip = _parentChip;\n      /** Whether the action is interactive. */\n      this.isInteractive = true;\n      /** Whether this is the primary action in the chip. */\n      this._isPrimary = true;\n      this._disabled = false;\n      /** Tab index of the action. */\n      this.tabIndex = -1;\n      /**\n       * Private API to allow focusing this chip when it is disabled.\n       */\n      this._allowFocusWhenDisabled = false;\n      if (_elementRef.nativeElement.nodeName === 'BUTTON') {\n        _elementRef.nativeElement.setAttribute('type', 'button');\n      }\n    }\n    focus() {\n      this._elementRef.nativeElement.focus();\n    }\n    _handleClick(event) {\n      if (!this.disabled && this.isInteractive && this._isPrimary) {\n        event.preventDefault();\n        this._parentChip._handlePrimaryActionInteraction();\n      }\n    }\n    _handleKeydown(event) {\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled && this.isInteractive && this._isPrimary && !this._parentChip._isEditing) {\n        event.preventDefault();\n        this._parentChip._handlePrimaryActionInteraction();\n      }\n    }\n    static {\n      this.ɵfac = function MatChipAction_Factory(t) {\n        return new (t || MatChipAction)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_CHIP));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatChipAction,\n        selectors: [[\"\", \"matChipAction\", \"\"]],\n        hostAttrs: [1, \"mdc-evolution-chip__action\", \"mat-mdc-chip-action\"],\n        hostVars: 9,\n        hostBindings: function MatChipAction_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatChipAction_click_HostBindingHandler($event) {\n              return ctx._handleClick($event);\n            })(\"keydown\", function MatChipAction_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"tabindex\", ctx._getTabindex())(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx.disabled);\n            i0.ɵɵclassProp(\"mdc-evolution-chip__action--primary\", ctx._isPrimary)(\"mdc-evolution-chip__action--presentational\", !ctx.isInteractive)(\"mdc-evolution-chip__action--trailing\", !ctx._isPrimary);\n          }\n        },\n        inputs: {\n          isInteractive: \"isInteractive\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? -1 : numberAttribute(value)],\n          _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\"\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature]\n      });\n    }\n  }\n  return MatChipAction;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Avatar image within a chip. */\nlet MatChipAvatar = /*#__PURE__*/(() => {\n  class MatChipAvatar {\n    static {\n      this.ɵfac = function MatChipAvatar_Factory(t) {\n        return new (t || MatChipAvatar)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatChipAvatar,\n        selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]],\n        hostAttrs: [\"role\", \"img\", 1, \"mat-mdc-chip-avatar\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--primary\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_CHIP_AVATAR,\n          useExisting: MatChipAvatar\n        }])]\n      });\n    }\n  }\n  return MatChipAvatar;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Non-interactive trailing icon in a chip. */\nlet MatChipTrailingIcon = /*#__PURE__*/(() => {\n  class MatChipTrailingIcon extends MatChipAction {\n    constructor() {\n      super(...arguments);\n      /**\n       * MDC considers all trailing actions as a remove icon,\n       * but we support non-interactive trailing icons.\n       */\n      this.isInteractive = false;\n      this._isPrimary = false;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatChipTrailingIcon_BaseFactory;\n        return function MatChipTrailingIcon_Factory(t) {\n          return (ɵMatChipTrailingIcon_BaseFactory || (ɵMatChipTrailingIcon_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipTrailingIcon)))(t || MatChipTrailingIcon);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatChipTrailingIcon,\n        selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]],\n        hostAttrs: [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-trailing-icon\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_CHIP_TRAILING_ICON,\n          useExisting: MatChipTrailingIcon\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatChipTrailingIcon;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nlet MatChipRemove = /*#__PURE__*/(() => {\n  class MatChipRemove extends MatChipAction {\n    constructor() {\n      super(...arguments);\n      this._isPrimary = false;\n    }\n    _handleClick(event) {\n      if (!this.disabled) {\n        event.stopPropagation();\n        event.preventDefault();\n        this._parentChip.remove();\n      }\n    }\n    _handleKeydown(event) {\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n        event.stopPropagation();\n        event.preventDefault();\n        this._parentChip.remove();\n      }\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatChipRemove_BaseFactory;\n        return function MatChipRemove_Factory(t) {\n          return (ɵMatChipRemove_BaseFactory || (ɵMatChipRemove_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipRemove)))(t || MatChipRemove);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatChipRemove,\n        selectors: [[\"\", \"matChipRemove\", \"\"]],\n        hostAttrs: [\"role\", \"button\", 1, \"mat-mdc-chip-remove\", \"mat-mdc-chip-trailing-icon\", \"mat-mdc-focus-indicator\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n        hostVars: 1,\n        hostBindings: function MatChipRemove_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"aria-hidden\", null);\n          }\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_CHIP_REMOVE,\n          useExisting: MatChipRemove\n        }]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatChipRemove;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet uid = 0;\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nlet MatChip = /*#__PURE__*/(() => {\n  class MatChip {\n    _hasFocus() {\n      return this._hasFocusInternal;\n    }\n    /**\n     * The value of the chip. Defaults to the content inside\n     * the `mat-mdc-chip-action-label` element.\n     */\n    get value() {\n      return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n    }\n    set value(value) {\n      this._value = value;\n    }\n    /**\n     * Reference to the MatRipple instance of the chip.\n     * @deprecated Considered an implementation detail. To be removed.\n     * @breaking-change 17.0.0\n     */\n    get ripple() {\n      return this._rippleLoader?.getRipple(this._elementRef.nativeElement);\n    }\n    set ripple(v) {\n      this._rippleLoader?.attachRipple(this._elementRef.nativeElement, v);\n    }\n    constructor(_changeDetectorRef, _elementRef, _ngZone, _focusMonitor, _document, animationMode, _globalRippleOptions, tabIndex) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elementRef = _elementRef;\n      this._ngZone = _ngZone;\n      this._focusMonitor = _focusMonitor;\n      this._globalRippleOptions = _globalRippleOptions;\n      /** Emits when the chip is focused. */\n      this._onFocus = new Subject();\n      /** Emits when the chip is blurred. */\n      this._onBlur = new Subject();\n      /** Role for the root of the chip. */\n      this.role = null;\n      /** Whether the chip has focus. */\n      this._hasFocusInternal = false;\n      /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n      this.id = `mat-mdc-chip-${uid++}`;\n      // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n      // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n      // datepicker's use case.\n      /** ARIA label for the content of the chip. */\n      this.ariaLabel = null;\n      // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n      // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n      // datepicker's use case.\n      /** ARIA description for the content of the chip. */\n      this.ariaDescription = null;\n      /** Id of a span that contains this chip's aria description. */\n      this._ariaDescriptionId = `${this.id}-aria-description`;\n      /**\n       * Determines whether or not the chip displays the remove styling and emits (removed) events.\n       */\n      this.removable = true;\n      /**\n       * Colors the chip for emphasis as if it were selected.\n       */\n      this.highlighted = false;\n      /** Whether the ripple effect is disabled or not. */\n      this.disableRipple = false;\n      /** Whether the chip is disabled. */\n      this.disabled = false;\n      /** Tab index of the chip. */\n      this.tabIndex = -1;\n      /** Emitted when a chip is to be removed. */\n      this.removed = new EventEmitter();\n      /** Emitted when the chip is destroyed. */\n      this.destroyed = new EventEmitter();\n      /** The unstyled chip selector for this component. */\n      this.basicChipAttrName = 'mat-basic-chip';\n      /**\n       * Handles the lazy creation of the MatChip ripple.\n       * Used to improve initial load time of large applications.\n       */\n      this._rippleLoader = inject(MatRippleLoader);\n      this._injector = inject(Injector);\n      this._document = _document;\n      this._animationsDisabled = animationMode === 'NoopAnimations';\n      if (tabIndex != null) {\n        this.tabIndex = parseInt(tabIndex) ?? -1;\n      }\n      this._monitorFocus();\n      this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n        className: 'mat-mdc-chip-ripple',\n        disabled: this._isRippleDisabled()\n      });\n    }\n    ngOnInit() {\n      // This check needs to happen in `ngOnInit` so the overridden value of\n      // `basicChipAttrName` coming from base classes can be picked up.\n      const element = this._elementRef.nativeElement;\n      this._isBasicChip = element.hasAttribute(this.basicChipAttrName) || element.tagName.toLowerCase() === this.basicChipAttrName;\n    }\n    ngAfterViewInit() {\n      this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n      if (this._pendingFocus) {\n        this._pendingFocus = false;\n        this.focus();\n      }\n    }\n    ngAfterContentInit() {\n      // Since the styling depends on the presence of some\n      // actions, we have to mark for check on changes.\n      this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    ngDoCheck() {\n      this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n    }\n    ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n      this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n      this._actionChanges?.unsubscribe();\n      this.destroyed.emit({\n        chip: this\n      });\n      this.destroyed.complete();\n    }\n    /**\n     * Allows for programmatic removal of the chip.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n      if (this.removable) {\n        this.removed.emit({\n          chip: this\n        });\n      }\n    }\n    /** Whether or not the ripple should be disabled. */\n    _isRippleDisabled() {\n      return this.disabled || this.disableRipple || this._animationsDisabled || this._isBasicChip || !!this._globalRippleOptions?.disabled;\n    }\n    /** Returns whether the chip has a trailing icon. */\n    _hasTrailingIcon() {\n      return !!(this.trailingIcon || this.removeIcon);\n    }\n    /** Handles keyboard events on the chip. */\n    _handleKeydown(event) {\n      // Ignore backspace events where the user is holding down the key\n      // so that we don't accidentally remove too many chips.\n      if (event.keyCode === BACKSPACE && !event.repeat || event.keyCode === DELETE) {\n        event.preventDefault();\n        this.remove();\n      }\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n      if (!this.disabled) {\n        // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n        // This can happen if the consumer tries to focus a chip immediately after it is added.\n        // Queue the method to be called again on init.\n        if (this.primaryAction) {\n          this.primaryAction.focus();\n        } else {\n          this._pendingFocus = true;\n        }\n      }\n    }\n    /** Gets the action that contains a specific target node. */\n    _getSourceAction(target) {\n      return this._getActions().find(action => {\n        const element = action._elementRef.nativeElement;\n        return element === target || element.contains(target);\n      });\n    }\n    /** Gets all of the actions within the chip. */\n    _getActions() {\n      const result = [];\n      if (this.primaryAction) {\n        result.push(this.primaryAction);\n      }\n      if (this.removeIcon) {\n        result.push(this.removeIcon);\n      }\n      if (this.trailingIcon) {\n        result.push(this.trailingIcon);\n      }\n      return result;\n    }\n    /** Handles interactions with the primary action of the chip. */\n    _handlePrimaryActionInteraction() {\n      // Empty here, but is overwritten in child classes.\n    }\n    /** Gets the tabindex of the chip. */\n    _getTabIndex() {\n      if (!this.role) {\n        return null;\n      }\n      return this.disabled ? -1 : this.tabIndex;\n    }\n    /** Starts the focus monitoring process on the chip. */\n    _monitorFocus() {\n      this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n        const hasFocus = origin !== null;\n        if (hasFocus !== this._hasFocusInternal) {\n          this._hasFocusInternal = hasFocus;\n          if (hasFocus) {\n            this._onFocus.next({\n              chip: this\n            });\n          } else {\n            // When animations are enabled, Angular may end up removing the chip from the DOM a little\n            // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n            // that moves focus not the next item. To work around the issue, we defer marking the chip\n            // as not focused until after the next render.\n            afterNextRender(() => this._ngZone.run(() => this._onBlur.next({\n              chip: this\n            })), {\n              injector: this._injector\n            });\n          }\n        }\n      });\n    }\n    static {\n      this.ɵfac = function MatChip_Factory(t) {\n        return new (t || MatChip)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatChip,\n        selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]],\n        contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n            i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.leadingIcon = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allLeadingIcons = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTrailingIcons = _t);\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allRemoveIcons = _t);\n          }\n        },\n        viewQuery: function MatChip_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatChipAction, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.primaryAction = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-chip\"],\n        hostVars: 32,\n        hostBindings: function MatChip_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"keydown\", function MatChip_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-label\", ctx.ariaLabel);\n            i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n            i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-basic-chip\", ctx._isBasicChip)(\"mat-mdc-standard-chip\", !ctx._isBasicChip)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon())(\"_mat-animation-noopable\", ctx._animationsDisabled);\n          }\n        },\n        inputs: {\n          role: \"role\",\n          id: \"id\",\n          ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n          ariaDescription: [0, \"aria-description\", \"ariaDescription\"],\n          value: \"value\",\n          color: \"color\",\n          removable: [2, \"removable\", \"removable\", booleanAttribute],\n          highlighted: [2, \"highlighted\", \"highlighted\", booleanAttribute],\n          disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? undefined : numberAttribute(value)]\n        },\n        outputs: {\n          removed: \"removed\",\n          destroyed: \"destroyed\"\n        },\n        exportAs: [\"matChip\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_CHIP,\n          useExisting: MatChip\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 8,\n        vars: 3,\n        consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", 3, \"isInteractive\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n        template: function MatChip_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c0);\n            i0.ɵɵelement(0, \"span\", 0);\n            i0.ɵɵelementStart(1, \"span\", 1)(2, \"span\", 2);\n            i0.ɵɵtemplate(3, MatChip_Conditional_3_Template, 2, 0, \"span\", 3);\n            i0.ɵɵelementStart(4, \"span\", 4);\n            i0.ɵɵprojection(5);\n            i0.ɵɵelement(6, \"span\", 5);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵtemplate(7, MatChip_Conditional_7_Template, 2, 0, \"span\", 6);\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"isInteractive\", false);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.leadingIcon ? 3 : -1);\n            i0.ɵɵadvance(4);\n            i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n          }\n        },\n        dependencies: [MatChipAction],\n        styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-outline-width);border-radius:var(--mdc-chip-container-shape-radius);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-outline-color)}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mdc-chip-focus-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mdc-chip-disabled-outline-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--trailing{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--trailing{color:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--trailing{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mdc-chip-label-text-font);line-height:var(--mdc-chip-label-text-line-height);font-size:var(--mdc-chip-label-text-size);font-weight:var(--mdc-chip-label-text-weight);letter-spacing:var(--mdc-chip-label-text-tracking)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mdc-chip-selected-label-text-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mdc-chip-disabled-label-text-color)}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mdc-chip-with-avatar-avatar-size);height:var(--mdc-chip-with-avatar-avatar-size);font-size:var(--mdc-chip-with-avatar-avatar-size)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-selected-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}.cdk-high-contrast-active .mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity)*var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity))}.mat-mdc-standard-chip{border-radius:var(--mdc-chip-container-shape-radius);height:var(--mdc-chip-container-height)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mdc-chip-elevated-selected-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mdc-chip-flat-disabled-selected-container-color)}.cdk-high-contrast-active .mat-mdc-standard-chip{outline:solid 1px}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mdc-chip-with-avatar-avatar-shape-radius);width:var(--mdc-chip-with-icon-icon-size);height:var(--mdc-chip-with-icon-icon-size);font-size:var(--mdc-chip-with-icon-icon-size)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mdc-chip-with-icon-disabled-icon-color)}.mat-mdc-chip-highlighted{--mdc-chip-with-icon-icon-color:var(--mdc-chip-with-icon-selected-icon-color);--mdc-chip-elevated-container-color:var(--mdc-chip-elevated-selected-container-color);--mdc-chip-label-text-color:var(--mdc-chip-selected-label-text-color);--mdc-chip-outline-width:var(--mdc-chip-flat-selected-outline-width)}.mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color)}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color)}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-hover-state-layer-color);opacity:var(--mdc-chip-hover-state-layer-opacity)}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-hover-state-layer-color);opacity:var(--mdc-chip-selected-hover-state-layer-opacity)}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-focus-state-layer-color);opacity:var(--mdc-chip-focus-state-layer-opacity)}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mdc-chip-selected-focus-state-layer-color);opacity:var(--mdc-chip-selected-focus-state-layer-opacity)}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mdc-chip-with-avatar-disabled-avatar-opacity)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mdc-chip-with-trailing-icon-disabled-trailing-icon-opacity)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mdc-chip-with-icon-disabled-icon-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color)}.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity)}.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity)}.mat-mdc-chip-remove::after{background:var(--mat-chip-trailing-action-state-layer-color)}.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity)}.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity)}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background:var(--mat-chip-selected-trailing-action-state-layer-color)}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mdc-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-mdc-focus-indicator::before{margin:calc(calc(var(--mat-mdc-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-remove::before{margin:calc(var(--mat-mdc-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-2px;bottom:-2px;left:6px;right:6px;border-radius:50%}.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}.cdk-high-contrast-active .mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}.mat-mdc-chip-action:focus .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatChip;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n  constructor( /** Reference to the chip that emitted the event. */\n  source, /** Whether the chip that emitted the event is selected. */\n  selected, /** Whether the selection change was a result of a user interaction. */\n  isUserInput = false) {\n    this.source = source;\n    this.selected = selected;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nlet MatChipOption = /*#__PURE__*/(() => {\n  class MatChipOption extends MatChip {\n    constructor() {\n      super(...arguments);\n      /** Default chip options. */\n      this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n        optional: true\n      });\n      /** Whether the chip list is selectable. */\n      this.chipListSelectable = true;\n      /** Whether the chip list is in multi-selection mode. */\n      this._chipListMultiple = false;\n      /** Whether the chip list hides single-selection indicator. */\n      this._chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n      this._selectable = true;\n      this._selected = false;\n      /** The unstyled chip selector for this component. */\n      this.basicChipAttrName = 'mat-basic-chip-option';\n      /** Emitted when the chip is selected or deselected. */\n      this.selectionChange = new EventEmitter();\n    }\n    /**\n     * Whether or not the chip is selectable.\n     *\n     * When a chip is not selectable, changes to its selected state are always\n     * ignored. By default an option chip is selectable, and it becomes\n     * non-selectable if its parent chip list is not selectable.\n     */\n    get selectable() {\n      return this._selectable && this.chipListSelectable;\n    }\n    set selectable(value) {\n      this._selectable = value;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Whether the chip is selected. */\n    get selected() {\n      return this._selected;\n    }\n    set selected(value) {\n      this._setSelectedState(value, false, true);\n    }\n    /**\n     * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n     * interaction patterns.\n     *\n     * From [WAI ARIA Listbox authoring practices guide](\n     * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n     *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n     *  set to true. All options that are selectable but not selected have either aria-selected or\n     *  aria-checked set to false.\"\n     *\n     * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n     * VoiceOver reading every option as \"selected\" (#25736).\n     */\n    get ariaSelected() {\n      return this.selectable ? this.selected.toString() : null;\n    }\n    ngOnInit() {\n      super.ngOnInit();\n      this.role = 'presentation';\n    }\n    /** Selects the chip. */\n    select() {\n      this._setSelectedState(true, false, true);\n    }\n    /** Deselects the chip. */\n    deselect() {\n      this._setSelectedState(false, false, true);\n    }\n    /** Selects this chip and emits userInputSelection event */\n    selectViaInteraction() {\n      this._setSelectedState(true, true, true);\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n      this._setSelectedState(!this.selected, isUserInput, true);\n      return this.selected;\n    }\n    _handlePrimaryActionInteraction() {\n      if (!this.disabled) {\n        // Interacting with the primary action implies that the chip already has focus, however\n        // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n        // We work around it by explicitly focusing the primary action of the current chip.\n        this.focus();\n        if (this.selectable) {\n          this.toggleSelected(true);\n        }\n      }\n    }\n    _hasLeadingGraphic() {\n      if (this.leadingIcon) {\n        return true;\n      }\n      // The checkmark graphic communicates selected state for both single-select and multi-select.\n      // Include checkmark in single-select to fix a11y issue where selected state is communicated\n      // visually only using color (#25886).\n      return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n    }\n    _setSelectedState(isSelected, isUserInput, emitEvent) {\n      if (isSelected !== this.selected) {\n        this._selected = isSelected;\n        if (emitEvent) {\n          this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this.selected\n          });\n        }\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatChipOption_BaseFactory;\n        return function MatChipOption_Factory(t) {\n          return (ɵMatChipOption_BaseFactory || (ɵMatChipOption_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipOption)))(t || MatChipOption);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatChipOption,\n        selectors: [[\"mat-basic-chip-option\"], [\"\", \"mat-basic-chip-option\", \"\"], [\"mat-chip-option\"], [\"\", \"mat-chip-option\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-option\"],\n        hostVars: 37,\n        hostBindings: function MatChipOption_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n            i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--filter\", !ctx._isBasicChip)(\"mdc-evolution-chip--selectable\", !ctx._isBasicChip)(\"mat-mdc-chip-selected\", ctx.selected)(\"mat-mdc-chip-multiple\", ctx._chipListMultiple)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--selected\", ctx.selected)(\"mdc-evolution-chip--selecting\", !ctx._animationsDisabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-graphic\", ctx._hasLeadingGraphic())(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n          }\n        },\n        inputs: {\n          selectable: [2, \"selectable\", \"selectable\", booleanAttribute],\n          selected: [2, \"selected\", \"selected\", booleanAttribute]\n        },\n        outputs: {\n          selectionChange: \"selectionChange\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatChip,\n          useExisting: MatChipOption\n        }, {\n          provide: MAT_CHIP,\n          useExisting: MatChipOption\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 10,\n        vars: 9,\n        consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", \"role\", \"option\", 3, \"tabIndex\", \"_allowFocusWhenDisabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"], [1, \"cdk-visually-hidden\", 3, \"id\"], [1, \"mdc-evolution-chip__checkmark\"], [\"viewBox\", \"-2 -3 30 30\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mdc-evolution-chip__checkmark-svg\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-evolution-chip__checkmark-path\"]],\n        template: function MatChipOption_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c0);\n            i0.ɵɵelement(0, \"span\", 0);\n            i0.ɵɵelementStart(1, \"span\", 1)(2, \"button\", 2);\n            i0.ɵɵtemplate(3, MatChipOption_Conditional_3_Template, 5, 0, \"span\", 3);\n            i0.ɵɵelementStart(4, \"span\", 4);\n            i0.ɵɵprojection(5);\n            i0.ɵɵelement(6, \"span\", 5);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵtemplate(7, MatChipOption_Conditional_7_Template, 2, 0, \"span\", 6);\n            i0.ɵɵelementStart(8, \"span\", 7);\n            i0.ɵɵtext(9);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"tabIndex\", ctx.tabIndex)(\"_allowFocusWhenDisabled\", true);\n            i0.ɵɵattribute(\"aria-selected\", ctx.ariaSelected)(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx._ariaDescriptionId);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx._hasLeadingGraphic() ? 3 : -1);\n            i0.ɵɵadvance(4);\n            i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"id\", ctx._ariaDescriptionId);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx.ariaDescription);\n          }\n        },\n        dependencies: [MatChipAction],\n        styles: [_c2],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatChipOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nlet MatChipEditInput = /*#__PURE__*/(() => {\n  class MatChipEditInput {\n    constructor(_elementRef, _document) {\n      this._elementRef = _elementRef;\n      this._document = _document;\n    }\n    initialize(initialValue) {\n      this.getNativeElement().focus();\n      this.setValue(initialValue);\n    }\n    getNativeElement() {\n      return this._elementRef.nativeElement;\n    }\n    setValue(value) {\n      this.getNativeElement().textContent = value;\n      this._moveCursorToEndOfInput();\n    }\n    getValue() {\n      return this.getNativeElement().textContent || '';\n    }\n    _moveCursorToEndOfInput() {\n      const range = this._document.createRange();\n      range.selectNodeContents(this.getNativeElement());\n      range.collapse(false);\n      const sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n    static {\n      this.ɵfac = function MatChipEditInput_Factory(t) {\n        return new (t || MatChipEditInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatChipEditInput,\n        selectors: [[\"span\", \"matChipEditInput\", \"\"]],\n        hostAttrs: [\"role\", \"textbox\", \"tabindex\", \"-1\", \"contenteditable\", \"true\", 1, \"mat-chip-edit-input\"],\n        standalone: true\n      });\n    }\n  }\n  return MatChipEditInput;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nlet MatChipRow = /*#__PURE__*/(() => {\n  class MatChipRow extends MatChip {\n    constructor(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex) {\n      super(changeDetectorRef, elementRef, ngZone, focusMonitor, _document, animationMode, globalRippleOptions, tabIndex);\n      this.basicChipAttrName = 'mat-basic-chip-row';\n      /**\n       * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n       * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n       * while the editing action is being initialized.\n       */\n      this._editStartPending = false;\n      this.editable = false;\n      /** Emitted when the chip is edited. */\n      this.edited = new EventEmitter();\n      this._isEditing = false;\n      this.role = 'row';\n      this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n        if (this._isEditing && !this._editStartPending) {\n          this._onEditFinish();\n        }\n      });\n    }\n    _hasTrailingIcon() {\n      // The trailing icon is hidden while editing.\n      return !this._isEditing && super._hasTrailingIcon();\n    }\n    /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n    _handleFocus() {\n      if (!this._isEditing && !this.disabled) {\n        this.focus();\n      }\n    }\n    _handleKeydown(event) {\n      if (event.keyCode === ENTER && !this.disabled) {\n        if (this._isEditing) {\n          event.preventDefault();\n          this._onEditFinish();\n        } else if (this.editable) {\n          this._startEditing(event);\n        }\n      } else if (this._isEditing) {\n        // Stop the event from reaching the chip set in order to avoid navigating.\n        event.stopPropagation();\n      } else {\n        super._handleKeydown(event);\n      }\n    }\n    _handleDoubleclick(event) {\n      if (!this.disabled && this.editable) {\n        this._startEditing(event);\n      }\n    }\n    _startEditing(event) {\n      if (!this.primaryAction || this.removeIcon && this._getSourceAction(event.target) === this.removeIcon) {\n        return;\n      }\n      // The value depends on the DOM so we need to extract it before we flip the flag.\n      const value = this.value;\n      this._isEditing = this._editStartPending = true;\n      // Defer initializing the input until after it has been added to the DOM.\n      afterNextRender(() => {\n        this._getEditInput().initialize(value);\n        this._editStartPending = false;\n      }, {\n        injector: this._injector\n      });\n    }\n    _onEditFinish() {\n      this._isEditing = this._editStartPending = false;\n      this.edited.emit({\n        chip: this,\n        value: this._getEditInput().getValue()\n      });\n      // If the edit input is still focused or focus was returned to the body after it was destroyed,\n      // return focus to the chip contents.\n      if (this._document.activeElement === this._getEditInput().getNativeElement() || this._document.activeElement === this._document.body) {\n        this.primaryAction.focus();\n      }\n    }\n    _isRippleDisabled() {\n      return super._isRippleDisabled() || this._isEditing;\n    }\n    /**\n     * Gets the projected chip edit input, or the default input if none is projected in. One of these\n     * two values is guaranteed to be defined.\n     */\n    _getEditInput() {\n      return this.contentEditInput || this.defaultEditInput;\n    }\n    static {\n      this.ɵfac = function MatChipRow_Factory(t) {\n        return new (t || MatChipRow)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵinjectAttribute('tabindex'));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatChipRow,\n        selectors: [[\"mat-chip-row\"], [\"\", \"mat-chip-row\", \"\"], [\"mat-basic-chip-row\"], [\"\", \"mat-basic-chip-row\", \"\"]],\n        contentQueries: function MatChipRow_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatChipEditInput, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentEditInput = _t.first);\n          }\n        },\n        viewQuery: function MatChipRow_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(MatChipEditInput, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultEditInput = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-row\", \"mdc-evolution-chip\"],\n        hostVars: 27,\n        hostBindings: function MatChipRow_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"focus\", function MatChipRow_focus_HostBindingHandler($event) {\n              return ctx._handleFocus($event);\n            })(\"dblclick\", function MatChipRow_dblclick_HostBindingHandler($event) {\n              return ctx._handleDoubleclick($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n            i0.ɵɵclassProp(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-editing\", ctx._isEditing)(\"mat-mdc-chip-editable\", ctx.editable)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n          }\n        },\n        inputs: {\n          editable: \"editable\"\n        },\n        outputs: {\n          edited: \"edited\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatChip,\n          useExisting: MatChipRow\n        }, {\n          provide: MAT_CHIP,\n          useExisting: MatChipRow\n        }]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c4,\n        decls: 10,\n        vars: 10,\n        consts: [[1, \"mat-mdc-chip-focus-overlay\"], [\"role\", \"gridcell\", \"matChipAction\", \"\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\", 3, \"tabIndex\", \"disabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-mdc-focus-indicator\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"], [1, \"cdk-visually-hidden\", 3, \"id\"], [\"matChipEditInput\", \"\"]],\n        template: function MatChipRow_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c3);\n            i0.ɵɵtemplate(0, MatChipRow_Conditional_0_Template, 1, 0, \"span\", 0);\n            i0.ɵɵelementStart(1, \"span\", 1);\n            i0.ɵɵtemplate(2, MatChipRow_Conditional_2_Template, 2, 0, \"span\", 2);\n            i0.ɵɵelementStart(3, \"span\", 3);\n            i0.ɵɵtemplate(4, MatChipRow_Conditional_4_Template, 2, 1)(5, MatChipRow_Conditional_5_Template, 1, 0);\n            i0.ɵɵelement(6, \"span\", 4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(7, MatChipRow_Conditional_7_Template, 2, 0, \"span\", 5);\n            i0.ɵɵelementStart(8, \"span\", 6);\n            i0.ɵɵtext(9);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵconditional(!ctx._isEditing ? 0 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"tabIndex\", ctx.tabIndex)(\"disabled\", ctx.disabled);\n            i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-describedby\", ctx._ariaDescriptionId);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(ctx.leadingIcon ? 2 : -1);\n            i0.ɵɵadvance(2);\n            i0.ɵɵconditional(ctx._isEditing ? 4 : 5);\n            i0.ɵɵadvance(3);\n            i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"id\", ctx._ariaDescriptionId);\n            i0.ɵɵadvance();\n            i0.ɵɵtextInterpolate(ctx.ariaDescription);\n          }\n        },\n        dependencies: [MatChipAction, MatChipEditInput],\n        styles: [_c2],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatChipRow;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nlet MatChipSet = /*#__PURE__*/(() => {\n  class MatChipSet {\n    /** Combined stream of all of the child chips' focus events. */\n    get chipFocusChanges() {\n      return this._getChipStream(chip => chip._onFocus);\n    }\n    /** Combined stream of all of the child chips' destroy events. */\n    get chipDestroyedChanges() {\n      return this._getChipStream(chip => chip.destroyed);\n    }\n    /** Combined stream of all of the child chips' remove events. */\n    get chipRemovedChanges() {\n      return this._getChipStream(chip => chip.removed);\n    }\n    /** Whether the chip set is disabled. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._syncChipsState();\n    }\n    /** Whether the chip list contains chips or not. */\n    get empty() {\n      return !this._chips || this._chips.length === 0;\n    }\n    /** The ARIA role applied to the chip set. */\n    get role() {\n      if (this._explicitRole) {\n        return this._explicitRole;\n      }\n      return this.empty ? null : this._defaultRole;\n    }\n    set role(value) {\n      this._explicitRole = value;\n    }\n    /** Whether any of the chips inside of this chip-set has focus. */\n    get focused() {\n      return this._hasFocusedChip();\n    }\n    constructor(_elementRef, _changeDetectorRef, _dir) {\n      this._elementRef = _elementRef;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._dir = _dir;\n      /** Index of the last destroyed chip that had focus. */\n      this._lastDestroyedFocusedChipIndex = null;\n      /** Subject that emits when the component has been destroyed. */\n      this._destroyed = new Subject();\n      /** Role to use if it hasn't been overwritten by the user. */\n      this._defaultRole = 'presentation';\n      this._disabled = false;\n      /** Tabindex of the chip set. */\n      this.tabIndex = 0;\n      this._explicitRole = null;\n      /** Flat list of all the actions contained within the chips. */\n      this._chipActions = new QueryList();\n    }\n    ngAfterViewInit() {\n      this._setUpFocusManagement();\n      this._trackChipSetChanges();\n      this._trackDestroyedFocusedChip();\n    }\n    ngOnDestroy() {\n      this._keyManager?.destroy();\n      this._chipActions.destroy();\n      this._destroyed.next();\n      this._destroyed.complete();\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n      return this._chips && this._chips.some(chip => chip._hasFocus());\n    }\n    /** Syncs the chip-set's state with the individual chips. */\n    _syncChipsState() {\n      if (this._chips) {\n        this._chips.forEach(chip => {\n          chip.disabled = this._disabled;\n          chip._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n    focus() {}\n    /** Handles keyboard events on the chip set. */\n    _handleKeydown(event) {\n      if (this._originatesFromChip(event)) {\n        this._keyManager.onKeydown(event);\n      }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n      return index >= 0 && index < this._chips.length;\n    }\n    /**\n     * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the set from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n      if (this.tabIndex !== -1) {\n        const previousTabIndex = this.tabIndex;\n        this.tabIndex = -1;\n        this._changeDetectorRef.markForCheck();\n        // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n        // doesn't allow enough time for the focus to escape.\n        setTimeout(() => {\n          this.tabIndex = previousTabIndex;\n          this._changeDetectorRef.markForCheck();\n        });\n      }\n    }\n    /**\n     * Gets a stream of events from all the chips within the set.\n     * The stream will automatically incorporate any newly-added chips.\n     */\n    _getChipStream(mappingFunction) {\n      return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n      let currentElement = event.target;\n      while (currentElement && currentElement !== this._elementRef.nativeElement) {\n        if (currentElement.classList.contains('mat-mdc-chip')) {\n          return true;\n        }\n        currentElement = currentElement.parentElement;\n      }\n      return false;\n    }\n    /** Sets up the chip set's focus management logic. */\n    _setUpFocusManagement() {\n      // Create a flat `QueryList` containing the actions of all of the chips.\n      // This allows us to navigate both within the chip and move to the next/previous\n      // one using the existing `ListKeyManager`.\n      this._chips.changes.pipe(startWith(this._chips)).subscribe(chips => {\n        const actions = [];\n        chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n        this._chipActions.reset(actions);\n        this._chipActions.notifyOnChanges();\n      });\n      this._keyManager = new FocusKeyManager(this._chipActions).withVerticalOrientation().withHorizontalOrientation(this._dir ? this._dir.value : 'ltr').withHomeAndEnd().skipPredicate(action => this._skipPredicate(action));\n      // Keep the manager active index in sync so that navigation picks\n      // up from the current chip if the user clicks into the list directly.\n      this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({\n        chip\n      }) => {\n        const action = chip._getSourceAction(document.activeElement);\n        if (action) {\n          this._keyManager.updateActiveItem(action);\n        }\n      });\n      this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive and disabled actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n      // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n      // chips.\n      return !action.isInteractive || action.disabled;\n    }\n    /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n    _trackChipSetChanges() {\n      this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n        if (this.disabled) {\n          // Since this happens after the content has been\n          // checked, we need to defer it to the next tick.\n          Promise.resolve().then(() => this._syncChipsState());\n        }\n        this._redirectDestroyedChipFocus();\n      });\n    }\n    /** Starts tracking the destroyed chips in order to capture the focused one. */\n    _trackDestroyedFocusedChip() {\n      this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n        const chipArray = this._chips.toArray();\n        const chipIndex = chipArray.indexOf(event.chip);\n        // If the focused chip is destroyed, save its index so that we can move focus to the next\n        // chip. We only save the index here, rather than move the focus immediately, because we want\n        // to wait until the chip is removed from the chip list before focusing the next one. This\n        // allows us to keep focus on the same index if the chip gets swapped out.\n        if (this._isValidIndex(chipIndex) && event.chip._hasFocus()) {\n          this._lastDestroyedFocusedChipIndex = chipIndex;\n        }\n      });\n    }\n    /**\n     * Finds the next appropriate chip to move focus to,\n     * if the currently-focused chip is destroyed.\n     */\n    _redirectDestroyedChipFocus() {\n      if (this._lastDestroyedFocusedChipIndex == null) {\n        return;\n      }\n      if (this._chips.length) {\n        const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n        const chipToFocus = this._chips.toArray()[newIndex];\n        if (chipToFocus.disabled) {\n          // If we're down to one disabled chip, move focus back to the set.\n          if (this._chips.length === 1) {\n            this.focus();\n          } else {\n            this._keyManager.setPreviousItemActive();\n          }\n        } else {\n          chipToFocus.focus();\n        }\n      } else {\n        this.focus();\n      }\n      this._lastDestroyedFocusedChipIndex = null;\n    }\n    static {\n      this.ɵfac = function MatChipSet_Factory(t) {\n        return new (t || MatChipSet)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatChipSet,\n        selectors: [[\"mat-chip-set\"]],\n        contentQueries: function MatChipSet_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatChip, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-chip-set\", \"mdc-evolution-chip-set\"],\n        hostVars: 1,\n        hostBindings: function MatChipSet_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"keydown\", function MatChipSet_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"role\", ctx.role);\n          }\n        },\n        inputs: {\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          role: \"role\",\n          tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)]\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c5,\n        decls: 2,\n        vars: 0,\n        consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n        template: function MatChipSet_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementEnd();\n          }\n        },\n        styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatChipSet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n  constructor( /** Chip listbox that emitted the event. */\n  source, /** Value of the chip listbox when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatChipListbox),\n  multi: true\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nlet MatChipListbox = /*#__PURE__*/(() => {\n  class MatChipListbox extends MatChipSet {\n    constructor() {\n      super(...arguments);\n      /**\n       * Function when touched. Set as part of ControlValueAccessor implementation.\n       * @docs-private\n       */\n      this._onTouched = () => {};\n      /**\n       * Function when changed. Set as part of ControlValueAccessor implementation.\n       * @docs-private\n       */\n      this._onChange = () => {};\n      // TODO: MDC uses `grid` here\n      this._defaultRole = 'listbox';\n      /** Default chip options. */\n      this._defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n        optional: true\n      });\n      this._multiple = false;\n      /** Orientation of the chip list. */\n      this.ariaOrientation = 'horizontal';\n      this._selectable = true;\n      /**\n       * A function to compare the option values with the selected values. The first argument\n       * is a value from an option. The second is a value from the selection. A boolean\n       * should be returned.\n       */\n      this.compareWith = (o1, o2) => o1 === o2;\n      /** Whether this chip listbox is required. */\n      this.required = false;\n      this._hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n      /** Event emitted when the selected chip listbox value has been changed by the user. */\n      this.change = new EventEmitter();\n      this._chips = undefined;\n    }\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() {\n      return this._multiple;\n    }\n    set multiple(value) {\n      this._multiple = value;\n      this._syncListboxProperties();\n    }\n    /** The array of selected chips inside the chip listbox. */\n    get selected() {\n      const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n      return this.multiple ? selectedChips : selectedChips[0];\n    }\n    /**\n     * Whether or not this chip listbox is selectable.\n     *\n     * When a chip listbox is not selectable, the selected states for all\n     * the chips inside the chip listbox are always ignored.\n     */\n    get selectable() {\n      return this._selectable;\n    }\n    set selectable(value) {\n      this._selectable = value;\n      this._syncListboxProperties();\n    }\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n      return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n      this._hideSingleSelectionIndicator = value;\n      this._syncListboxProperties();\n    }\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n      return this._getChipStream(chip => chip.selectionChange);\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n      return this._getChipStream(chip => chip._onBlur);\n    }\n    /** The value of the listbox, which is the combined value of the selected chips. */\n    get value() {\n      return this._value;\n    }\n    set value(value) {\n      this.writeValue(value);\n      this._value = value;\n    }\n    ngAfterContentInit() {\n      if (this._pendingInitialValue !== undefined) {\n        Promise.resolve().then(() => {\n          this._setSelectionByValue(this._pendingInitialValue, false);\n          this._pendingInitialValue = undefined;\n        });\n      }\n      this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n        // Update listbox selectable/multiple properties on chips\n        this._syncListboxProperties();\n      });\n      this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n      this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n        if (!this.multiple) {\n          this._chips.forEach(chip => {\n            if (chip !== event.source) {\n              chip._setSelectedState(false, false, false);\n            }\n          });\n        }\n        if (event.isUserInput) {\n          this._propagateChanges();\n        }\n      });\n    }\n    /**\n     * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n     * are no selected chips.\n     */\n    focus() {\n      if (this.disabled) {\n        return;\n      }\n      const firstSelectedChip = this._getFirstSelectedChip();\n      if (firstSelectedChip && !firstSelectedChip.disabled) {\n        firstSelectedChip.focus();\n      } else if (this._chips.length > 0) {\n        this._keyManager.setFirstItemActive();\n      } else {\n        this._elementRef.nativeElement.focus();\n      }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n      if (this._chips) {\n        this._setSelectionByValue(value, false);\n      } else if (value != null) {\n        this._pendingInitialValue = value;\n      }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n    }\n    /** Selects all chips with value. */\n    _setSelectionByValue(value, isUserInput = true) {\n      this._clearSelection();\n      if (Array.isArray(value)) {\n        value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n      } else {\n        this._selectValue(value, isUserInput);\n      }\n    }\n    /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n    _blur() {\n      if (!this.disabled) {\n        // Wait to see if focus moves to an individual chip.\n        setTimeout(() => {\n          if (!this.focused) {\n            this._markAsTouched();\n          }\n        });\n      }\n    }\n    _keydown(event) {\n      if (event.keyCode === TAB) {\n        super._allowFocusEscape();\n      }\n    }\n    /** Marks the field as touched */\n    _markAsTouched() {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n      let valueToEmit = null;\n      if (Array.isArray(this.selected)) {\n        valueToEmit = this.selected.map(chip => chip.value);\n      } else {\n        valueToEmit = this.selected ? this.selected.value : undefined;\n      }\n      this._value = valueToEmit;\n      this.change.emit(new MatChipListboxChange(this, valueToEmit));\n      this._onChange(valueToEmit);\n      this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Deselects every chip in the listbox.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n      this._chips.forEach(chip => {\n        if (chip !== skip) {\n          chip.deselect();\n        }\n      });\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput) {\n      const correspondingChip = this._chips.find(chip => {\n        return chip.value != null && this.compareWith(chip.value, value);\n      });\n      if (correspondingChip) {\n        isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n      }\n      return correspondingChip;\n    }\n    /** Syncs the chip-listbox selection state with the individual chips. */\n    _syncListboxProperties() {\n      if (this._chips) {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n          this._chips.forEach(chip => {\n            chip._chipListMultiple = this.multiple;\n            chip.chipListSelectable = this._selectable;\n            chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n            chip._changeDetectorRef.markForCheck();\n          });\n        });\n      }\n    }\n    /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n    _getFirstSelectedChip() {\n      if (Array.isArray(this.selected)) {\n        return this.selected.length ? this.selected[0] : undefined;\n      } else {\n        return this.selected;\n      }\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n      // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n      // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n      // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n      // exceptions for compound widgets.\n      //\n      // From [Developing a Keyboard Interface](\n      // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n      //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n      //   Listbox...\"\n      return !action.isInteractive;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatChipListbox_BaseFactory;\n        return function MatChipListbox_Factory(t) {\n          return (ɵMatChipListbox_BaseFactory || (ɵMatChipListbox_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipListbox)))(t || MatChipListbox);\n        };\n      })();\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatChipListbox,\n        selectors: [[\"mat-chip-listbox\"]],\n        contentQueries: function MatChipListbox_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatChipOption, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n          }\n        },\n        hostAttrs: [1, \"mdc-evolution-chip-set\", \"mat-mdc-chip-listbox\"],\n        hostVars: 11,\n        hostBindings: function MatChipListbox_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"focus\", function MatChipListbox_focus_HostBindingHandler() {\n              return ctx.focus();\n            })(\"blur\", function MatChipListbox_blur_HostBindingHandler() {\n              return ctx._blur();\n            })(\"keydown\", function MatChipListbox_keydown_HostBindingHandler($event) {\n              return ctx._keydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"tabIndex\", ctx.disabled || ctx.empty ? -1 : ctx.tabIndex);\n            i0.ɵɵattribute(\"role\", ctx.role)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-multiselectable\", ctx.multiple)(\"aria-orientation\", ctx.ariaOrientation);\n            i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-required\", ctx.required);\n          }\n        },\n        inputs: {\n          multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n          ariaOrientation: [0, \"aria-orientation\", \"ariaOrientation\"],\n          selectable: [2, \"selectable\", \"selectable\", booleanAttribute],\n          compareWith: \"compareWith\",\n          required: [2, \"required\", \"required\", booleanAttribute],\n          hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n          value: \"value\"\n        },\n        outputs: {\n          change: \"change\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c5,\n        decls: 2,\n        vars: 0,\n        consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n        template: function MatChipListbox_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementEnd();\n          }\n        },\n        styles: [_c6],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatChipListbox;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n  constructor( /** Chip grid that emitted the event. */\n  source, /** Value of the chip grid when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nlet MatChipGrid = /*#__PURE__*/(() => {\n  class MatChipGrid extends MatChipSet {\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n      return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n      this._syncChipsState();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n      return this._chipInput.id;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n      return (!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n      return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n      this._placeholder = value;\n      this.stateChanges.next();\n    }\n    /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n    get focused() {\n      return this._chipInput.focused || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n      return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n      this._required = value;\n      this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n      return !this.empty || this.focused;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n      return this._value;\n    }\n    set value(value) {\n      this._value = value;\n    }\n    /** An object used to control when error messages are shown. */\n    get errorStateMatcher() {\n      return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n      this._errorStateTracker.matcher = value;\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n      return this._getChipStream(chip => chip._onBlur);\n    }\n    /** Whether the chip grid is in an error state. */\n    get errorState() {\n      return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n      this._errorStateTracker.errorState = value;\n    }\n    constructor(elementRef, changeDetectorRef, dir, parentForm, parentFormGroup, defaultErrorStateMatcher, ngControl) {\n      super(elementRef, changeDetectorRef, dir);\n      this.ngControl = ngControl;\n      /**\n       * Implemented as part of MatFormFieldControl.\n       * @docs-private\n       */\n      this.controlType = 'mat-chip-grid';\n      this._defaultRole = 'grid';\n      /**\n       * List of element ids to propagate to the chipInput's aria-describedby attribute.\n       */\n      this._ariaDescribedbyIds = [];\n      /**\n       * Function when touched. Set as part of ControlValueAccessor implementation.\n       * @docs-private\n       */\n      this._onTouched = () => {};\n      /**\n       * Function when changed. Set as part of ControlValueAccessor implementation.\n       * @docs-private\n       */\n      this._onChange = () => {};\n      this._value = [];\n      /** Emits when the chip grid value has been changed by the user. */\n      this.change = new EventEmitter();\n      /**\n       * Emits whenever the raw value of the chip-grid changes. This is here primarily\n       * to facilitate the two-way binding for the `value` input.\n       * @docs-private\n       */\n      this.valueChange = new EventEmitter();\n      this._chips = undefined;\n      /**\n       * Emits whenever the component state changes and should cause the parent\n       * form-field to update. Implemented as part of `MatFormFieldControl`.\n       * @docs-private\n       */\n      this.stateChanges = new Subject();\n      if (this.ngControl) {\n        this.ngControl.valueAccessor = this;\n      }\n      this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, ngControl, parentFormGroup, parentForm, this.stateChanges);\n    }\n    ngAfterContentInit() {\n      this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        this._blur();\n        this.stateChanges.next();\n      });\n      merge(this.chipFocusChanges, this._chips.changes).pipe(takeUntil(this._destroyed)).subscribe(() => this.stateChanges.next());\n    }\n    ngAfterViewInit() {\n      super.ngAfterViewInit();\n      if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n      }\n    }\n    ngDoCheck() {\n      if (this.ngControl) {\n        // We need to re-evaluate this on every change detection cycle, because there are some\n        // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n        // that whatever logic is in here has to be super lean or we risk destroying the performance.\n        this.updateErrorState();\n      }\n    }\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      this.stateChanges.complete();\n    }\n    /** Associates an HTML input element with this chip grid. */\n    registerInput(inputElement) {\n      this._chipInput = inputElement;\n      this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n      if (!this.disabled && !this._originatesFromChip(event)) {\n        this.focus();\n      }\n    }\n    /**\n     * Focuses the first chip in this chip grid, or the associated input when there\n     * are no eligible chips.\n     */\n    focus() {\n      if (this.disabled || this._chipInput.focused) {\n        return;\n      }\n      if (!this._chips.length || this._chips.first.disabled) {\n        // Delay until the next tick, because this can cause a \"changed after checked\"\n        // error if the input does something on focus (e.g. opens an autocomplete).\n        Promise.resolve().then(() => this._chipInput.focus());\n      } else if (this._chips.length) {\n        this._keyManager.setFirstItemActive();\n      }\n      this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n      // We must keep this up to date to handle the case where ids are set\n      // before the chip input is registered.\n      this._ariaDescribedbyIds = ids;\n      this._chipInput?.setDescribedByIds(ids);\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n      // The user is responsible for creating the child chips, so we just store the value.\n      this._value = value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this.stateChanges.next();\n    }\n    /** Refreshes the error state of the chip grid. */\n    updateErrorState() {\n      this._errorStateTracker.updateErrorState();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n    _blur() {\n      if (!this.disabled) {\n        // Check whether the focus moved to chip input.\n        // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n        // to chip input, do nothing.\n        // Timeout is needed to wait for the focus() event trigger on chip input.\n        setTimeout(() => {\n          if (!this.focused) {\n            this._propagateChanges();\n            this._markAsTouched();\n          }\n        });\n      }\n    }\n    /**\n     * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the grid from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n      if (!this._chipInput.focused) {\n        super._allowFocusEscape();\n      }\n    }\n    /** Handles custom keyboard events. */\n    _handleKeydown(event) {\n      const keyCode = event.keyCode;\n      const activeItem = this._keyManager.activeItem;\n      if (keyCode === TAB) {\n        if (this._chipInput.focused && hasModifierKey(event, 'shiftKey') && this._chips.length && !this._chips.last.disabled) {\n          event.preventDefault();\n          if (activeItem) {\n            this._keyManager.setActiveItem(activeItem);\n          } else {\n            this._focusLastChip();\n          }\n        } else {\n          // Use the super method here since it doesn't check for the input\n          // focused state. This allows focus to escape if there's only one\n          // disabled chip left in the list.\n          super._allowFocusEscape();\n        }\n      } else if (!this._chipInput.focused) {\n        // The up and down arrows are supposed to navigate between the individual rows in the grid.\n        // We do this by filtering the actions down to the ones that have the same `_isPrimary`\n        // flag as the active action and moving focus between them ourseles instead of delegating\n        // to the key manager. For more information, see #29359 and:\n        // https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label\n        if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && activeItem) {\n          const eligibleActions = this._chipActions.filter(action => action._isPrimary === activeItem._isPrimary && !this._skipPredicate(action));\n          const currentIndex = eligibleActions.indexOf(activeItem);\n          const delta = event.keyCode === UP_ARROW ? -1 : 1;\n          event.preventDefault();\n          if (currentIndex > -1 && this._isValidIndex(currentIndex + delta)) {\n            this._keyManager.setActiveItem(eligibleActions[currentIndex + delta]);\n          }\n        } else {\n          super._handleKeydown(event);\n        }\n      }\n      this.stateChanges.next();\n    }\n    _focusLastChip() {\n      if (this._chips.length) {\n        this._chips.last.focus();\n      }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n      const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n      this._value = valueToEmit;\n      this.change.emit(new MatChipGridChange(this, valueToEmit));\n      this.valueChange.emit(valueToEmit);\n      this._onChange(valueToEmit);\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    }\n    static {\n      this.ɵfac = function MatChipGrid_Factory(t) {\n        return new (t || MatChipGrid)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1$1.Directionality, 8), i0.ɵɵdirectiveInject(i2.NgForm, 8), i0.ɵɵdirectiveInject(i2.FormGroupDirective, 8), i0.ɵɵdirectiveInject(i3.ErrorStateMatcher), i0.ɵɵdirectiveInject(i2.NgControl, 10));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatChipGrid,\n        selectors: [[\"mat-chip-grid\"]],\n        contentQueries: function MatChipGrid_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, MatChipRow, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-chip-set\", \"mat-mdc-chip-grid\", \"mdc-evolution-chip-set\"],\n        hostVars: 10,\n        hostBindings: function MatChipGrid_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"focus\", function MatChipGrid_focus_HostBindingHandler() {\n              return ctx.focus();\n            })(\"blur\", function MatChipGrid_blur_HostBindingHandler() {\n              return ctx._blur();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.disabled || ctx._chips && ctx._chips.length === 0 ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState);\n            i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-invalid\", ctx.errorState)(\"mat-mdc-chip-list-required\", ctx.required);\n          }\n        },\n        inputs: {\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n          placeholder: \"placeholder\",\n          required: [2, \"required\", \"required\", booleanAttribute],\n          value: \"value\",\n          errorStateMatcher: \"errorStateMatcher\"\n        },\n        outputs: {\n          change: \"change\",\n          valueChange: \"valueChange\"\n        },\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MatFormFieldControl,\n          useExisting: MatChipGrid\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c5,\n        decls: 2,\n        vars: 0,\n        consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n        template: function MatChipGrid_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementEnd();\n          }\n        },\n        styles: [_c6],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatChipGrid;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nlet MatChipInput = /*#__PURE__*/(() => {\n  class MatChipInput {\n    /** Register input for chip list */\n    get chipGrid() {\n      return this._chipGrid;\n    }\n    set chipGrid(value) {\n      if (value) {\n        this._chipGrid = value;\n        this._chipGrid.registerInput(this);\n      }\n    }\n    /** Whether the input is disabled. */\n    get disabled() {\n      return this._disabled || this._chipGrid && this._chipGrid.disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n    }\n    /** Whether the input is empty. */\n    get empty() {\n      return !this.inputElement.value;\n    }\n    constructor(_elementRef, defaultOptions, formField) {\n      this._elementRef = _elementRef;\n      /** Whether the control is focused. */\n      this.focused = false;\n      /**\n       * Whether or not the chipEnd event will be emitted when the input is blurred.\n       */\n      this.addOnBlur = false;\n      /** Emitted when a chip is to be added. */\n      this.chipEnd = new EventEmitter();\n      /** The input's placeholder text. */\n      this.placeholder = '';\n      /** Unique id for the input. */\n      this.id = `mat-mdc-chip-list-input-${nextUniqueId++}`;\n      this._disabled = false;\n      this.inputElement = this._elementRef.nativeElement;\n      this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n      if (formField) {\n        this.inputElement.classList.add('mat-mdc-form-field-input-control');\n      }\n    }\n    ngOnChanges() {\n      this._chipGrid.stateChanges.next();\n    }\n    ngOnDestroy() {\n      this.chipEnd.complete();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n      if (this.empty && event.keyCode === BACKSPACE) {\n        // Ignore events where the user is holding down backspace\n        // so that we don't accidentally remove too many chips.\n        if (!event.repeat) {\n          this._chipGrid._focusLastChip();\n        }\n        event.preventDefault();\n      } else {\n        this._emitChipEnd(event);\n      }\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n      if (this.addOnBlur) {\n        this._emitChipEnd();\n      }\n      this.focused = false;\n      // Blur the chip list if it is not focused\n      if (!this._chipGrid.focused) {\n        this._chipGrid._blur();\n      }\n      this._chipGrid.stateChanges.next();\n    }\n    _focus() {\n      this.focused = true;\n      this._chipGrid.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n      if (!event || this._isSeparatorKey(event)) {\n        this.chipEnd.emit({\n          input: this.inputElement,\n          value: this.inputElement.value,\n          chipInput: this\n        });\n        event?.preventDefault();\n      }\n    }\n    _onInput() {\n      // Let chip list know whenever the value changes.\n      this._chipGrid.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus() {\n      this.inputElement.focus();\n    }\n    /** Clears the input */\n    clear() {\n      this.inputElement.value = '';\n    }\n    setDescribedByIds(ids) {\n      const element = this._elementRef.nativeElement;\n      // Set the value directly in the DOM since this binding\n      // is prone to \"changed after checked\" errors.\n      if (ids.length) {\n        element.setAttribute('aria-describedby', ids.join(' '));\n      } else {\n        element.removeAttribute('aria-describedby');\n      }\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n      return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n    static {\n      this.ɵfac = function MatChipInput_Factory(t) {\n        return new (t || MatChipInput)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(MAT_FORM_FIELD, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatChipInput,\n        selectors: [[\"input\", \"matChipInputFor\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-chip-input\", \"mat-mdc-input-element\", \"mdc-text-field__input\", \"mat-input-element\"],\n        hostVars: 6,\n        hostBindings: function MatChipInput_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) {\n              return ctx._keydown($event);\n            })(\"blur\", function MatChipInput_blur_HostBindingHandler() {\n              return ctx._blur();\n            })(\"focus\", function MatChipInput_focus_HostBindingHandler() {\n              return ctx._focus();\n            })(\"input\", function MatChipInput_input_HostBindingHandler() {\n              return ctx._onInput();\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipGrid && ctx._chipGrid.ngControl ? ctx._chipGrid.ngControl.invalid : null)(\"aria-required\", ctx._chipGrid && ctx._chipGrid.required || null)(\"required\", ctx._chipGrid && ctx._chipGrid.required || null);\n          }\n        },\n        inputs: {\n          chipGrid: [0, \"matChipInputFor\", \"chipGrid\"],\n          addOnBlur: [2, \"matChipInputAddOnBlur\", \"addOnBlur\", booleanAttribute],\n          separatorKeyCodes: [0, \"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"],\n          placeholder: \"placeholder\",\n          id: \"id\",\n          disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n        },\n        outputs: {\n          chipEnd: \"matChipInputTokenEnd\"\n        },\n        exportAs: [\"matChipInput\", \"matChipInputFor\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return MatChipInput;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst CHIP_DECLARATIONS = [MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipInput, MatChipListbox, MatChipOption, MatChipRemove, MatChipRow, MatChipSet, MatChipTrailingIcon];\nlet MatChipsModule = /*#__PURE__*/(() => {\n  class MatChipsModule {\n    static {\n      this.ɵfac = function MatChipsModule_Factory(t) {\n        return new (t || MatChipsModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatChipsModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [ErrorStateMatcher, {\n          provide: MAT_CHIPS_DEFAULT_OPTIONS,\n          useValue: {\n            separatorKeyCodes: [ENTER]\n          }\n        }],\n        imports: [MatCommonModule, MatRippleModule, MatCommonModule]\n      });\n    }\n  }\n  return MatChipsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\n","import * as i1 from '@angular/cdk/scrolling';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nexport { CdkScrollable, ScrollDispatcher, ViewportRuler } from '@angular/cdk/scrolling';\nimport * as i6 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, Optional, untracked, afterRender, afterNextRender, ElementRef, EnvironmentInjector, ApplicationRef, ANIMATION_MODULE_TYPE, InjectionToken, inject, Directive, NgZone, EventEmitter, booleanAttribute, Input, Output, NgModule } from '@angular/core';\nimport { coerceCssPixelValue, coerceArray } from '@angular/cdk/coercion';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { supportsScrollBehavior, _getEventTarget, _isTestEnvironment } from '@angular/cdk/platform';\nimport { filter, takeUntil, takeWhile } from 'rxjs/operators';\nimport * as i5 from '@angular/cdk/bidi';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { DomPortalOutlet, TemplatePortal, PortalModule } from '@angular/cdk/portal';\nimport { Subject, Subscription, merge } from 'rxjs';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nconst scrollBehaviorSupported = /*#__PURE__*/supportsScrollBehavior();\n/**\n * Strategy that will prevent the user from scrolling while the overlay is visible.\n */\nclass BlockScrollStrategy {\n  constructor(_viewportRuler, document) {\n    this._viewportRuler = _viewportRuler;\n    this._previousHTMLStyles = {\n      top: '',\n      left: ''\n    };\n    this._isEnabled = false;\n    this._document = document;\n  }\n  /** Attaches this scroll strategy to an overlay. */\n  attach() {}\n  /** Blocks page-level scroll while the attached overlay is open. */\n  enable() {\n    if (this._canBeEnabled()) {\n      const root = this._document.documentElement;\n      this._previousScrollPosition = this._viewportRuler.getViewportScrollPosition();\n      // Cache the previous inline styles in case the user had set them.\n      this._previousHTMLStyles.left = root.style.left || '';\n      this._previousHTMLStyles.top = root.style.top || '';\n      // Note: we're using the `html` node, instead of the `body`, because the `body` may\n      // have the user agent margin, whereas the `html` is guaranteed not to have one.\n      root.style.left = coerceCssPixelValue(-this._previousScrollPosition.left);\n      root.style.top = coerceCssPixelValue(-this._previousScrollPosition.top);\n      root.classList.add('cdk-global-scrollblock');\n      this._isEnabled = true;\n    }\n  }\n  /** Unblocks page-level scroll while the attached overlay is open. */\n  disable() {\n    if (this._isEnabled) {\n      const html = this._document.documentElement;\n      const body = this._document.body;\n      const htmlStyle = html.style;\n      const bodyStyle = body.style;\n      const previousHtmlScrollBehavior = htmlStyle.scrollBehavior || '';\n      const previousBodyScrollBehavior = bodyStyle.scrollBehavior || '';\n      this._isEnabled = false;\n      htmlStyle.left = this._previousHTMLStyles.left;\n      htmlStyle.top = this._previousHTMLStyles.top;\n      html.classList.remove('cdk-global-scrollblock');\n      // Disable user-defined smooth scrolling temporarily while we restore the scroll position.\n      // See https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n      // Note that we don't mutate the property if the browser doesn't support `scroll-behavior`,\n      // because it can throw off feature detections in `supportsScrollBehavior` which\n      // checks for `'scrollBehavior' in documentElement.style`.\n      if (scrollBehaviorSupported) {\n        htmlStyle.scrollBehavior = bodyStyle.scrollBehavior = 'auto';\n      }\n      window.scroll(this._previousScrollPosition.left, this._previousScrollPosition.top);\n      if (scrollBehaviorSupported) {\n        htmlStyle.scrollBehavior = previousHtmlScrollBehavior;\n        bodyStyle.scrollBehavior = previousBodyScrollBehavior;\n      }\n    }\n  }\n  _canBeEnabled() {\n    // Since the scroll strategies can't be singletons, we have to use a global CSS class\n    // (`cdk-global-scrollblock`) to make sure that we don't try to disable global\n    // scrolling multiple times.\n    const html = this._document.documentElement;\n    if (html.classList.contains('cdk-global-scrollblock') || this._isEnabled) {\n      return false;\n    }\n    const body = this._document.body;\n    const viewport = this._viewportRuler.getViewportSize();\n    return body.scrollHeight > viewport.height || body.scrollWidth > viewport.width;\n  }\n}\n\n/**\n * Returns an error to be thrown when attempting to attach an already-attached scroll strategy.\n */\nfunction getMatScrollStrategyAlreadyAttachedError() {\n  return Error(`Scroll strategy has already been attached.`);\n}\n\n/**\n * Strategy that will close the overlay as soon as the user starts scrolling.\n */\nclass CloseScrollStrategy {\n  constructor(_scrollDispatcher, _ngZone, _viewportRuler, _config) {\n    this._scrollDispatcher = _scrollDispatcher;\n    this._ngZone = _ngZone;\n    this._viewportRuler = _viewportRuler;\n    this._config = _config;\n    this._scrollSubscription = null;\n    /** Detaches the overlay ref and disables the scroll strategy. */\n    this._detach = () => {\n      this.disable();\n      if (this._overlayRef.hasAttached()) {\n        this._ngZone.run(() => this._overlayRef.detach());\n      }\n    };\n  }\n  /** Attaches this scroll strategy to an overlay. */\n  attach(overlayRef) {\n    if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatScrollStrategyAlreadyAttachedError();\n    }\n    this._overlayRef = overlayRef;\n  }\n  /** Enables the closing of the attached overlay on scroll. */\n  enable() {\n    if (this._scrollSubscription) {\n      return;\n    }\n    const stream = this._scrollDispatcher.scrolled(0).pipe(filter(scrollable => {\n      return !scrollable || !this._overlayRef.overlayElement.contains(scrollable.getElementRef().nativeElement);\n    }));\n    if (this._config && this._config.threshold && this._config.threshold > 1) {\n      this._initialScrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n      this._scrollSubscription = stream.subscribe(() => {\n        const scrollPosition = this._viewportRuler.getViewportScrollPosition().top;\n        if (Math.abs(scrollPosition - this._initialScrollPosition) > this._config.threshold) {\n          this._detach();\n        } else {\n          this._overlayRef.updatePosition();\n        }\n      });\n    } else {\n      this._scrollSubscription = stream.subscribe(this._detach);\n    }\n  }\n  /** Disables the closing the attached overlay on scroll. */\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n  detach() {\n    this.disable();\n    this._overlayRef = null;\n  }\n}\n\n/** Scroll strategy that doesn't do anything. */\nclass NoopScrollStrategy {\n  /** Does nothing, as this scroll strategy is a no-op. */\n  enable() {}\n  /** Does nothing, as this scroll strategy is a no-op. */\n  disable() {}\n  /** Does nothing, as this scroll strategy is a no-op. */\n  attach() {}\n}\n\n/**\n * Gets whether an element is scrolled outside of view by any of its parent scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is scrolled out of view\n * @docs-private\n */\nfunction isElementScrolledOutsideView(element, scrollContainers) {\n  return scrollContainers.some(containerBounds => {\n    const outsideAbove = element.bottom < containerBounds.top;\n    const outsideBelow = element.top > containerBounds.bottom;\n    const outsideLeft = element.right < containerBounds.left;\n    const outsideRight = element.left > containerBounds.right;\n    return outsideAbove || outsideBelow || outsideLeft || outsideRight;\n  });\n}\n/**\n * Gets whether an element is clipped by any of its scrolling containers.\n * @param element Dimensions of the element (from getBoundingClientRect)\n * @param scrollContainers Dimensions of element's scrolling containers (from getBoundingClientRect)\n * @returns Whether the element is clipped\n * @docs-private\n */\nfunction isElementClippedByScrolling(element, scrollContainers) {\n  return scrollContainers.some(scrollContainerRect => {\n    const clippedAbove = element.top < scrollContainerRect.top;\n    const clippedBelow = element.bottom > scrollContainerRect.bottom;\n    const clippedLeft = element.left < scrollContainerRect.left;\n    const clippedRight = element.right > scrollContainerRect.right;\n    return clippedAbove || clippedBelow || clippedLeft || clippedRight;\n  });\n}\n\n/**\n * Strategy that will update the element position as the user is scrolling.\n */\nclass RepositionScrollStrategy {\n  constructor(_scrollDispatcher, _viewportRuler, _ngZone, _config) {\n    this._scrollDispatcher = _scrollDispatcher;\n    this._viewportRuler = _viewportRuler;\n    this._ngZone = _ngZone;\n    this._config = _config;\n    this._scrollSubscription = null;\n  }\n  /** Attaches this scroll strategy to an overlay. */\n  attach(overlayRef) {\n    if (this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatScrollStrategyAlreadyAttachedError();\n    }\n    this._overlayRef = overlayRef;\n  }\n  /** Enables repositioning of the attached overlay on scroll. */\n  enable() {\n    if (!this._scrollSubscription) {\n      const throttle = this._config ? this._config.scrollThrottle : 0;\n      this._scrollSubscription = this._scrollDispatcher.scrolled(throttle).subscribe(() => {\n        this._overlayRef.updatePosition();\n        // TODO(crisbeto): make `close` on by default once all components can handle it.\n        if (this._config && this._config.autoClose) {\n          const overlayRect = this._overlayRef.overlayElement.getBoundingClientRect();\n          const {\n            width,\n            height\n          } = this._viewportRuler.getViewportSize();\n          // TODO(crisbeto): include all ancestor scroll containers here once\n          // we have a way of exposing the trigger element to the scroll strategy.\n          const parentRects = [{\n            width,\n            height,\n            bottom: height,\n            right: width,\n            top: 0,\n            left: 0\n          }];\n          if (isElementScrolledOutsideView(overlayRect, parentRects)) {\n            this.disable();\n            this._ngZone.run(() => this._overlayRef.detach());\n          }\n        }\n      });\n    }\n  }\n  /** Disables repositioning of the attached overlay on scroll. */\n  disable() {\n    if (this._scrollSubscription) {\n      this._scrollSubscription.unsubscribe();\n      this._scrollSubscription = null;\n    }\n  }\n  detach() {\n    this.disable();\n    this._overlayRef = null;\n  }\n}\n\n/**\n * Options for how an overlay will handle scrolling.\n *\n * Users can provide a custom value for `ScrollStrategyOptions` to replace the default\n * behaviors. This class primarily acts as a factory for ScrollStrategy instances.\n */\nlet ScrollStrategyOptions = /*#__PURE__*/(() => {\n  class ScrollStrategyOptions {\n    constructor(_scrollDispatcher, _viewportRuler, _ngZone, document) {\n      this._scrollDispatcher = _scrollDispatcher;\n      this._viewportRuler = _viewportRuler;\n      this._ngZone = _ngZone;\n      /** Do nothing on scroll. */\n      this.noop = () => new NoopScrollStrategy();\n      /**\n       * Close the overlay as soon as the user scrolls.\n       * @param config Configuration to be used inside the scroll strategy.\n       */\n      this.close = config => new CloseScrollStrategy(this._scrollDispatcher, this._ngZone, this._viewportRuler, config);\n      /** Block scrolling. */\n      this.block = () => new BlockScrollStrategy(this._viewportRuler, this._document);\n      /**\n       * Update the overlay's position on scroll.\n       * @param config Configuration to be used inside the scroll strategy.\n       * Allows debouncing the reposition calls.\n       */\n      this.reposition = config => new RepositionScrollStrategy(this._scrollDispatcher, this._viewportRuler, this._ngZone, config);\n      this._document = document;\n    }\n    static {\n      this.ɵfac = function ScrollStrategyOptions_Factory(t) {\n        return new (t || ScrollStrategyOptions)(i0.ɵɵinject(i1.ScrollDispatcher), i0.ɵɵinject(i1.ViewportRuler), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ScrollStrategyOptions,\n        factory: ScrollStrategyOptions.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ScrollStrategyOptions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Initial configuration used when creating an overlay. */\nclass OverlayConfig {\n  constructor(config) {\n    /** Strategy to be used when handling scroll events while the overlay is open. */\n    this.scrollStrategy = new NoopScrollStrategy();\n    /** Custom class to add to the overlay pane. */\n    this.panelClass = '';\n    /** Whether the overlay has a backdrop. */\n    this.hasBackdrop = false;\n    /** Custom class to add to the backdrop */\n    this.backdropClass = 'cdk-overlay-dark-backdrop';\n    /**\n     * Whether the overlay should be disposed of when the user goes backwards/forwards in history.\n     * Note that this usually doesn't include clicking on links (unless the user is using\n     * the `HashLocationStrategy`).\n     */\n    this.disposeOnNavigation = false;\n    if (config) {\n      // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n      // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n      // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n      const configKeys = Object.keys(config);\n      for (const key of configKeys) {\n        if (config[key] !== undefined) {\n          // TypeScript, as of version 3.5, sees the left-hand-side of this expression\n          // as \"I don't know *which* key this is, so the only valid value is the intersection\n          // of all the possible values.\" In this case, that happens to be `undefined`. TypeScript\n          // is not smart enough to see that the right-hand-side is actually an access of the same\n          // exact type with the same exact key, meaning that the value type must be identical.\n          // So we use `any` to work around this.\n          this[key] = config[key];\n        }\n      }\n    }\n  }\n}\n\n/** The points of the origin element and the overlay element to connect. */\nclass ConnectionPositionPair {\n  constructor(origin, overlay, /** Offset along the X axis. */\n  offsetX, /** Offset along the Y axis. */\n  offsetY, /** Class(es) to be applied to the panel while this position is active. */\n  panelClass) {\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    this.panelClass = panelClass;\n    this.originX = origin.originX;\n    this.originY = origin.originY;\n    this.overlayX = overlay.overlayX;\n    this.overlayY = overlay.overlayY;\n  }\n}\n/**\n * Set of properties regarding the position of the origin and overlay relative to the viewport\n * with respect to the containing Scrollable elements.\n *\n * The overlay and origin are clipped if any part of their bounding client rectangle exceeds the\n * bounds of any one of the strategy's Scrollable's bounding client rectangle.\n *\n * The overlay and origin are outside view if there is no overlap between their bounding client\n * rectangle and any one of the strategy's Scrollable's bounding client rectangle.\n *\n *       -----------                    -----------\n *       | outside |                    | clipped |\n *       |  view   |              --------------------------\n *       |         |              |     |         |        |\n *       ----------               |     -----------        |\n *  --------------------------    |                        |\n *  |                        |    |      Scrollable        |\n *  |                        |    |                        |\n *  |                        |     --------------------------\n *  |      Scrollable        |\n *  |                        |\n *  --------------------------\n *\n *  @docs-private\n */\nclass ScrollingVisibility {}\n/** The change event emitted by the strategy when a fallback position is used. */\nclass ConnectedOverlayPositionChange {\n  constructor( /** The position used as a result of this change. */\n  connectionPair, /** @docs-private */\n  scrollableViewProperties) {\n    this.connectionPair = connectionPair;\n    this.scrollableViewProperties = scrollableViewProperties;\n  }\n}\n/**\n * Validates whether a vertical position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateVerticalPosition(property, value) {\n  if (value !== 'top' && value !== 'bottom' && value !== 'center') {\n    throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` + `Expected \"top\", \"bottom\" or \"center\".`);\n  }\n}\n/**\n * Validates whether a horizontal position property matches the expected values.\n * @param property Name of the property being validated.\n * @param value Value of the property being validated.\n * @docs-private\n */\nfunction validateHorizontalPosition(property, value) {\n  if (value !== 'start' && value !== 'end' && value !== 'center') {\n    throw Error(`ConnectedPosition: Invalid ${property} \"${value}\". ` + `Expected \"start\", \"end\" or \"center\".`);\n  }\n}\n\n/**\n * Service for dispatching events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nlet BaseOverlayDispatcher = /*#__PURE__*/(() => {\n  class BaseOverlayDispatcher {\n    constructor(document) {\n      /** Currently attached overlays in the order they were attached. */\n      this._attachedOverlays = [];\n      this._document = document;\n    }\n    ngOnDestroy() {\n      this.detach();\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n      // Ensure that we don't get the same overlay multiple times.\n      this.remove(overlayRef);\n      this._attachedOverlays.push(overlayRef);\n    }\n    /** Remove an overlay from the list of attached overlay refs. */\n    remove(overlayRef) {\n      const index = this._attachedOverlays.indexOf(overlayRef);\n      if (index > -1) {\n        this._attachedOverlays.splice(index, 1);\n      }\n      // Remove the global listener once there are no more overlays.\n      if (this._attachedOverlays.length === 0) {\n        this.detach();\n      }\n    }\n    static {\n      this.ɵfac = function BaseOverlayDispatcher_Factory(t) {\n        return new (t || BaseOverlayDispatcher)(i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: BaseOverlayDispatcher,\n        factory: BaseOverlayDispatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return BaseOverlayDispatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Service for dispatching keyboard events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nlet OverlayKeyboardDispatcher = /*#__PURE__*/(() => {\n  class OverlayKeyboardDispatcher extends BaseOverlayDispatcher {\n    constructor(document, /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n      super(document);\n      this._ngZone = _ngZone;\n      /** Keyboard event listener that will be attached to the body. */\n      this._keydownListener = event => {\n        const overlays = this._attachedOverlays;\n        for (let i = overlays.length - 1; i > -1; i--) {\n          // Dispatch the keydown event to the top overlay which has subscribers to its keydown events.\n          // We want to target the most recent overlay, rather than trying to match where the event came\n          // from, because some components might open an overlay, but keep focus on a trigger element\n          // (e.g. for select and autocomplete). We skip overlays without keydown event subscriptions,\n          // because we don't want overlays that don't handle keyboard events to block the ones below\n          // them that do.\n          if (overlays[i]._keydownEvents.observers.length > 0) {\n            const keydownEvents = overlays[i]._keydownEvents;\n            /** @breaking-change 14.0.0 _ngZone will be required. */\n            if (this._ngZone) {\n              this._ngZone.run(() => keydownEvents.next(event));\n            } else {\n              keydownEvents.next(event);\n            }\n            break;\n          }\n        }\n      };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n      super.add(overlayRef);\n      // Lazily start dispatcher once first overlay is added\n      if (!this._isAttached) {\n        /** @breaking-change 14.0.0 _ngZone will be required. */\n        if (this._ngZone) {\n          this._ngZone.runOutsideAngular(() => this._document.body.addEventListener('keydown', this._keydownListener));\n        } else {\n          this._document.body.addEventListener('keydown', this._keydownListener);\n        }\n        this._isAttached = true;\n      }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n      if (this._isAttached) {\n        this._document.body.removeEventListener('keydown', this._keydownListener);\n        this._isAttached = false;\n      }\n    }\n    static {\n      this.ɵfac = function OverlayKeyboardDispatcher_Factory(t) {\n        return new (t || OverlayKeyboardDispatcher)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i0.NgZone, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: OverlayKeyboardDispatcher,\n        factory: OverlayKeyboardDispatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return OverlayKeyboardDispatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Service for dispatching mouse click events that land on the body to appropriate overlay ref,\n * if any. It maintains a list of attached overlays to determine best suited overlay based\n * on event target and order of overlay opens.\n */\nlet OverlayOutsideClickDispatcher = /*#__PURE__*/(() => {\n  class OverlayOutsideClickDispatcher extends BaseOverlayDispatcher {\n    constructor(document, _platform, /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n      super(document);\n      this._platform = _platform;\n      this._ngZone = _ngZone;\n      this._cursorStyleIsSet = false;\n      /** Store pointerdown event target to track origin of click. */\n      this._pointerDownListener = event => {\n        this._pointerDownEventTarget = _getEventTarget(event);\n      };\n      /** Click event listener that will be attached to the body propagate phase. */\n      this._clickListener = event => {\n        const target = _getEventTarget(event);\n        // In case of a click event, we want to check the origin of the click\n        // (e.g. in case where a user starts a click inside the overlay and\n        // releases the click outside of it).\n        // This is done by using the event target of the preceding pointerdown event.\n        // Every click event caused by a pointer device has a preceding pointerdown\n        // event, unless the click was programmatically triggered (e.g. in a unit test).\n        const origin = event.type === 'click' && this._pointerDownEventTarget ? this._pointerDownEventTarget : target;\n        // Reset the stored pointerdown event target, to avoid having it interfere\n        // in subsequent events.\n        this._pointerDownEventTarget = null;\n        // We copy the array because the original may be modified asynchronously if the\n        // outsidePointerEvents listener decides to detach overlays resulting in index errors inside\n        // the for loop.\n        const overlays = this._attachedOverlays.slice();\n        // Dispatch the mouse event to the top overlay which has subscribers to its mouse events.\n        // We want to target all overlays for which the click could be considered as outside click.\n        // As soon as we reach an overlay for which the click is not outside click we break off\n        // the loop.\n        for (let i = overlays.length - 1; i > -1; i--) {\n          const overlayRef = overlays[i];\n          if (overlayRef._outsidePointerEvents.observers.length < 1 || !overlayRef.hasAttached()) {\n            continue;\n          }\n          // If it's a click inside the overlay, just break - we should do nothing\n          // If it's an outside click (both origin and target of the click) dispatch the mouse event,\n          // and proceed with the next overlay\n          if (containsPierceShadowDom(overlayRef.overlayElement, target) || containsPierceShadowDom(overlayRef.overlayElement, origin)) {\n            break;\n          }\n          const outsidePointerEvents = overlayRef._outsidePointerEvents;\n          /** @breaking-change 14.0.0 _ngZone will be required. */\n          if (this._ngZone) {\n            this._ngZone.run(() => outsidePointerEvents.next(event));\n          } else {\n            outsidePointerEvents.next(event);\n          }\n        }\n      };\n    }\n    /** Add a new overlay to the list of attached overlay refs. */\n    add(overlayRef) {\n      super.add(overlayRef);\n      // Safari on iOS does not generate click events for non-interactive\n      // elements. However, we want to receive a click for any element outside\n      // the overlay. We can force a \"clickable\" state by setting\n      // `cursor: pointer` on the document body. See:\n      // https://developer.mozilla.org/en-US/docs/Web/API/Element/click_event#Safari_Mobile\n      // https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/HandlingEvents/HandlingEvents.html\n      if (!this._isAttached) {\n        const body = this._document.body;\n        /** @breaking-change 14.0.0 _ngZone will be required. */\n        if (this._ngZone) {\n          this._ngZone.runOutsideAngular(() => this._addEventListeners(body));\n        } else {\n          this._addEventListeners(body);\n        }\n        // click event is not fired on iOS. To make element \"clickable\" we are\n        // setting the cursor to pointer\n        if (this._platform.IOS && !this._cursorStyleIsSet) {\n          this._cursorOriginalValue = body.style.cursor;\n          body.style.cursor = 'pointer';\n          this._cursorStyleIsSet = true;\n        }\n        this._isAttached = true;\n      }\n    }\n    /** Detaches the global keyboard event listener. */\n    detach() {\n      if (this._isAttached) {\n        const body = this._document.body;\n        body.removeEventListener('pointerdown', this._pointerDownListener, true);\n        body.removeEventListener('click', this._clickListener, true);\n        body.removeEventListener('auxclick', this._clickListener, true);\n        body.removeEventListener('contextmenu', this._clickListener, true);\n        if (this._platform.IOS && this._cursorStyleIsSet) {\n          body.style.cursor = this._cursorOriginalValue;\n          this._cursorStyleIsSet = false;\n        }\n        this._isAttached = false;\n      }\n    }\n    _addEventListeners(body) {\n      body.addEventListener('pointerdown', this._pointerDownListener, true);\n      body.addEventListener('click', this._clickListener, true);\n      body.addEventListener('auxclick', this._clickListener, true);\n      body.addEventListener('contextmenu', this._clickListener, true);\n    }\n    static {\n      this.ɵfac = function OverlayOutsideClickDispatcher_Factory(t) {\n        return new (t || OverlayOutsideClickDispatcher)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Platform), i0.ɵɵinject(i0.NgZone, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: OverlayOutsideClickDispatcher,\n        factory: OverlayOutsideClickDispatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return OverlayOutsideClickDispatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Version of `Element.contains` that transcends shadow DOM boundaries. */\nfunction containsPierceShadowDom(parent, child) {\n  const supportsShadowRoot = typeof ShadowRoot !== 'undefined' && ShadowRoot;\n  let current = child;\n  while (current) {\n    if (current === parent) {\n      return true;\n    }\n    current = supportsShadowRoot && current instanceof ShadowRoot ? current.host : current.parentNode;\n  }\n  return false;\n}\n\n/** Container inside which all overlays will render. */\nlet OverlayContainer = /*#__PURE__*/(() => {\n  class OverlayContainer {\n    constructor(document, _platform) {\n      this._platform = _platform;\n      this._document = document;\n    }\n    ngOnDestroy() {\n      this._containerElement?.remove();\n    }\n    /**\n     * This method returns the overlay container element. It will lazily\n     * create the element the first time it is called to facilitate using\n     * the container in non-browser environments.\n     * @returns the container element\n     */\n    getContainerElement() {\n      if (!this._containerElement) {\n        this._createContainer();\n      }\n      return this._containerElement;\n    }\n    /**\n     * Create the overlay container element, which is simply a div\n     * with the 'cdk-overlay-container' class on the document body.\n     */\n    _createContainer() {\n      const containerClass = 'cdk-overlay-container';\n      // TODO(crisbeto): remove the testing check once we have an overlay testing\n      // module or Angular starts tearing down the testing `NgModule`. See:\n      // https://github.com/angular/angular/issues/18831\n      if (this._platform.isBrowser || _isTestEnvironment()) {\n        const oppositePlatformContainers = this._document.querySelectorAll(`.${containerClass}[platform=\"server\"], ` + `.${containerClass}[platform=\"test\"]`);\n        // Remove any old containers from the opposite platform.\n        // This can happen when transitioning from the server to the client.\n        for (let i = 0; i < oppositePlatformContainers.length; i++) {\n          oppositePlatformContainers[i].remove();\n        }\n      }\n      const container = this._document.createElement('div');\n      container.classList.add(containerClass);\n      // A long time ago we kept adding new overlay containers whenever a new app was instantiated,\n      // but at some point we added logic which clears the duplicate ones in order to avoid leaks.\n      // The new logic was a little too aggressive since it was breaking some legitimate use cases.\n      // To mitigate the problem we made it so that only containers from a different platform are\n      // cleared, but the side-effect was that people started depending on the overly-aggressive\n      // logic to clean up their tests for them. Until we can introduce an overlay-specific testing\n      // module which does the cleanup, we try to detect that we're in a test environment and we\n      // always clear the container. See #17006.\n      // TODO(crisbeto): remove the test environment check once we have an overlay testing module.\n      if (_isTestEnvironment()) {\n        container.setAttribute('platform', 'test');\n      } else if (!this._platform.isBrowser) {\n        container.setAttribute('platform', 'server');\n      }\n      this._document.body.appendChild(container);\n      this._containerElement = container;\n    }\n    static {\n      this.ɵfac = function OverlayContainer_Factory(t) {\n        return new (t || OverlayContainer)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Platform));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: OverlayContainer,\n        factory: OverlayContainer.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return OverlayContainer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Reference to an overlay that has been created with the Overlay service.\n * Used to manipulate or dispose of said overlay.\n */\nclass OverlayRef {\n  constructor(_portalOutlet, _host, _pane, _config, _ngZone, _keyboardDispatcher, _document, _location, _outsideClickDispatcher, _animationsDisabled = false, _injector) {\n    this._portalOutlet = _portalOutlet;\n    this._host = _host;\n    this._pane = _pane;\n    this._config = _config;\n    this._ngZone = _ngZone;\n    this._keyboardDispatcher = _keyboardDispatcher;\n    this._document = _document;\n    this._location = _location;\n    this._outsideClickDispatcher = _outsideClickDispatcher;\n    this._animationsDisabled = _animationsDisabled;\n    this._injector = _injector;\n    this._backdropElement = null;\n    this._backdropClick = new Subject();\n    this._attachments = new Subject();\n    this._detachments = new Subject();\n    this._locationChanges = Subscription.EMPTY;\n    this._backdropClickHandler = event => this._backdropClick.next(event);\n    this._backdropTransitionendHandler = event => {\n      this._disposeBackdrop(event.target);\n    };\n    /** Stream of keydown events dispatched to this overlay. */\n    this._keydownEvents = new Subject();\n    /** Stream of mouse outside events dispatched to this overlay. */\n    this._outsidePointerEvents = new Subject();\n    this._renders = new Subject();\n    if (_config.scrollStrategy) {\n      this._scrollStrategy = _config.scrollStrategy;\n      this._scrollStrategy.attach(this);\n    }\n    this._positionStrategy = _config.positionStrategy;\n    // Users could open the overlay from an `effect`, in which case we need to\n    // run the `afterRender` as `untracked`. We don't recommend that users do\n    // this, but we also don't want to break users who are doing it.\n    this._afterRenderRef = untracked(() => afterRender(() => {\n      this._renders.next();\n    }, {\n      injector: this._injector\n    }));\n  }\n  /** The overlay's HTML element */\n  get overlayElement() {\n    return this._pane;\n  }\n  /** The overlay's backdrop HTML element. */\n  get backdropElement() {\n    return this._backdropElement;\n  }\n  /**\n   * Wrapper around the panel element. Can be used for advanced\n   * positioning where a wrapper with specific styling is\n   * required around the overlay pane.\n   */\n  get hostElement() {\n    return this._host;\n  }\n  /**\n   * Attaches content, given via a Portal, to the overlay.\n   * If the overlay is configured to have a backdrop, it will be created.\n   *\n   * @param portal Portal instance to which to attach the overlay.\n   * @returns The portal attachment result.\n   */\n  attach(portal) {\n    // Insert the host into the DOM before attaching the portal, otherwise\n    // the animations module will skip animations on repeat attachments.\n    if (!this._host.parentElement && this._previousHostParent) {\n      this._previousHostParent.appendChild(this._host);\n    }\n    const attachResult = this._portalOutlet.attach(portal);\n    if (this._positionStrategy) {\n      this._positionStrategy.attach(this);\n    }\n    this._updateStackingOrder();\n    this._updateElementSize();\n    this._updateElementDirection();\n    if (this._scrollStrategy) {\n      this._scrollStrategy.enable();\n    }\n    // Update the position once the overlay is fully rendered before attempting to position it,\n    // as the position may depend on the size of the rendered content.\n    afterNextRender(() => {\n      // The overlay could've been detached before the callback executed.\n      if (this.hasAttached()) {\n        this.updatePosition();\n      }\n    }, {\n      injector: this._injector\n    });\n    // Enable pointer events for the overlay pane element.\n    this._togglePointerEvents(true);\n    if (this._config.hasBackdrop) {\n      this._attachBackdrop();\n    }\n    if (this._config.panelClass) {\n      this._toggleClasses(this._pane, this._config.panelClass, true);\n    }\n    // Only emit the `attachments` event once all other setup is done.\n    this._attachments.next();\n    // Track this overlay by the keyboard dispatcher\n    this._keyboardDispatcher.add(this);\n    if (this._config.disposeOnNavigation) {\n      this._locationChanges = this._location.subscribe(() => this.dispose());\n    }\n    this._outsideClickDispatcher.add(this);\n    // TODO(crisbeto): the null check is here, because the portal outlet returns `any`.\n    // We should be guaranteed for the result to be `ComponentRef | EmbeddedViewRef`, but\n    // `instanceof EmbeddedViewRef` doesn't appear to work at the moment.\n    if (typeof attachResult?.onDestroy === 'function') {\n      // In most cases we control the portal and we know when it is being detached so that\n      // we can finish the disposal process. The exception is if the user passes in a custom\n      // `ViewContainerRef` that isn't destroyed through the overlay API. Note that we use\n      // `detach` here instead of `dispose`, because we don't know if the user intends to\n      // reattach the overlay at a later point. It also has the advantage of waiting for animations.\n      attachResult.onDestroy(() => {\n        if (this.hasAttached()) {\n          // We have to delay the `detach` call, because detaching immediately prevents\n          // other destroy hooks from running. This is likely a framework bug similar to\n          // https://github.com/angular/angular/issues/46119\n          this._ngZone.runOutsideAngular(() => Promise.resolve().then(() => this.detach()));\n        }\n      });\n    }\n    return attachResult;\n  }\n  /**\n   * Detaches an overlay from a portal.\n   * @returns The portal detachment result.\n   */\n  detach() {\n    if (!this.hasAttached()) {\n      return;\n    }\n    this.detachBackdrop();\n    // When the overlay is detached, the pane element should disable pointer events.\n    // This is necessary because otherwise the pane element will cover the page and disable\n    // pointer events therefore. Depends on the position strategy and the applied pane boundaries.\n    this._togglePointerEvents(false);\n    if (this._positionStrategy && this._positionStrategy.detach) {\n      this._positionStrategy.detach();\n    }\n    if (this._scrollStrategy) {\n      this._scrollStrategy.disable();\n    }\n    const detachmentResult = this._portalOutlet.detach();\n    // Only emit after everything is detached.\n    this._detachments.next();\n    // Remove this overlay from keyboard dispatcher tracking.\n    this._keyboardDispatcher.remove(this);\n    // Keeping the host element in the DOM can cause scroll jank, because it still gets\n    // rendered, even though it's transparent and unclickable which is why we remove it.\n    this._detachContentWhenEmpty();\n    this._locationChanges.unsubscribe();\n    this._outsideClickDispatcher.remove(this);\n    return detachmentResult;\n  }\n  /** Cleans up the overlay from the DOM. */\n  dispose() {\n    const isAttached = this.hasAttached();\n    if (this._positionStrategy) {\n      this._positionStrategy.dispose();\n    }\n    this._disposeScrollStrategy();\n    this._disposeBackdrop(this._backdropElement);\n    this._locationChanges.unsubscribe();\n    this._keyboardDispatcher.remove(this);\n    this._portalOutlet.dispose();\n    this._attachments.complete();\n    this._backdropClick.complete();\n    this._keydownEvents.complete();\n    this._outsidePointerEvents.complete();\n    this._outsideClickDispatcher.remove(this);\n    this._host?.remove();\n    this._previousHostParent = this._pane = this._host = null;\n    if (isAttached) {\n      this._detachments.next();\n    }\n    this._detachments.complete();\n    this._afterRenderRef.destroy();\n    this._renders.complete();\n  }\n  /** Whether the overlay has attached content. */\n  hasAttached() {\n    return this._portalOutlet.hasAttached();\n  }\n  /** Gets an observable that emits when the backdrop has been clicked. */\n  backdropClick() {\n    return this._backdropClick;\n  }\n  /** Gets an observable that emits when the overlay has been attached. */\n  attachments() {\n    return this._attachments;\n  }\n  /** Gets an observable that emits when the overlay has been detached. */\n  detachments() {\n    return this._detachments;\n  }\n  /** Gets an observable of keydown events targeted to this overlay. */\n  keydownEvents() {\n    return this._keydownEvents;\n  }\n  /** Gets an observable of pointer events targeted outside this overlay. */\n  outsidePointerEvents() {\n    return this._outsidePointerEvents;\n  }\n  /** Gets the current overlay configuration, which is immutable. */\n  getConfig() {\n    return this._config;\n  }\n  /** Updates the position of the overlay based on the position strategy. */\n  updatePosition() {\n    if (this._positionStrategy) {\n      this._positionStrategy.apply();\n    }\n  }\n  /** Switches to a new position strategy and updates the overlay position. */\n  updatePositionStrategy(strategy) {\n    if (strategy === this._positionStrategy) {\n      return;\n    }\n    if (this._positionStrategy) {\n      this._positionStrategy.dispose();\n    }\n    this._positionStrategy = strategy;\n    if (this.hasAttached()) {\n      strategy.attach(this);\n      this.updatePosition();\n    }\n  }\n  /** Update the size properties of the overlay. */\n  updateSize(sizeConfig) {\n    this._config = {\n      ...this._config,\n      ...sizeConfig\n    };\n    this._updateElementSize();\n  }\n  /** Sets the LTR/RTL direction for the overlay. */\n  setDirection(dir) {\n    this._config = {\n      ...this._config,\n      direction: dir\n    };\n    this._updateElementDirection();\n  }\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes) {\n    if (this._pane) {\n      this._toggleClasses(this._pane, classes, true);\n    }\n  }\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes) {\n    if (this._pane) {\n      this._toggleClasses(this._pane, classes, false);\n    }\n  }\n  /**\n   * Returns the layout direction of the overlay panel.\n   */\n  getDirection() {\n    const direction = this._config.direction;\n    if (!direction) {\n      return 'ltr';\n    }\n    return typeof direction === 'string' ? direction : direction.value;\n  }\n  /** Switches to a new scroll strategy. */\n  updateScrollStrategy(strategy) {\n    if (strategy === this._scrollStrategy) {\n      return;\n    }\n    this._disposeScrollStrategy();\n    this._scrollStrategy = strategy;\n    if (this.hasAttached()) {\n      strategy.attach(this);\n      strategy.enable();\n    }\n  }\n  /** Updates the text direction of the overlay panel. */\n  _updateElementDirection() {\n    this._host.setAttribute('dir', this.getDirection());\n  }\n  /** Updates the size of the overlay element based on the overlay config. */\n  _updateElementSize() {\n    if (!this._pane) {\n      return;\n    }\n    const style = this._pane.style;\n    style.width = coerceCssPixelValue(this._config.width);\n    style.height = coerceCssPixelValue(this._config.height);\n    style.minWidth = coerceCssPixelValue(this._config.minWidth);\n    style.minHeight = coerceCssPixelValue(this._config.minHeight);\n    style.maxWidth = coerceCssPixelValue(this._config.maxWidth);\n    style.maxHeight = coerceCssPixelValue(this._config.maxHeight);\n  }\n  /** Toggles the pointer events for the overlay pane element. */\n  _togglePointerEvents(enablePointer) {\n    this._pane.style.pointerEvents = enablePointer ? '' : 'none';\n  }\n  /** Attaches a backdrop for this overlay. */\n  _attachBackdrop() {\n    const showingClass = 'cdk-overlay-backdrop-showing';\n    this._backdropElement = this._document.createElement('div');\n    this._backdropElement.classList.add('cdk-overlay-backdrop');\n    if (this._animationsDisabled) {\n      this._backdropElement.classList.add('cdk-overlay-backdrop-noop-animation');\n    }\n    if (this._config.backdropClass) {\n      this._toggleClasses(this._backdropElement, this._config.backdropClass, true);\n    }\n    // Insert the backdrop before the pane in the DOM order,\n    // in order to handle stacked overlays properly.\n    this._host.parentElement.insertBefore(this._backdropElement, this._host);\n    // Forward backdrop clicks such that the consumer of the overlay can perform whatever\n    // action desired when such a click occurs (usually closing the overlay).\n    this._backdropElement.addEventListener('click', this._backdropClickHandler);\n    // Add class to fade-in the backdrop after one frame.\n    if (!this._animationsDisabled && typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => {\n          if (this._backdropElement) {\n            this._backdropElement.classList.add(showingClass);\n          }\n        });\n      });\n    } else {\n      this._backdropElement.classList.add(showingClass);\n    }\n  }\n  /**\n   * Updates the stacking order of the element, moving it to the top if necessary.\n   * This is required in cases where one overlay was detached, while another one,\n   * that should be behind it, was destroyed. The next time both of them are opened,\n   * the stacking will be wrong, because the detached element's pane will still be\n   * in its original DOM position.\n   */\n  _updateStackingOrder() {\n    if (this._host.nextSibling) {\n      this._host.parentNode.appendChild(this._host);\n    }\n  }\n  /** Detaches the backdrop (if any) associated with the overlay. */\n  detachBackdrop() {\n    const backdropToDetach = this._backdropElement;\n    if (!backdropToDetach) {\n      return;\n    }\n    if (this._animationsDisabled) {\n      this._disposeBackdrop(backdropToDetach);\n      return;\n    }\n    backdropToDetach.classList.remove('cdk-overlay-backdrop-showing');\n    this._ngZone.runOutsideAngular(() => {\n      backdropToDetach.addEventListener('transitionend', this._backdropTransitionendHandler);\n    });\n    // If the backdrop doesn't have a transition, the `transitionend` event won't fire.\n    // In this case we make it unclickable and we try to remove it after a delay.\n    backdropToDetach.style.pointerEvents = 'none';\n    // Run this outside the Angular zone because there's nothing that Angular cares about.\n    // If it were to run inside the Angular zone, every test that used Overlay would have to be\n    // either async or fakeAsync.\n    this._backdropTimeout = this._ngZone.runOutsideAngular(() => setTimeout(() => {\n      this._disposeBackdrop(backdropToDetach);\n    }, 500));\n  }\n  /** Toggles a single CSS class or an array of classes on an element. */\n  _toggleClasses(element, cssClasses, isAdd) {\n    const classes = coerceArray(cssClasses || []).filter(c => !!c);\n    if (classes.length) {\n      isAdd ? element.classList.add(...classes) : element.classList.remove(...classes);\n    }\n  }\n  /** Detaches the overlay content next time the zone stabilizes. */\n  _detachContentWhenEmpty() {\n    // Normally we wouldn't have to explicitly run this outside the `NgZone`, however\n    // if the consumer is using `zone-patch-rxjs`, the `Subscription.unsubscribe` call will\n    // be patched to run inside the zone, which will throw us into an infinite loop.\n    this._ngZone.runOutsideAngular(() => {\n      // We can't remove the host here immediately, because the overlay pane's content\n      // might still be animating. This stream helps us avoid interrupting the animation\n      // by waiting for the pane to become empty.\n      const subscription = this._renders.pipe(takeUntil(merge(this._attachments, this._detachments))).subscribe(() => {\n        // Needs a couple of checks for the pane and host, because\n        // they may have been removed by the time the zone stabilizes.\n        if (!this._pane || !this._host || this._pane.children.length === 0) {\n          if (this._pane && this._config.panelClass) {\n            this._toggleClasses(this._pane, this._config.panelClass, false);\n          }\n          if (this._host && this._host.parentElement) {\n            this._previousHostParent = this._host.parentElement;\n            this._host.remove();\n          }\n          subscription.unsubscribe();\n        }\n      });\n    });\n  }\n  /** Disposes of a scroll strategy. */\n  _disposeScrollStrategy() {\n    const scrollStrategy = this._scrollStrategy;\n    if (scrollStrategy) {\n      scrollStrategy.disable();\n      if (scrollStrategy.detach) {\n        scrollStrategy.detach();\n      }\n    }\n  }\n  /** Removes a backdrop element from the DOM. */\n  _disposeBackdrop(backdrop) {\n    if (backdrop) {\n      backdrop.removeEventListener('click', this._backdropClickHandler);\n      backdrop.removeEventListener('transitionend', this._backdropTransitionendHandler);\n      backdrop.remove();\n      // It is possible that a new portal has been attached to this overlay since we started\n      // removing the backdrop. If that is the case, only clear the backdrop reference if it\n      // is still the same instance that we started to remove.\n      if (this._backdropElement === backdrop) {\n        this._backdropElement = null;\n      }\n    }\n    if (this._backdropTimeout) {\n      clearTimeout(this._backdropTimeout);\n      this._backdropTimeout = undefined;\n    }\n  }\n}\n\n// TODO: refactor clipping detection into a separate thing (part of scrolling module)\n// TODO: doesn't handle both flexible width and height when it has to scroll along both axis.\n/** Class to be added to the overlay bounding box. */\nconst boundingBoxClass = 'cdk-overlay-connected-position-bounding-box';\n/** Regex used to split a string on its CSS units. */\nconst cssUnitPattern = /([A-Za-z%]+)$/;\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * implicit position relative some origin element. The relative position is defined in terms of\n * a point on the origin element that is connected to a point on the overlay element. For example,\n * a basic dropdown is connecting the bottom-left corner of the origin to the top-left corner\n * of the overlay.\n */\nclass FlexibleConnectedPositionStrategy {\n  /** Ordered list of preferred positions, from most to least desirable. */\n  get positions() {\n    return this._preferredPositions;\n  }\n  constructor(connectedTo, _viewportRuler, _document, _platform, _overlayContainer) {\n    this._viewportRuler = _viewportRuler;\n    this._document = _document;\n    this._platform = _platform;\n    this._overlayContainer = _overlayContainer;\n    /** Last size used for the bounding box. Used to avoid resizing the overlay after open. */\n    this._lastBoundingBoxSize = {\n      width: 0,\n      height: 0\n    };\n    /** Whether the overlay was pushed in a previous positioning. */\n    this._isPushed = false;\n    /** Whether the overlay can be pushed on-screen on the initial open. */\n    this._canPush = true;\n    /** Whether the overlay can grow via flexible width/height after the initial open. */\n    this._growAfterOpen = false;\n    /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n    this._hasFlexibleDimensions = true;\n    /** Whether the overlay position is locked. */\n    this._positionLocked = false;\n    /** Amount of space that must be maintained between the overlay and the edge of the viewport. */\n    this._viewportMargin = 0;\n    /** The Scrollable containers used to check scrollable view properties on position change. */\n    this._scrollables = [];\n    /** Ordered list of preferred positions, from most to least desirable. */\n    this._preferredPositions = [];\n    /** Subject that emits whenever the position changes. */\n    this._positionChanges = new Subject();\n    /** Subscription to viewport size changes. */\n    this._resizeSubscription = Subscription.EMPTY;\n    /** Default offset for the overlay along the x axis. */\n    this._offsetX = 0;\n    /** Default offset for the overlay along the y axis. */\n    this._offsetY = 0;\n    /** Keeps track of the CSS classes that the position strategy has applied on the overlay panel. */\n    this._appliedPanelClasses = [];\n    /** Observable sequence of position changes. */\n    this.positionChanges = this._positionChanges;\n    this.setOrigin(connectedTo);\n  }\n  /** Attaches this position strategy to an overlay. */\n  attach(overlayRef) {\n    if (this._overlayRef && overlayRef !== this._overlayRef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('This position strategy is already attached to an overlay');\n    }\n    this._validatePositions();\n    overlayRef.hostElement.classList.add(boundingBoxClass);\n    this._overlayRef = overlayRef;\n    this._boundingBox = overlayRef.hostElement;\n    this._pane = overlayRef.overlayElement;\n    this._isDisposed = false;\n    this._isInitialRender = true;\n    this._lastPosition = null;\n    this._resizeSubscription.unsubscribe();\n    this._resizeSubscription = this._viewportRuler.change().subscribe(() => {\n      // When the window is resized, we want to trigger the next reposition as if it\n      // was an initial render, in order for the strategy to pick a new optimal position,\n      // otherwise position locking will cause it to stay at the old one.\n      this._isInitialRender = true;\n      this.apply();\n    });\n  }\n  /**\n   * Updates the position of the overlay element, using whichever preferred position relative\n   * to the origin best fits on-screen.\n   *\n   * The selection of a position goes as follows:\n   *  - If any positions fit completely within the viewport as-is,\n   *      choose the first position that does so.\n   *  - If flexible dimensions are enabled and at least one satisfies the given minimum width/height,\n   *      choose the position with the greatest available size modified by the positions' weight.\n   *  - If pushing is enabled, take the position that went off-screen the least and push it\n   *      on-screen.\n   *  - If none of the previous criteria were met, use the position that goes off-screen the least.\n   * @docs-private\n   */\n  apply() {\n    // We shouldn't do anything if the strategy was disposed or we're on the server.\n    if (this._isDisposed || !this._platform.isBrowser) {\n      return;\n    }\n    // If the position has been applied already (e.g. when the overlay was opened) and the\n    // consumer opted into locking in the position, re-use the old position, in order to\n    // prevent the overlay from jumping around.\n    if (!this._isInitialRender && this._positionLocked && this._lastPosition) {\n      this.reapplyLastPosition();\n      return;\n    }\n    this._clearPanelClasses();\n    this._resetOverlayElementStyles();\n    this._resetBoundingBoxStyles();\n    // We need the bounding rects for the origin, the overlay and the container to determine how to position\n    // the overlay relative to the origin.\n    // We use the viewport rect to determine whether a position would go off-screen.\n    this._viewportRect = this._getNarrowedViewportRect();\n    this._originRect = this._getOriginRect();\n    this._overlayRect = this._pane.getBoundingClientRect();\n    this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n    const originRect = this._originRect;\n    const overlayRect = this._overlayRect;\n    const viewportRect = this._viewportRect;\n    const containerRect = this._containerRect;\n    // Positions where the overlay will fit with flexible dimensions.\n    const flexibleFits = [];\n    // Fallback if none of the preferred positions fit within the viewport.\n    let fallback;\n    // Go through each of the preferred positions looking for a good fit.\n    // If a good fit is found, it will be applied immediately.\n    for (let pos of this._preferredPositions) {\n      // Get the exact (x, y) coordinate for the point-of-origin on the origin element.\n      let originPoint = this._getOriginPoint(originRect, containerRect, pos);\n      // From that point-of-origin, get the exact (x, y) coordinate for the top-left corner of the\n      // overlay in this position. We use the top-left corner for calculations and later translate\n      // this into an appropriate (top, left, bottom, right) style.\n      let overlayPoint = this._getOverlayPoint(originPoint, overlayRect, pos);\n      // Calculate how well the overlay would fit into the viewport with this point.\n      let overlayFit = this._getOverlayFit(overlayPoint, overlayRect, viewportRect, pos);\n      // If the overlay, without any further work, fits into the viewport, use this position.\n      if (overlayFit.isCompletelyWithinViewport) {\n        this._isPushed = false;\n        this._applyPosition(pos, originPoint);\n        return;\n      }\n      // If the overlay has flexible dimensions, we can use this position\n      // so long as there's enough space for the minimum dimensions.\n      if (this._canFitWithFlexibleDimensions(overlayFit, overlayPoint, viewportRect)) {\n        // Save positions where the overlay will fit with flexible dimensions. We will use these\n        // if none of the positions fit *without* flexible dimensions.\n        flexibleFits.push({\n          position: pos,\n          origin: originPoint,\n          overlayRect,\n          boundingBoxRect: this._calculateBoundingBoxRect(originPoint, pos)\n        });\n        continue;\n      }\n      // If the current preferred position does not fit on the screen, remember the position\n      // if it has more visible area on-screen than we've seen and move onto the next preferred\n      // position.\n      if (!fallback || fallback.overlayFit.visibleArea < overlayFit.visibleArea) {\n        fallback = {\n          overlayFit,\n          overlayPoint,\n          originPoint,\n          position: pos,\n          overlayRect\n        };\n      }\n    }\n    // If there are any positions where the overlay would fit with flexible dimensions, choose the\n    // one that has the greatest area available modified by the position's weight\n    if (flexibleFits.length) {\n      let bestFit = null;\n      let bestScore = -1;\n      for (const fit of flexibleFits) {\n        const score = fit.boundingBoxRect.width * fit.boundingBoxRect.height * (fit.position.weight || 1);\n        if (score > bestScore) {\n          bestScore = score;\n          bestFit = fit;\n        }\n      }\n      this._isPushed = false;\n      this._applyPosition(bestFit.position, bestFit.origin);\n      return;\n    }\n    // When none of the preferred positions fit within the viewport, take the position\n    // that went off-screen the least and attempt to push it on-screen.\n    if (this._canPush) {\n      // TODO(jelbourn): after pushing, the opening \"direction\" of the overlay might not make sense.\n      this._isPushed = true;\n      this._applyPosition(fallback.position, fallback.originPoint);\n      return;\n    }\n    // All options for getting the overlay within the viewport have been exhausted, so go with the\n    // position that went off-screen the least.\n    this._applyPosition(fallback.position, fallback.originPoint);\n  }\n  detach() {\n    this._clearPanelClasses();\n    this._lastPosition = null;\n    this._previousPushAmount = null;\n    this._resizeSubscription.unsubscribe();\n  }\n  /** Cleanup after the element gets destroyed. */\n  dispose() {\n    if (this._isDisposed) {\n      return;\n    }\n    // We can't use `_resetBoundingBoxStyles` here, because it resets\n    // some properties to zero, rather than removing them.\n    if (this._boundingBox) {\n      extendStyles(this._boundingBox.style, {\n        top: '',\n        left: '',\n        right: '',\n        bottom: '',\n        height: '',\n        width: '',\n        alignItems: '',\n        justifyContent: ''\n      });\n    }\n    if (this._pane) {\n      this._resetOverlayElementStyles();\n    }\n    if (this._overlayRef) {\n      this._overlayRef.hostElement.classList.remove(boundingBoxClass);\n    }\n    this.detach();\n    this._positionChanges.complete();\n    this._overlayRef = this._boundingBox = null;\n    this._isDisposed = true;\n  }\n  /**\n   * This re-aligns the overlay element with the trigger in its last calculated position,\n   * even if a position higher in the \"preferred positions\" list would now fit. This\n   * allows one to re-align the panel without changing the orientation of the panel.\n   */\n  reapplyLastPosition() {\n    if (this._isDisposed || !this._platform.isBrowser) {\n      return;\n    }\n    const lastPosition = this._lastPosition;\n    if (lastPosition) {\n      this._originRect = this._getOriginRect();\n      this._overlayRect = this._pane.getBoundingClientRect();\n      this._viewportRect = this._getNarrowedViewportRect();\n      this._containerRect = this._overlayContainer.getContainerElement().getBoundingClientRect();\n      const originPoint = this._getOriginPoint(this._originRect, this._containerRect, lastPosition);\n      this._applyPosition(lastPosition, originPoint);\n    } else {\n      this.apply();\n    }\n  }\n  /**\n   * Sets the list of Scrollable containers that host the origin element so that\n   * on reposition we can evaluate if it or the overlay has been clipped or outside view. Every\n   * Scrollable must be an ancestor element of the strategy's origin element.\n   */\n  withScrollableContainers(scrollables) {\n    this._scrollables = scrollables;\n    return this;\n  }\n  /**\n   * Adds new preferred positions.\n   * @param positions List of positions options for this overlay.\n   */\n  withPositions(positions) {\n    this._preferredPositions = positions;\n    // If the last calculated position object isn't part of the positions anymore, clear\n    // it in order to avoid it being picked up if the consumer tries to re-apply.\n    if (positions.indexOf(this._lastPosition) === -1) {\n      this._lastPosition = null;\n    }\n    this._validatePositions();\n    return this;\n  }\n  /**\n   * Sets a minimum distance the overlay may be positioned to the edge of the viewport.\n   * @param margin Required margin between the overlay and the viewport edge in pixels.\n   */\n  withViewportMargin(margin) {\n    this._viewportMargin = margin;\n    return this;\n  }\n  /** Sets whether the overlay's width and height can be constrained to fit within the viewport. */\n  withFlexibleDimensions(flexibleDimensions = true) {\n    this._hasFlexibleDimensions = flexibleDimensions;\n    return this;\n  }\n  /** Sets whether the overlay can grow after the initial open via flexible width/height. */\n  withGrowAfterOpen(growAfterOpen = true) {\n    this._growAfterOpen = growAfterOpen;\n    return this;\n  }\n  /** Sets whether the overlay can be pushed on-screen if none of the provided positions fit. */\n  withPush(canPush = true) {\n    this._canPush = canPush;\n    return this;\n  }\n  /**\n   * Sets whether the overlay's position should be locked in after it is positioned\n   * initially. When an overlay is locked in, it won't attempt to reposition itself\n   * when the position is re-applied (e.g. when the user scrolls away).\n   * @param isLocked Whether the overlay should locked in.\n   */\n  withLockedPosition(isLocked = true) {\n    this._positionLocked = isLocked;\n    return this;\n  }\n  /**\n   * Sets the origin, relative to which to position the overlay.\n   * Using an element origin is useful for building components that need to be positioned\n   * relatively to a trigger (e.g. dropdown menus or tooltips), whereas using a point can be\n   * used for cases like contextual menus which open relative to the user's pointer.\n   * @param origin Reference to the new origin.\n   */\n  setOrigin(origin) {\n    this._origin = origin;\n    return this;\n  }\n  /**\n   * Sets the default offset for the overlay's connection point on the x-axis.\n   * @param offset New offset in the X axis.\n   */\n  withDefaultOffsetX(offset) {\n    this._offsetX = offset;\n    return this;\n  }\n  /**\n   * Sets the default offset for the overlay's connection point on the y-axis.\n   * @param offset New offset in the Y axis.\n   */\n  withDefaultOffsetY(offset) {\n    this._offsetY = offset;\n    return this;\n  }\n  /**\n   * Configures that the position strategy should set a `transform-origin` on some elements\n   * inside the overlay, depending on the current position that is being applied. This is\n   * useful for the cases where the origin of an animation can change depending on the\n   * alignment of the overlay.\n   * @param selector CSS selector that will be used to find the target\n   *    elements onto which to set the transform origin.\n   */\n  withTransformOriginOn(selector) {\n    this._transformOriginSelector = selector;\n    return this;\n  }\n  /**\n   * Gets the (x, y) coordinate of a connection point on the origin based on a relative position.\n   */\n  _getOriginPoint(originRect, containerRect, pos) {\n    let x;\n    if (pos.originX == 'center') {\n      // Note: when centering we should always use the `left`\n      // offset, otherwise the position will be wrong in RTL.\n      x = originRect.left + originRect.width / 2;\n    } else {\n      const startX = this._isRtl() ? originRect.right : originRect.left;\n      const endX = this._isRtl() ? originRect.left : originRect.right;\n      x = pos.originX == 'start' ? startX : endX;\n    }\n    // When zooming in Safari the container rectangle contains negative values for the position\n    // and we need to re-add them to the calculated coordinates.\n    if (containerRect.left < 0) {\n      x -= containerRect.left;\n    }\n    let y;\n    if (pos.originY == 'center') {\n      y = originRect.top + originRect.height / 2;\n    } else {\n      y = pos.originY == 'top' ? originRect.top : originRect.bottom;\n    }\n    // Normally the containerRect's top value would be zero, however when the overlay is attached to an input\n    // (e.g. in an autocomplete), mobile browsers will shift everything in order to put the input in the middle\n    // of the screen and to make space for the virtual keyboard. We need to account for this offset,\n    // otherwise our positioning will be thrown off.\n    // Additionally, when zooming in Safari this fixes the vertical position.\n    if (containerRect.top < 0) {\n      y -= containerRect.top;\n    }\n    return {\n      x,\n      y\n    };\n  }\n  /**\n   * Gets the (x, y) coordinate of the top-left corner of the overlay given a given position and\n   * origin point to which the overlay should be connected.\n   */\n  _getOverlayPoint(originPoint, overlayRect, pos) {\n    // Calculate the (overlayStartX, overlayStartY), the start of the\n    // potential overlay position relative to the origin point.\n    let overlayStartX;\n    if (pos.overlayX == 'center') {\n      overlayStartX = -overlayRect.width / 2;\n    } else if (pos.overlayX === 'start') {\n      overlayStartX = this._isRtl() ? -overlayRect.width : 0;\n    } else {\n      overlayStartX = this._isRtl() ? 0 : -overlayRect.width;\n    }\n    let overlayStartY;\n    if (pos.overlayY == 'center') {\n      overlayStartY = -overlayRect.height / 2;\n    } else {\n      overlayStartY = pos.overlayY == 'top' ? 0 : -overlayRect.height;\n    }\n    // The (x, y) coordinates of the overlay.\n    return {\n      x: originPoint.x + overlayStartX,\n      y: originPoint.y + overlayStartY\n    };\n  }\n  /** Gets how well an overlay at the given point will fit within the viewport. */\n  _getOverlayFit(point, rawOverlayRect, viewport, position) {\n    // Round the overlay rect when comparing against the\n    // viewport, because the viewport is always rounded.\n    const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n    let {\n      x,\n      y\n    } = point;\n    let offsetX = this._getOffset(position, 'x');\n    let offsetY = this._getOffset(position, 'y');\n    // Account for the offsets since they could push the overlay out of the viewport.\n    if (offsetX) {\n      x += offsetX;\n    }\n    if (offsetY) {\n      y += offsetY;\n    }\n    // How much the overlay would overflow at this position, on each side.\n    let leftOverflow = 0 - x;\n    let rightOverflow = x + overlay.width - viewport.width;\n    let topOverflow = 0 - y;\n    let bottomOverflow = y + overlay.height - viewport.height;\n    // Visible parts of the element on each axis.\n    let visibleWidth = this._subtractOverflows(overlay.width, leftOverflow, rightOverflow);\n    let visibleHeight = this._subtractOverflows(overlay.height, topOverflow, bottomOverflow);\n    let visibleArea = visibleWidth * visibleHeight;\n    return {\n      visibleArea,\n      isCompletelyWithinViewport: overlay.width * overlay.height === visibleArea,\n      fitsInViewportVertically: visibleHeight === overlay.height,\n      fitsInViewportHorizontally: visibleWidth == overlay.width\n    };\n  }\n  /**\n   * Whether the overlay can fit within the viewport when it may resize either its width or height.\n   * @param fit How well the overlay fits in the viewport at some position.\n   * @param point The (x, y) coordinates of the overlay at some position.\n   * @param viewport The geometry of the viewport.\n   */\n  _canFitWithFlexibleDimensions(fit, point, viewport) {\n    if (this._hasFlexibleDimensions) {\n      const availableHeight = viewport.bottom - point.y;\n      const availableWidth = viewport.right - point.x;\n      const minHeight = getPixelValue(this._overlayRef.getConfig().minHeight);\n      const minWidth = getPixelValue(this._overlayRef.getConfig().minWidth);\n      const verticalFit = fit.fitsInViewportVertically || minHeight != null && minHeight <= availableHeight;\n      const horizontalFit = fit.fitsInViewportHorizontally || minWidth != null && minWidth <= availableWidth;\n      return verticalFit && horizontalFit;\n    }\n    return false;\n  }\n  /**\n   * Gets the point at which the overlay can be \"pushed\" on-screen. If the overlay is larger than\n   * the viewport, the top-left corner will be pushed on-screen (with overflow occurring on the\n   * right and bottom).\n   *\n   * @param start Starting point from which the overlay is pushed.\n   * @param rawOverlayRect Dimensions of the overlay.\n   * @param scrollPosition Current viewport scroll position.\n   * @returns The point at which to position the overlay after pushing. This is effectively a new\n   *     originPoint.\n   */\n  _pushOverlayOnScreen(start, rawOverlayRect, scrollPosition) {\n    // If the position is locked and we've pushed the overlay already, reuse the previous push\n    // amount, rather than pushing it again. If we were to continue pushing, the element would\n    // remain in the viewport, which goes against the expectations when position locking is enabled.\n    if (this._previousPushAmount && this._positionLocked) {\n      return {\n        x: start.x + this._previousPushAmount.x,\n        y: start.y + this._previousPushAmount.y\n      };\n    }\n    // Round the overlay rect when comparing against the\n    // viewport, because the viewport is always rounded.\n    const overlay = getRoundedBoundingClientRect(rawOverlayRect);\n    const viewport = this._viewportRect;\n    // Determine how much the overlay goes outside the viewport on each\n    // side, which we'll use to decide which direction to push it.\n    const overflowRight = Math.max(start.x + overlay.width - viewport.width, 0);\n    const overflowBottom = Math.max(start.y + overlay.height - viewport.height, 0);\n    const overflowTop = Math.max(viewport.top - scrollPosition.top - start.y, 0);\n    const overflowLeft = Math.max(viewport.left - scrollPosition.left - start.x, 0);\n    // Amount by which to push the overlay in each axis such that it remains on-screen.\n    let pushX = 0;\n    let pushY = 0;\n    // If the overlay fits completely within the bounds of the viewport, push it from whichever\n    // direction is goes off-screen. Otherwise, push the top-left corner such that its in the\n    // viewport and allow for the trailing end of the overlay to go out of bounds.\n    if (overlay.width <= viewport.width) {\n      pushX = overflowLeft || -overflowRight;\n    } else {\n      pushX = start.x < this._viewportMargin ? viewport.left - scrollPosition.left - start.x : 0;\n    }\n    if (overlay.height <= viewport.height) {\n      pushY = overflowTop || -overflowBottom;\n    } else {\n      pushY = start.y < this._viewportMargin ? viewport.top - scrollPosition.top - start.y : 0;\n    }\n    this._previousPushAmount = {\n      x: pushX,\n      y: pushY\n    };\n    return {\n      x: start.x + pushX,\n      y: start.y + pushY\n    };\n  }\n  /**\n   * Applies a computed position to the overlay and emits a position change.\n   * @param position The position preference\n   * @param originPoint The point on the origin element where the overlay is connected.\n   */\n  _applyPosition(position, originPoint) {\n    this._setTransformOrigin(position);\n    this._setOverlayElementStyles(originPoint, position);\n    this._setBoundingBoxStyles(originPoint, position);\n    if (position.panelClass) {\n      this._addPanelClasses(position.panelClass);\n    }\n    // Notify that the position has been changed along with its change properties.\n    // We only emit if we've got any subscriptions, because the scroll visibility\n    // calculations can be somewhat expensive.\n    if (this._positionChanges.observers.length) {\n      const scrollVisibility = this._getScrollVisibility();\n      // We're recalculating on scroll, but we only want to emit if anything\n      // changed since downstream code might be hitting the `NgZone`.\n      if (position !== this._lastPosition || !this._lastScrollVisibility || !compareScrollVisibility(this._lastScrollVisibility, scrollVisibility)) {\n        const changeEvent = new ConnectedOverlayPositionChange(position, scrollVisibility);\n        this._positionChanges.next(changeEvent);\n      }\n      this._lastScrollVisibility = scrollVisibility;\n    }\n    // Save the last connected position in case the position needs to be re-calculated.\n    this._lastPosition = position;\n    this._isInitialRender = false;\n  }\n  /** Sets the transform origin based on the configured selector and the passed-in position.  */\n  _setTransformOrigin(position) {\n    if (!this._transformOriginSelector) {\n      return;\n    }\n    const elements = this._boundingBox.querySelectorAll(this._transformOriginSelector);\n    let xOrigin;\n    let yOrigin = position.overlayY;\n    if (position.overlayX === 'center') {\n      xOrigin = 'center';\n    } else if (this._isRtl()) {\n      xOrigin = position.overlayX === 'start' ? 'right' : 'left';\n    } else {\n      xOrigin = position.overlayX === 'start' ? 'left' : 'right';\n    }\n    for (let i = 0; i < elements.length; i++) {\n      elements[i].style.transformOrigin = `${xOrigin} ${yOrigin}`;\n    }\n  }\n  /**\n   * Gets the position and size of the overlay's sizing container.\n   *\n   * This method does no measuring and applies no styles so that we can cheaply compute the\n   * bounds for all positions and choose the best fit based on these results.\n   */\n  _calculateBoundingBoxRect(origin, position) {\n    const viewport = this._viewportRect;\n    const isRtl = this._isRtl();\n    let height, top, bottom;\n    if (position.overlayY === 'top') {\n      // Overlay is opening \"downward\" and thus is bound by the bottom viewport edge.\n      top = origin.y;\n      height = viewport.height - top + this._viewportMargin;\n    } else if (position.overlayY === 'bottom') {\n      // Overlay is opening \"upward\" and thus is bound by the top viewport edge. We need to add\n      // the viewport margin back in, because the viewport rect is narrowed down to remove the\n      // margin, whereas the `origin` position is calculated based on its `DOMRect`.\n      bottom = viewport.height - origin.y + this._viewportMargin * 2;\n      height = viewport.height - bottom + this._viewportMargin;\n    } else {\n      // If neither top nor bottom, it means that the overlay is vertically centered on the\n      // origin point. Note that we want the position relative to the viewport, rather than\n      // the page, which is why we don't use something like `viewport.bottom - origin.y` and\n      // `origin.y - viewport.top`.\n      const smallestDistanceToViewportEdge = Math.min(viewport.bottom - origin.y + viewport.top, origin.y);\n      const previousHeight = this._lastBoundingBoxSize.height;\n      height = smallestDistanceToViewportEdge * 2;\n      top = origin.y - smallestDistanceToViewportEdge;\n      if (height > previousHeight && !this._isInitialRender && !this._growAfterOpen) {\n        top = origin.y - previousHeight / 2;\n      }\n    }\n    // The overlay is opening 'right-ward' (the content flows to the right).\n    const isBoundedByRightViewportEdge = position.overlayX === 'start' && !isRtl || position.overlayX === 'end' && isRtl;\n    // The overlay is opening 'left-ward' (the content flows to the left).\n    const isBoundedByLeftViewportEdge = position.overlayX === 'end' && !isRtl || position.overlayX === 'start' && isRtl;\n    let width, left, right;\n    if (isBoundedByLeftViewportEdge) {\n      right = viewport.width - origin.x + this._viewportMargin * 2;\n      width = origin.x - this._viewportMargin;\n    } else if (isBoundedByRightViewportEdge) {\n      left = origin.x;\n      width = viewport.right - origin.x;\n    } else {\n      // If neither start nor end, it means that the overlay is horizontally centered on the\n      // origin point. Note that we want the position relative to the viewport, rather than\n      // the page, which is why we don't use something like `viewport.right - origin.x` and\n      // `origin.x - viewport.left`.\n      const smallestDistanceToViewportEdge = Math.min(viewport.right - origin.x + viewport.left, origin.x);\n      const previousWidth = this._lastBoundingBoxSize.width;\n      width = smallestDistanceToViewportEdge * 2;\n      left = origin.x - smallestDistanceToViewportEdge;\n      if (width > previousWidth && !this._isInitialRender && !this._growAfterOpen) {\n        left = origin.x - previousWidth / 2;\n      }\n    }\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right,\n      width,\n      height\n    };\n  }\n  /**\n   * Sets the position and size of the overlay's sizing wrapper. The wrapper is positioned on the\n   * origin's connection point and stretches to the bounds of the viewport.\n   *\n   * @param origin The point on the origin element where the overlay is connected.\n   * @param position The position preference\n   */\n  _setBoundingBoxStyles(origin, position) {\n    const boundingBoxRect = this._calculateBoundingBoxRect(origin, position);\n    // It's weird if the overlay *grows* while scrolling, so we take the last size into account\n    // when applying a new size.\n    if (!this._isInitialRender && !this._growAfterOpen) {\n      boundingBoxRect.height = Math.min(boundingBoxRect.height, this._lastBoundingBoxSize.height);\n      boundingBoxRect.width = Math.min(boundingBoxRect.width, this._lastBoundingBoxSize.width);\n    }\n    const styles = {};\n    if (this._hasExactPosition()) {\n      styles.top = styles.left = '0';\n      styles.bottom = styles.right = styles.maxHeight = styles.maxWidth = '';\n      styles.width = styles.height = '100%';\n    } else {\n      const maxHeight = this._overlayRef.getConfig().maxHeight;\n      const maxWidth = this._overlayRef.getConfig().maxWidth;\n      styles.height = coerceCssPixelValue(boundingBoxRect.height);\n      styles.top = coerceCssPixelValue(boundingBoxRect.top);\n      styles.bottom = coerceCssPixelValue(boundingBoxRect.bottom);\n      styles.width = coerceCssPixelValue(boundingBoxRect.width);\n      styles.left = coerceCssPixelValue(boundingBoxRect.left);\n      styles.right = coerceCssPixelValue(boundingBoxRect.right);\n      // Push the pane content towards the proper direction.\n      if (position.overlayX === 'center') {\n        styles.alignItems = 'center';\n      } else {\n        styles.alignItems = position.overlayX === 'end' ? 'flex-end' : 'flex-start';\n      }\n      if (position.overlayY === 'center') {\n        styles.justifyContent = 'center';\n      } else {\n        styles.justifyContent = position.overlayY === 'bottom' ? 'flex-end' : 'flex-start';\n      }\n      if (maxHeight) {\n        styles.maxHeight = coerceCssPixelValue(maxHeight);\n      }\n      if (maxWidth) {\n        styles.maxWidth = coerceCssPixelValue(maxWidth);\n      }\n    }\n    this._lastBoundingBoxSize = boundingBoxRect;\n    extendStyles(this._boundingBox.style, styles);\n  }\n  /** Resets the styles for the bounding box so that a new positioning can be computed. */\n  _resetBoundingBoxStyles() {\n    extendStyles(this._boundingBox.style, {\n      top: '0',\n      left: '0',\n      right: '0',\n      bottom: '0',\n      height: '',\n      width: '',\n      alignItems: '',\n      justifyContent: ''\n    });\n  }\n  /** Resets the styles for the overlay pane so that a new positioning can be computed. */\n  _resetOverlayElementStyles() {\n    extendStyles(this._pane.style, {\n      top: '',\n      left: '',\n      bottom: '',\n      right: '',\n      position: '',\n      transform: ''\n    });\n  }\n  /** Sets positioning styles to the overlay element. */\n  _setOverlayElementStyles(originPoint, position) {\n    const styles = {};\n    const hasExactPosition = this._hasExactPosition();\n    const hasFlexibleDimensions = this._hasFlexibleDimensions;\n    const config = this._overlayRef.getConfig();\n    if (hasExactPosition) {\n      const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n      extendStyles(styles, this._getExactOverlayY(position, originPoint, scrollPosition));\n      extendStyles(styles, this._getExactOverlayX(position, originPoint, scrollPosition));\n    } else {\n      styles.position = 'static';\n    }\n    // Use a transform to apply the offsets. We do this because the `center` positions rely on\n    // being in the normal flex flow and setting a `top` / `left` at all will completely throw\n    // off the position. We also can't use margins, because they won't have an effect in some\n    // cases where the element doesn't have anything to \"push off of\". Finally, this works\n    // better both with flexible and non-flexible positioning.\n    let transformString = '';\n    let offsetX = this._getOffset(position, 'x');\n    let offsetY = this._getOffset(position, 'y');\n    if (offsetX) {\n      transformString += `translateX(${offsetX}px) `;\n    }\n    if (offsetY) {\n      transformString += `translateY(${offsetY}px)`;\n    }\n    styles.transform = transformString.trim();\n    // If a maxWidth or maxHeight is specified on the overlay, we remove them. We do this because\n    // we need these values to both be set to \"100%\" for the automatic flexible sizing to work.\n    // The maxHeight and maxWidth are set on the boundingBox in order to enforce the constraint.\n    // Note that this doesn't apply when we have an exact position, in which case we do want to\n    // apply them because they'll be cleared from the bounding box.\n    if (config.maxHeight) {\n      if (hasExactPosition) {\n        styles.maxHeight = coerceCssPixelValue(config.maxHeight);\n      } else if (hasFlexibleDimensions) {\n        styles.maxHeight = '';\n      }\n    }\n    if (config.maxWidth) {\n      if (hasExactPosition) {\n        styles.maxWidth = coerceCssPixelValue(config.maxWidth);\n      } else if (hasFlexibleDimensions) {\n        styles.maxWidth = '';\n      }\n    }\n    extendStyles(this._pane.style, styles);\n  }\n  /** Gets the exact top/bottom for the overlay when not using flexible sizing or when pushing. */\n  _getExactOverlayY(position, originPoint, scrollPosition) {\n    // Reset any existing styles. This is necessary in case the\n    // preferred position has changed since the last `apply`.\n    let styles = {\n      top: '',\n      bottom: ''\n    };\n    let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n    if (this._isPushed) {\n      overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n    }\n    // We want to set either `top` or `bottom` based on whether the overlay wants to appear\n    // above or below the origin and the direction in which the element will expand.\n    if (position.overlayY === 'bottom') {\n      // When using `bottom`, we adjust the y position such that it is the distance\n      // from the bottom of the viewport rather than the top.\n      const documentHeight = this._document.documentElement.clientHeight;\n      styles.bottom = `${documentHeight - (overlayPoint.y + this._overlayRect.height)}px`;\n    } else {\n      styles.top = coerceCssPixelValue(overlayPoint.y);\n    }\n    return styles;\n  }\n  /** Gets the exact left/right for the overlay when not using flexible sizing or when pushing. */\n  _getExactOverlayX(position, originPoint, scrollPosition) {\n    // Reset any existing styles. This is necessary in case the preferred position has\n    // changed since the last `apply`.\n    let styles = {\n      left: '',\n      right: ''\n    };\n    let overlayPoint = this._getOverlayPoint(originPoint, this._overlayRect, position);\n    if (this._isPushed) {\n      overlayPoint = this._pushOverlayOnScreen(overlayPoint, this._overlayRect, scrollPosition);\n    }\n    // We want to set either `left` or `right` based on whether the overlay wants to appear \"before\"\n    // or \"after\" the origin, which determines the direction in which the element will expand.\n    // For the horizontal axis, the meaning of \"before\" and \"after\" change based on whether the\n    // page is in RTL or LTR.\n    let horizontalStyleProperty;\n    if (this._isRtl()) {\n      horizontalStyleProperty = position.overlayX === 'end' ? 'left' : 'right';\n    } else {\n      horizontalStyleProperty = position.overlayX === 'end' ? 'right' : 'left';\n    }\n    // When we're setting `right`, we adjust the x position such that it is the distance\n    // from the right edge of the viewport rather than the left edge.\n    if (horizontalStyleProperty === 'right') {\n      const documentWidth = this._document.documentElement.clientWidth;\n      styles.right = `${documentWidth - (overlayPoint.x + this._overlayRect.width)}px`;\n    } else {\n      styles.left = coerceCssPixelValue(overlayPoint.x);\n    }\n    return styles;\n  }\n  /**\n   * Gets the view properties of the trigger and overlay, including whether they are clipped\n   * or completely outside the view of any of the strategy's scrollables.\n   */\n  _getScrollVisibility() {\n    // Note: needs fresh rects since the position could've changed.\n    const originBounds = this._getOriginRect();\n    const overlayBounds = this._pane.getBoundingClientRect();\n    // TODO(jelbourn): instead of needing all of the client rects for these scrolling containers\n    // every time, we should be able to use the scrollTop of the containers if the size of those\n    // containers hasn't changed.\n    const scrollContainerBounds = this._scrollables.map(scrollable => {\n      return scrollable.getElementRef().nativeElement.getBoundingClientRect();\n    });\n    return {\n      isOriginClipped: isElementClippedByScrolling(originBounds, scrollContainerBounds),\n      isOriginOutsideView: isElementScrolledOutsideView(originBounds, scrollContainerBounds),\n      isOverlayClipped: isElementClippedByScrolling(overlayBounds, scrollContainerBounds),\n      isOverlayOutsideView: isElementScrolledOutsideView(overlayBounds, scrollContainerBounds)\n    };\n  }\n  /** Subtracts the amount that an element is overflowing on an axis from its length. */\n  _subtractOverflows(length, ...overflows) {\n    return overflows.reduce((currentValue, currentOverflow) => {\n      return currentValue - Math.max(currentOverflow, 0);\n    }, length);\n  }\n  /** Narrows the given viewport rect by the current _viewportMargin. */\n  _getNarrowedViewportRect() {\n    // We recalculate the viewport rect here ourselves, rather than using the ViewportRuler,\n    // because we want to use the `clientWidth` and `clientHeight` as the base. The difference\n    // being that the client properties don't include the scrollbar, as opposed to `innerWidth`\n    // and `innerHeight` that do. This is necessary, because the overlay container uses\n    // 100% `width` and `height` which don't include the scrollbar either.\n    const width = this._document.documentElement.clientWidth;\n    const height = this._document.documentElement.clientHeight;\n    const scrollPosition = this._viewportRuler.getViewportScrollPosition();\n    return {\n      top: scrollPosition.top + this._viewportMargin,\n      left: scrollPosition.left + this._viewportMargin,\n      right: scrollPosition.left + width - this._viewportMargin,\n      bottom: scrollPosition.top + height - this._viewportMargin,\n      width: width - 2 * this._viewportMargin,\n      height: height - 2 * this._viewportMargin\n    };\n  }\n  /** Whether the we're dealing with an RTL context */\n  _isRtl() {\n    return this._overlayRef.getDirection() === 'rtl';\n  }\n  /** Determines whether the overlay uses exact or flexible positioning. */\n  _hasExactPosition() {\n    return !this._hasFlexibleDimensions || this._isPushed;\n  }\n  /** Retrieves the offset of a position along the x or y axis. */\n  _getOffset(position, axis) {\n    if (axis === 'x') {\n      // We don't do something like `position['offset' + axis]` in\n      // order to avoid breaking minifiers that rename properties.\n      return position.offsetX == null ? this._offsetX : position.offsetX;\n    }\n    return position.offsetY == null ? this._offsetY : position.offsetY;\n  }\n  /** Validates that the current position match the expected values. */\n  _validatePositions() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._preferredPositions.length) {\n        throw Error('FlexibleConnectedPositionStrategy: At least one position is required.');\n      }\n      // TODO(crisbeto): remove these once Angular's template type\n      // checking is advanced enough to catch these cases.\n      this._preferredPositions.forEach(pair => {\n        validateHorizontalPosition('originX', pair.originX);\n        validateVerticalPosition('originY', pair.originY);\n        validateHorizontalPosition('overlayX', pair.overlayX);\n        validateVerticalPosition('overlayY', pair.overlayY);\n      });\n    }\n  }\n  /** Adds a single CSS class or an array of classes on the overlay panel. */\n  _addPanelClasses(cssClasses) {\n    if (this._pane) {\n      coerceArray(cssClasses).forEach(cssClass => {\n        if (cssClass !== '' && this._appliedPanelClasses.indexOf(cssClass) === -1) {\n          this._appliedPanelClasses.push(cssClass);\n          this._pane.classList.add(cssClass);\n        }\n      });\n    }\n  }\n  /** Clears the classes that the position strategy has applied from the overlay panel. */\n  _clearPanelClasses() {\n    if (this._pane) {\n      this._appliedPanelClasses.forEach(cssClass => {\n        this._pane.classList.remove(cssClass);\n      });\n      this._appliedPanelClasses = [];\n    }\n  }\n  /** Returns the DOMRect of the current origin. */\n  _getOriginRect() {\n    const origin = this._origin;\n    if (origin instanceof ElementRef) {\n      return origin.nativeElement.getBoundingClientRect();\n    }\n    // Check for Element so SVG elements are also supported.\n    if (origin instanceof Element) {\n      return origin.getBoundingClientRect();\n    }\n    const width = origin.width || 0;\n    const height = origin.height || 0;\n    // If the origin is a point, return a client rect as if it was a 0x0 element at the point.\n    return {\n      top: origin.y,\n      bottom: origin.y + height,\n      left: origin.x,\n      right: origin.x + width,\n      height,\n      width\n    };\n  }\n}\n/** Shallow-extends a stylesheet object with another stylesheet object. */\nfunction extendStyles(destination, source) {\n  for (let key in source) {\n    if (source.hasOwnProperty(key)) {\n      destination[key] = source[key];\n    }\n  }\n  return destination;\n}\n/**\n * Extracts the pixel value as a number from a value, if it's a number\n * or a CSS pixel string (e.g. `1337px`). Otherwise returns null.\n */\nfunction getPixelValue(input) {\n  if (typeof input !== 'number' && input != null) {\n    const [value, units] = input.split(cssUnitPattern);\n    return !units || units === 'px' ? parseFloat(value) : null;\n  }\n  return input || null;\n}\n/**\n * Gets a version of an element's bounding `DOMRect` where all the values are rounded down to\n * the nearest pixel. This allows us to account for the cases where there may be sub-pixel\n * deviations in the `DOMRect` returned by the browser (e.g. when zoomed in with a percentage\n * size, see #21350).\n */\nfunction getRoundedBoundingClientRect(clientRect) {\n  return {\n    top: Math.floor(clientRect.top),\n    right: Math.floor(clientRect.right),\n    bottom: Math.floor(clientRect.bottom),\n    left: Math.floor(clientRect.left),\n    width: Math.floor(clientRect.width),\n    height: Math.floor(clientRect.height)\n  };\n}\n/** Returns whether two `ScrollingVisibility` objects are identical. */\nfunction compareScrollVisibility(a, b) {\n  if (a === b) {\n    return true;\n  }\n  return a.isOriginClipped === b.isOriginClipped && a.isOriginOutsideView === b.isOriginOutsideView && a.isOverlayClipped === b.isOverlayClipped && a.isOverlayOutsideView === b.isOverlayOutsideView;\n}\nconst STANDARD_DROPDOWN_BELOW_POSITIONS = [{\n  originX: 'start',\n  originY: 'bottom',\n  overlayX: 'start',\n  overlayY: 'top'\n}, {\n  originX: 'start',\n  originY: 'top',\n  overlayX: 'start',\n  overlayY: 'bottom'\n}, {\n  originX: 'end',\n  originY: 'bottom',\n  overlayX: 'end',\n  overlayY: 'top'\n}, {\n  originX: 'end',\n  originY: 'top',\n  overlayX: 'end',\n  overlayY: 'bottom'\n}];\nconst STANDARD_DROPDOWN_ADJACENT_POSITIONS = [{\n  originX: 'end',\n  originY: 'top',\n  overlayX: 'start',\n  overlayY: 'top'\n}, {\n  originX: 'end',\n  originY: 'bottom',\n  overlayX: 'start',\n  overlayY: 'bottom'\n}, {\n  originX: 'start',\n  originY: 'top',\n  overlayX: 'end',\n  overlayY: 'top'\n}, {\n  originX: 'start',\n  originY: 'bottom',\n  overlayX: 'end',\n  overlayY: 'bottom'\n}];\n\n/** Class to be added to the overlay pane wrapper. */\nconst wrapperClass = 'cdk-global-overlay-wrapper';\n/**\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\n * explicit position relative to the browser's viewport. We use flexbox, instead of\n * transforms, in order to avoid issues with subpixel rendering which can cause the\n * element to become blurry.\n */\nclass GlobalPositionStrategy {\n  constructor() {\n    this._cssPosition = 'static';\n    this._topOffset = '';\n    this._bottomOffset = '';\n    this._alignItems = '';\n    this._xPosition = '';\n    this._xOffset = '';\n    this._width = '';\n    this._height = '';\n    this._isDisposed = false;\n  }\n  attach(overlayRef) {\n    const config = overlayRef.getConfig();\n    this._overlayRef = overlayRef;\n    if (this._width && !config.width) {\n      overlayRef.updateSize({\n        width: this._width\n      });\n    }\n    if (this._height && !config.height) {\n      overlayRef.updateSize({\n        height: this._height\n      });\n    }\n    overlayRef.hostElement.classList.add(wrapperClass);\n    this._isDisposed = false;\n  }\n  /**\n   * Sets the top position of the overlay. Clears any previously set vertical position.\n   * @param value New top offset.\n   */\n  top(value = '') {\n    this._bottomOffset = '';\n    this._topOffset = value;\n    this._alignItems = 'flex-start';\n    return this;\n  }\n  /**\n   * Sets the left position of the overlay. Clears any previously set horizontal position.\n   * @param value New left offset.\n   */\n  left(value = '') {\n    this._xOffset = value;\n    this._xPosition = 'left';\n    return this;\n  }\n  /**\n   * Sets the bottom position of the overlay. Clears any previously set vertical position.\n   * @param value New bottom offset.\n   */\n  bottom(value = '') {\n    this._topOffset = '';\n    this._bottomOffset = value;\n    this._alignItems = 'flex-end';\n    return this;\n  }\n  /**\n   * Sets the right position of the overlay. Clears any previously set horizontal position.\n   * @param value New right offset.\n   */\n  right(value = '') {\n    this._xOffset = value;\n    this._xPosition = 'right';\n    return this;\n  }\n  /**\n   * Sets the overlay to the start of the viewport, depending on the overlay direction.\n   * This will be to the left in LTR layouts and to the right in RTL.\n   * @param offset Offset from the edge of the screen.\n   */\n  start(value = '') {\n    this._xOffset = value;\n    this._xPosition = 'start';\n    return this;\n  }\n  /**\n   * Sets the overlay to the end of the viewport, depending on the overlay direction.\n   * This will be to the right in LTR layouts and to the left in RTL.\n   * @param offset Offset from the edge of the screen.\n   */\n  end(value = '') {\n    this._xOffset = value;\n    this._xPosition = 'end';\n    return this;\n  }\n  /**\n   * Sets the overlay width and clears any previously set width.\n   * @param value New width for the overlay\n   * @deprecated Pass the `width` through the `OverlayConfig`.\n   * @breaking-change 8.0.0\n   */\n  width(value = '') {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({\n        width: value\n      });\n    } else {\n      this._width = value;\n    }\n    return this;\n  }\n  /**\n   * Sets the overlay height and clears any previously set height.\n   * @param value New height for the overlay\n   * @deprecated Pass the `height` through the `OverlayConfig`.\n   * @breaking-change 8.0.0\n   */\n  height(value = '') {\n    if (this._overlayRef) {\n      this._overlayRef.updateSize({\n        height: value\n      });\n    } else {\n      this._height = value;\n    }\n    return this;\n  }\n  /**\n   * Centers the overlay horizontally with an optional offset.\n   * Clears any previously set horizontal position.\n   *\n   * @param offset Overlay offset from the horizontal center.\n   */\n  centerHorizontally(offset = '') {\n    this.left(offset);\n    this._xPosition = 'center';\n    return this;\n  }\n  /**\n   * Centers the overlay vertically with an optional offset.\n   * Clears any previously set vertical position.\n   *\n   * @param offset Overlay offset from the vertical center.\n   */\n  centerVertically(offset = '') {\n    this.top(offset);\n    this._alignItems = 'center';\n    return this;\n  }\n  /**\n   * Apply the position to the element.\n   * @docs-private\n   */\n  apply() {\n    // Since the overlay ref applies the strategy asynchronously, it could\n    // have been disposed before it ends up being applied. If that is the\n    // case, we shouldn't do anything.\n    if (!this._overlayRef || !this._overlayRef.hasAttached()) {\n      return;\n    }\n    const styles = this._overlayRef.overlayElement.style;\n    const parentStyles = this._overlayRef.hostElement.style;\n    const config = this._overlayRef.getConfig();\n    const {\n      width,\n      height,\n      maxWidth,\n      maxHeight\n    } = config;\n    const shouldBeFlushHorizontally = (width === '100%' || width === '100vw') && (!maxWidth || maxWidth === '100%' || maxWidth === '100vw');\n    const shouldBeFlushVertically = (height === '100%' || height === '100vh') && (!maxHeight || maxHeight === '100%' || maxHeight === '100vh');\n    const xPosition = this._xPosition;\n    const xOffset = this._xOffset;\n    const isRtl = this._overlayRef.getConfig().direction === 'rtl';\n    let marginLeft = '';\n    let marginRight = '';\n    let justifyContent = '';\n    if (shouldBeFlushHorizontally) {\n      justifyContent = 'flex-start';\n    } else if (xPosition === 'center') {\n      justifyContent = 'center';\n      if (isRtl) {\n        marginRight = xOffset;\n      } else {\n        marginLeft = xOffset;\n      }\n    } else if (isRtl) {\n      if (xPosition === 'left' || xPosition === 'end') {\n        justifyContent = 'flex-end';\n        marginLeft = xOffset;\n      } else if (xPosition === 'right' || xPosition === 'start') {\n        justifyContent = 'flex-start';\n        marginRight = xOffset;\n      }\n    } else if (xPosition === 'left' || xPosition === 'start') {\n      justifyContent = 'flex-start';\n      marginLeft = xOffset;\n    } else if (xPosition === 'right' || xPosition === 'end') {\n      justifyContent = 'flex-end';\n      marginRight = xOffset;\n    }\n    styles.position = this._cssPosition;\n    styles.marginLeft = shouldBeFlushHorizontally ? '0' : marginLeft;\n    styles.marginTop = shouldBeFlushVertically ? '0' : this._topOffset;\n    styles.marginBottom = this._bottomOffset;\n    styles.marginRight = shouldBeFlushHorizontally ? '0' : marginRight;\n    parentStyles.justifyContent = justifyContent;\n    parentStyles.alignItems = shouldBeFlushVertically ? 'flex-start' : this._alignItems;\n  }\n  /**\n   * Cleans up the DOM changes from the position strategy.\n   * @docs-private\n   */\n  dispose() {\n    if (this._isDisposed || !this._overlayRef) {\n      return;\n    }\n    const styles = this._overlayRef.overlayElement.style;\n    const parent = this._overlayRef.hostElement;\n    const parentStyles = parent.style;\n    parent.classList.remove(wrapperClass);\n    parentStyles.justifyContent = parentStyles.alignItems = styles.marginTop = styles.marginBottom = styles.marginLeft = styles.marginRight = styles.position = '';\n    this._overlayRef = null;\n    this._isDisposed = true;\n  }\n}\n\n/** Builder for overlay position strategy. */\nlet OverlayPositionBuilder = /*#__PURE__*/(() => {\n  class OverlayPositionBuilder {\n    constructor(_viewportRuler, _document, _platform, _overlayContainer) {\n      this._viewportRuler = _viewportRuler;\n      this._document = _document;\n      this._platform = _platform;\n      this._overlayContainer = _overlayContainer;\n    }\n    /**\n     * Creates a global position strategy.\n     */\n    global() {\n      return new GlobalPositionStrategy();\n    }\n    /**\n     * Creates a flexible position strategy.\n     * @param origin Origin relative to which to position the overlay.\n     */\n    flexibleConnectedTo(origin) {\n      return new FlexibleConnectedPositionStrategy(origin, this._viewportRuler, this._document, this._platform, this._overlayContainer);\n    }\n    static {\n      this.ɵfac = function OverlayPositionBuilder_Factory(t) {\n        return new (t || OverlayPositionBuilder)(i0.ɵɵinject(i1.ViewportRuler), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Platform), i0.ɵɵinject(OverlayContainer));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: OverlayPositionBuilder,\n        factory: OverlayPositionBuilder.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return OverlayPositionBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Next overlay unique ID. */\nlet nextUniqueId = 0;\n// Note that Overlay is *not* scoped to the app root because of the ComponentFactoryResolver\n// which needs to be different depending on where OverlayModule is imported.\n/**\n * Service to create Overlays. Overlays are dynamically added pieces of floating UI, meant to be\n * used as a low-level building block for other components. Dialogs, tooltips, menus,\n * selects, etc. can all be built using overlays. The service should primarily be used by authors\n * of re-usable components rather than developers building end-user applications.\n *\n * An overlay *is* a PortalOutlet, so any kind of Portal can be loaded into one.\n */\nlet Overlay = /*#__PURE__*/(() => {\n  class Overlay {\n    constructor( /** Scrolling strategies that can be used when creating an overlay. */\n    scrollStrategies, _overlayContainer, _componentFactoryResolver, _positionBuilder, _keyboardDispatcher, _injector, _ngZone, _document, _directionality, _location, _outsideClickDispatcher, _animationsModuleType) {\n      this.scrollStrategies = scrollStrategies;\n      this._overlayContainer = _overlayContainer;\n      this._componentFactoryResolver = _componentFactoryResolver;\n      this._positionBuilder = _positionBuilder;\n      this._keyboardDispatcher = _keyboardDispatcher;\n      this._injector = _injector;\n      this._ngZone = _ngZone;\n      this._document = _document;\n      this._directionality = _directionality;\n      this._location = _location;\n      this._outsideClickDispatcher = _outsideClickDispatcher;\n      this._animationsModuleType = _animationsModuleType;\n    }\n    /**\n     * Creates an overlay.\n     * @param config Configuration applied to the overlay.\n     * @returns Reference to the created overlay.\n     */\n    create(config) {\n      const host = this._createHostElement();\n      const pane = this._createPaneElement(host);\n      const portalOutlet = this._createPortalOutlet(pane);\n      const overlayConfig = new OverlayConfig(config);\n      overlayConfig.direction = overlayConfig.direction || this._directionality.value;\n      return new OverlayRef(portalOutlet, host, pane, overlayConfig, this._ngZone, this._keyboardDispatcher, this._document, this._location, this._outsideClickDispatcher, this._animationsModuleType === 'NoopAnimations', this._injector.get(EnvironmentInjector));\n    }\n    /**\n     * Gets a position builder that can be used, via fluent API,\n     * to construct and configure a position strategy.\n     * @returns An overlay position builder.\n     */\n    position() {\n      return this._positionBuilder;\n    }\n    /**\n     * Creates the DOM element for an overlay and appends it to the overlay container.\n     * @returns Newly-created pane element\n     */\n    _createPaneElement(host) {\n      const pane = this._document.createElement('div');\n      pane.id = `cdk-overlay-${nextUniqueId++}`;\n      pane.classList.add('cdk-overlay-pane');\n      host.appendChild(pane);\n      return pane;\n    }\n    /**\n     * Creates the host element that wraps around an overlay\n     * and can be used for advanced positioning.\n     * @returns Newly-create host element.\n     */\n    _createHostElement() {\n      const host = this._document.createElement('div');\n      this._overlayContainer.getContainerElement().appendChild(host);\n      return host;\n    }\n    /**\n     * Create a DomPortalOutlet into which the overlay content can be loaded.\n     * @param pane The DOM element to turn into a portal outlet.\n     * @returns A portal outlet for the given DOM element.\n     */\n    _createPortalOutlet(pane) {\n      // We have to resolve the ApplicationRef later in order to allow people\n      // to use overlay-based providers during app initialization.\n      if (!this._appRef) {\n        this._appRef = this._injector.get(ApplicationRef);\n      }\n      return new DomPortalOutlet(pane, this._componentFactoryResolver, this._appRef, this._injector, this._document);\n    }\n    static {\n      this.ɵfac = function Overlay_Factory(t) {\n        return new (t || Overlay)(i0.ɵɵinject(ScrollStrategyOptions), i0.ɵɵinject(OverlayContainer), i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(OverlayPositionBuilder), i0.ɵɵinject(OverlayKeyboardDispatcher), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i5.Directionality), i0.ɵɵinject(i6.Location), i0.ɵɵinject(OverlayOutsideClickDispatcher), i0.ɵɵinject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Overlay,\n        factory: Overlay.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Overlay;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Default set of positions for the overlay. Follows the behavior of a dropdown. */\nconst defaultPositionList = [{\n  originX: 'start',\n  originY: 'bottom',\n  overlayX: 'start',\n  overlayY: 'top'\n}, {\n  originX: 'start',\n  originY: 'top',\n  overlayX: 'start',\n  overlayY: 'bottom'\n}, {\n  originX: 'end',\n  originY: 'top',\n  overlayX: 'end',\n  overlayY: 'bottom'\n}, {\n  originX: 'end',\n  originY: 'bottom',\n  overlayX: 'end',\n  overlayY: 'top'\n}];\n/** Injection token that determines the scroll handling while the connected overlay is open. */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('cdk-connected-overlay-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition();\n  }\n});\n/**\n * Directive applied to an element to make it usable as an origin for an Overlay using a\n * ConnectedPositionStrategy.\n */\nlet CdkOverlayOrigin = /*#__PURE__*/(() => {\n  class CdkOverlayOrigin {\n    constructor( /** Reference to the element on which the directive is applied. */\n    elementRef) {\n      this.elementRef = elementRef;\n    }\n    static {\n      this.ɵfac = function CdkOverlayOrigin_Factory(t) {\n        return new (t || CdkOverlayOrigin)(i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkOverlayOrigin,\n        selectors: [[\"\", \"cdk-overlay-origin\", \"\"], [\"\", \"overlay-origin\", \"\"], [\"\", \"cdkOverlayOrigin\", \"\"]],\n        exportAs: [\"cdkOverlayOrigin\"],\n        standalone: true\n      });\n    }\n  }\n  return CdkOverlayOrigin;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive to facilitate declarative creation of an\n * Overlay using a FlexibleConnectedPositionStrategy.\n */\nlet CdkConnectedOverlay = /*#__PURE__*/(() => {\n  class CdkConnectedOverlay {\n    /** The offset in pixels for the overlay connection point on the x-axis */\n    get offsetX() {\n      return this._offsetX;\n    }\n    set offsetX(offsetX) {\n      this._offsetX = offsetX;\n      if (this._position) {\n        this._updatePositionStrategy(this._position);\n      }\n    }\n    /** The offset in pixels for the overlay connection point on the y-axis */\n    get offsetY() {\n      return this._offsetY;\n    }\n    set offsetY(offsetY) {\n      this._offsetY = offsetY;\n      if (this._position) {\n        this._updatePositionStrategy(this._position);\n      }\n    }\n    /** Whether the overlay should be disposed of when the user goes backwards/forwards in history. */\n    get disposeOnNavigation() {\n      return this._disposeOnNavigation;\n    }\n    set disposeOnNavigation(value) {\n      this._disposeOnNavigation = value;\n    }\n    // TODO(jelbourn): inputs for size, scroll behavior, animation, etc.\n    constructor(_overlay, templateRef, viewContainerRef, scrollStrategyFactory, _dir) {\n      this._overlay = _overlay;\n      this._dir = _dir;\n      this._backdropSubscription = Subscription.EMPTY;\n      this._attachSubscription = Subscription.EMPTY;\n      this._detachSubscription = Subscription.EMPTY;\n      this._positionSubscription = Subscription.EMPTY;\n      this._disposeOnNavigation = false;\n      this._ngZone = inject(NgZone);\n      /** Margin between the overlay and the viewport edges. */\n      this.viewportMargin = 0;\n      /** Whether the overlay is open. */\n      this.open = false;\n      /** Whether the overlay can be closed by user interaction. */\n      this.disableClose = false;\n      /** Whether or not the overlay should attach a backdrop. */\n      this.hasBackdrop = false;\n      /** Whether or not the overlay should be locked when scrolling. */\n      this.lockPosition = false;\n      /** Whether the overlay's width and height can be constrained to fit within the viewport. */\n      this.flexibleDimensions = false;\n      /** Whether the overlay can grow after the initial open when flexible positioning is turned on. */\n      this.growAfterOpen = false;\n      /** Whether the overlay can be pushed on-screen if none of the provided positions fit. */\n      this.push = false;\n      /** Event emitted when the backdrop is clicked. */\n      this.backdropClick = new EventEmitter();\n      /** Event emitted when the position has changed. */\n      this.positionChange = new EventEmitter();\n      /** Event emitted when the overlay has been attached. */\n      this.attach = new EventEmitter();\n      /** Event emitted when the overlay has been detached. */\n      this.detach = new EventEmitter();\n      /** Emits when there are keyboard events that are targeted at the overlay. */\n      this.overlayKeydown = new EventEmitter();\n      /** Emits when there are mouse outside click events that are targeted at the overlay. */\n      this.overlayOutsideClick = new EventEmitter();\n      this._templatePortal = new TemplatePortal(templateRef, viewContainerRef);\n      this._scrollStrategyFactory = scrollStrategyFactory;\n      this.scrollStrategy = this._scrollStrategyFactory();\n    }\n    /** The associated overlay reference. */\n    get overlayRef() {\n      return this._overlayRef;\n    }\n    /** The element's layout direction. */\n    get dir() {\n      return this._dir ? this._dir.value : 'ltr';\n    }\n    ngOnDestroy() {\n      this._attachSubscription.unsubscribe();\n      this._detachSubscription.unsubscribe();\n      this._backdropSubscription.unsubscribe();\n      this._positionSubscription.unsubscribe();\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n      }\n    }\n    ngOnChanges(changes) {\n      if (this._position) {\n        this._updatePositionStrategy(this._position);\n        this._overlayRef.updateSize({\n          width: this.width,\n          minWidth: this.minWidth,\n          height: this.height,\n          minHeight: this.minHeight\n        });\n        if (changes['origin'] && this.open) {\n          this._position.apply();\n        }\n      }\n      if (changes['open']) {\n        this.open ? this._attachOverlay() : this._detachOverlay();\n      }\n    }\n    /** Creates an overlay */\n    _createOverlay() {\n      if (!this.positions || !this.positions.length) {\n        this.positions = defaultPositionList;\n      }\n      const overlayRef = this._overlayRef = this._overlay.create(this._buildConfig());\n      this._attachSubscription = overlayRef.attachments().subscribe(() => this.attach.emit());\n      this._detachSubscription = overlayRef.detachments().subscribe(() => this.detach.emit());\n      overlayRef.keydownEvents().subscribe(event => {\n        this.overlayKeydown.next(event);\n        if (event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event)) {\n          event.preventDefault();\n          this._detachOverlay();\n        }\n      });\n      this._overlayRef.outsidePointerEvents().subscribe(event => {\n        const origin = this._getOriginElement();\n        const target = _getEventTarget(event);\n        if (!origin || origin !== target && !origin.contains(target)) {\n          this.overlayOutsideClick.next(event);\n        }\n      });\n    }\n    /** Builds the overlay config based on the directive's inputs */\n    _buildConfig() {\n      const positionStrategy = this._position = this.positionStrategy || this._createPositionStrategy();\n      const overlayConfig = new OverlayConfig({\n        direction: this._dir,\n        positionStrategy,\n        scrollStrategy: this.scrollStrategy,\n        hasBackdrop: this.hasBackdrop,\n        disposeOnNavigation: this.disposeOnNavigation\n      });\n      if (this.width || this.width === 0) {\n        overlayConfig.width = this.width;\n      }\n      if (this.height || this.height === 0) {\n        overlayConfig.height = this.height;\n      }\n      if (this.minWidth || this.minWidth === 0) {\n        overlayConfig.minWidth = this.minWidth;\n      }\n      if (this.minHeight || this.minHeight === 0) {\n        overlayConfig.minHeight = this.minHeight;\n      }\n      if (this.backdropClass) {\n        overlayConfig.backdropClass = this.backdropClass;\n      }\n      if (this.panelClass) {\n        overlayConfig.panelClass = this.panelClass;\n      }\n      return overlayConfig;\n    }\n    /** Updates the state of a position strategy, based on the values of the directive inputs. */\n    _updatePositionStrategy(positionStrategy) {\n      const positions = this.positions.map(currentPosition => ({\n        originX: currentPosition.originX,\n        originY: currentPosition.originY,\n        overlayX: currentPosition.overlayX,\n        overlayY: currentPosition.overlayY,\n        offsetX: currentPosition.offsetX || this.offsetX,\n        offsetY: currentPosition.offsetY || this.offsetY,\n        panelClass: currentPosition.panelClass || undefined\n      }));\n      return positionStrategy.setOrigin(this._getOrigin()).withPositions(positions).withFlexibleDimensions(this.flexibleDimensions).withPush(this.push).withGrowAfterOpen(this.growAfterOpen).withViewportMargin(this.viewportMargin).withLockedPosition(this.lockPosition).withTransformOriginOn(this.transformOriginSelector);\n    }\n    /** Returns the position strategy of the overlay to be set on the overlay config */\n    _createPositionStrategy() {\n      const strategy = this._overlay.position().flexibleConnectedTo(this._getOrigin());\n      this._updatePositionStrategy(strategy);\n      return strategy;\n    }\n    _getOrigin() {\n      if (this.origin instanceof CdkOverlayOrigin) {\n        return this.origin.elementRef;\n      } else {\n        return this.origin;\n      }\n    }\n    _getOriginElement() {\n      if (this.origin instanceof CdkOverlayOrigin) {\n        return this.origin.elementRef.nativeElement;\n      }\n      if (this.origin instanceof ElementRef) {\n        return this.origin.nativeElement;\n      }\n      if (typeof Element !== 'undefined' && this.origin instanceof Element) {\n        return this.origin;\n      }\n      return null;\n    }\n    /** Attaches the overlay and subscribes to backdrop clicks if backdrop exists */\n    _attachOverlay() {\n      if (!this._overlayRef) {\n        this._createOverlay();\n      } else {\n        // Update the overlay size, in case the directive's inputs have changed\n        this._overlayRef.getConfig().hasBackdrop = this.hasBackdrop;\n      }\n      if (!this._overlayRef.hasAttached()) {\n        this._overlayRef.attach(this._templatePortal);\n      }\n      if (this.hasBackdrop) {\n        this._backdropSubscription = this._overlayRef.backdropClick().subscribe(event => {\n          this.backdropClick.emit(event);\n        });\n      } else {\n        this._backdropSubscription.unsubscribe();\n      }\n      this._positionSubscription.unsubscribe();\n      // Only subscribe to `positionChanges` if requested, because putting\n      // together all the information for it can be expensive.\n      if (this.positionChange.observers.length > 0) {\n        this._positionSubscription = this._position.positionChanges.pipe(takeWhile(() => this.positionChange.observers.length > 0)).subscribe(position => {\n          this._ngZone.run(() => this.positionChange.emit(position));\n          if (this.positionChange.observers.length === 0) {\n            this._positionSubscription.unsubscribe();\n          }\n        });\n      }\n    }\n    /** Detaches the overlay and unsubscribes to backdrop clicks if backdrop exists */\n    _detachOverlay() {\n      if (this._overlayRef) {\n        this._overlayRef.detach();\n      }\n      this._backdropSubscription.unsubscribe();\n      this._positionSubscription.unsubscribe();\n    }\n    static {\n      this.ɵfac = function CdkConnectedOverlay_Factory(t) {\n        return new (t || CdkConnectedOverlay)(i0.ɵɵdirectiveInject(Overlay), i0.ɵɵdirectiveInject(i0.TemplateRef), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i5.Directionality, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkConnectedOverlay,\n        selectors: [[\"\", \"cdk-connected-overlay\", \"\"], [\"\", \"connected-overlay\", \"\"], [\"\", \"cdkConnectedOverlay\", \"\"]],\n        inputs: {\n          origin: [0, \"cdkConnectedOverlayOrigin\", \"origin\"],\n          positions: [0, \"cdkConnectedOverlayPositions\", \"positions\"],\n          positionStrategy: [0, \"cdkConnectedOverlayPositionStrategy\", \"positionStrategy\"],\n          offsetX: [0, \"cdkConnectedOverlayOffsetX\", \"offsetX\"],\n          offsetY: [0, \"cdkConnectedOverlayOffsetY\", \"offsetY\"],\n          width: [0, \"cdkConnectedOverlayWidth\", \"width\"],\n          height: [0, \"cdkConnectedOverlayHeight\", \"height\"],\n          minWidth: [0, \"cdkConnectedOverlayMinWidth\", \"minWidth\"],\n          minHeight: [0, \"cdkConnectedOverlayMinHeight\", \"minHeight\"],\n          backdropClass: [0, \"cdkConnectedOverlayBackdropClass\", \"backdropClass\"],\n          panelClass: [0, \"cdkConnectedOverlayPanelClass\", \"panelClass\"],\n          viewportMargin: [0, \"cdkConnectedOverlayViewportMargin\", \"viewportMargin\"],\n          scrollStrategy: [0, \"cdkConnectedOverlayScrollStrategy\", \"scrollStrategy\"],\n          open: [0, \"cdkConnectedOverlayOpen\", \"open\"],\n          disableClose: [0, \"cdkConnectedOverlayDisableClose\", \"disableClose\"],\n          transformOriginSelector: [0, \"cdkConnectedOverlayTransformOriginOn\", \"transformOriginSelector\"],\n          hasBackdrop: [2, \"cdkConnectedOverlayHasBackdrop\", \"hasBackdrop\", booleanAttribute],\n          lockPosition: [2, \"cdkConnectedOverlayLockPosition\", \"lockPosition\", booleanAttribute],\n          flexibleDimensions: [2, \"cdkConnectedOverlayFlexibleDimensions\", \"flexibleDimensions\", booleanAttribute],\n          growAfterOpen: [2, \"cdkConnectedOverlayGrowAfterOpen\", \"growAfterOpen\", booleanAttribute],\n          push: [2, \"cdkConnectedOverlayPush\", \"push\", booleanAttribute],\n          disposeOnNavigation: [2, \"cdkConnectedOverlayDisposeOnNavigation\", \"disposeOnNavigation\", booleanAttribute]\n        },\n        outputs: {\n          backdropClick: \"backdropClick\",\n          positionChange: \"positionChange\",\n          attach: \"attach\",\n          detach: \"detach\",\n          overlayKeydown: \"overlayKeydown\",\n          overlayOutsideClick: \"overlayOutsideClick\"\n        },\n        exportAs: [\"cdkConnectedOverlay\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkConnectedOverlay;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** @docs-private */\nfunction CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition();\n}\n/** @docs-private */\nconst CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER = {\n  provide: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY\n};\nlet OverlayModule = /*#__PURE__*/(() => {\n  class OverlayModule {\n    static {\n      this.ɵfac = function OverlayModule_Factory(t) {\n        return new (t || OverlayModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: OverlayModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [Overlay, CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER],\n        imports: [BidiModule, PortalModule, ScrollingModule, ScrollingModule]\n      });\n    }\n  }\n  return OverlayModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Alternative to OverlayContainer that supports correct displaying of overlay elements in\n * Fullscreen mode\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen\n *\n * Should be provided in the root component.\n */\nlet FullscreenOverlayContainer = /*#__PURE__*/(() => {\n  class FullscreenOverlayContainer extends OverlayContainer {\n    constructor(_document, platform) {\n      super(_document, platform);\n    }\n    ngOnDestroy() {\n      super.ngOnDestroy();\n      if (this._fullScreenEventName && this._fullScreenListener) {\n        this._document.removeEventListener(this._fullScreenEventName, this._fullScreenListener);\n      }\n    }\n    _createContainer() {\n      super._createContainer();\n      this._adjustParentForFullscreenChange();\n      this._addFullscreenChangeListener(() => this._adjustParentForFullscreenChange());\n    }\n    _adjustParentForFullscreenChange() {\n      if (!this._containerElement) {\n        return;\n      }\n      const fullscreenElement = this.getFullscreenElement();\n      const parent = fullscreenElement || this._document.body;\n      parent.appendChild(this._containerElement);\n    }\n    _addFullscreenChangeListener(fn) {\n      const eventName = this._getEventName();\n      if (eventName) {\n        if (this._fullScreenListener) {\n          this._document.removeEventListener(eventName, this._fullScreenListener);\n        }\n        this._document.addEventListener(eventName, fn);\n        this._fullScreenListener = fn;\n      }\n    }\n    _getEventName() {\n      if (!this._fullScreenEventName) {\n        const _document = this._document;\n        if (_document.fullscreenEnabled) {\n          this._fullScreenEventName = 'fullscreenchange';\n        } else if (_document.webkitFullscreenEnabled) {\n          this._fullScreenEventName = 'webkitfullscreenchange';\n        } else if (_document.mozFullScreenEnabled) {\n          this._fullScreenEventName = 'mozfullscreenchange';\n        } else if (_document.msFullscreenEnabled) {\n          this._fullScreenEventName = 'MSFullscreenChange';\n        }\n      }\n      return this._fullScreenEventName;\n    }\n    /**\n     * When the page is put into fullscreen mode, a specific element is specified.\n     * Only that element and its children are visible when in fullscreen mode.\n     */\n    getFullscreenElement() {\n      const _document = this._document;\n      return _document.fullscreenElement || _document.webkitFullscreenElement || _document.mozFullScreenElement || _document.msFullscreenElement || null;\n    }\n    static {\n      this.ɵfac = function FullscreenOverlayContainer_Factory(t) {\n        return new (t || FullscreenOverlayContainer)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1$1.Platform));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FullscreenOverlayContainer,\n        factory: FullscreenOverlayContainer.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FullscreenOverlayContainer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BlockScrollStrategy, CdkConnectedOverlay, CdkOverlayOrigin, CloseScrollStrategy, ConnectedOverlayPositionChange, ConnectionPositionPair, FlexibleConnectedPositionStrategy, FullscreenOverlayContainer, GlobalPositionStrategy, NoopScrollStrategy, Overlay, OverlayConfig, OverlayContainer, OverlayKeyboardDispatcher, OverlayModule, OverlayOutsideClickDispatcher, OverlayPositionBuilder, OverlayRef, RepositionScrollStrategy, STANDARD_DROPDOWN_ADJACENT_POSITIONS, STANDARD_DROPDOWN_BELOW_POSITIONS, ScrollStrategyOptions, ScrollingVisibility, validateHorizontalPosition, validateVerticalPosition };\n","import { takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, Injector, ElementRef, afterNextRender, Directive, Inject, Optional, Input, ANIMATION_MODULE_TYPE, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { DOCUMENT, NgClass, CommonModule } from '@angular/common';\nimport * as i2 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i3 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i4 from '@angular/cdk/bidi';\nimport * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { Subject } from 'rxjs';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { MatCommonModule } from '@angular/material/core';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst _c0 = [\"tooltip\"];\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n  return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = /*#__PURE__*/new InjectionToken('mat-tooltip-scroll-strategy', {\n  providedIn: 'root',\n  factory: () => {\n    const overlay = inject(Overlay);\n    return () => overlay.scrollStrategies.reposition({\n      scrollThrottle: SCROLL_THROTTLE_MS\n    });\n  }\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n  return () => overlay.scrollStrategies.reposition({\n    scrollThrottle: SCROLL_THROTTLE_MS\n  });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY\n};\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    showDelay: 0,\n    hideDelay: 0,\n    touchendHideDelay: 1500\n  };\n}\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-tooltip-default-options', {\n  providedIn: 'root',\n  factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-mdc-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true\n});\n// These constants were taken from MDC's `numbers` object. We can't import them from MDC,\n// because they have some top-level references to `window` which break during SSR.\nconst MIN_VIEWPORT_TOOLTIP_THRESHOLD = 8;\nconst UNBOUNDED_ANCHOR_GAP = 8;\nconst MIN_HEIGHT = 24;\nconst MAX_WIDTH = 200;\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nlet MatTooltip = /*#__PURE__*/(() => {\n  class MatTooltip {\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n      return this._position;\n    }\n    set position(value) {\n      if (value !== this._position) {\n        this._position = value;\n        if (this._overlayRef) {\n          this._updatePosition(this._overlayRef);\n          this._tooltipInstance?.show(0);\n          this._overlayRef.updatePosition();\n        }\n      }\n    }\n    /**\n     * Whether tooltip should be relative to the click or touch origin\n     * instead of outside the element bounding box.\n     */\n    get positionAtOrigin() {\n      return this._positionAtOrigin;\n    }\n    set positionAtOrigin(value) {\n      this._positionAtOrigin = coerceBooleanProperty(value);\n      this._detach();\n      this._overlayRef = null;\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n      // If tooltip is disabled, hide immediately.\n      if (this._disabled) {\n        this.hide(0);\n      } else {\n        this._setupPointerEnterEventsIfNeeded();\n      }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n      return this._showDelay;\n    }\n    set showDelay(value) {\n      this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n      return this._hideDelay;\n    }\n    set hideDelay(value) {\n      this._hideDelay = coerceNumberProperty(value);\n      if (this._tooltipInstance) {\n        this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n      }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n      return this._message;\n    }\n    set message(value) {\n      this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n      // If the message is not a string (e.g. number), convert it to a string and trim it.\n      // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n      // away the string-conversion: https://github.com/angular/components/issues/20684\n      this._message = value != null ? String(value).trim() : '';\n      if (!this._message && this._isTooltipVisible()) {\n        this.hide(0);\n      } else {\n        this._setupPointerEnterEventsIfNeeded();\n        this._updateTooltipMessage();\n        this._ngZone.runOutsideAngular(() => {\n          // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n          // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n          // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n          // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n          Promise.resolve().then(() => {\n            this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n          });\n        });\n      }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n      return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n      this._tooltipClass = value;\n      if (this._tooltipInstance) {\n        this._setTooltipClass(this._tooltipClass);\n      }\n    }\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n      this._overlay = _overlay;\n      this._elementRef = _elementRef;\n      this._scrollDispatcher = _scrollDispatcher;\n      this._viewContainerRef = _viewContainerRef;\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      this._ariaDescriber = _ariaDescriber;\n      this._focusMonitor = _focusMonitor;\n      this._dir = _dir;\n      this._defaultOptions = _defaultOptions;\n      this._position = 'below';\n      this._positionAtOrigin = false;\n      this._disabled = false;\n      this._viewInitialized = false;\n      this._pointerExitEventsInitialized = false;\n      this._tooltipComponent = TooltipComponent;\n      this._viewportMargin = 8;\n      this._cssClassPrefix = 'mat-mdc';\n      /**\n       * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n       * uses a long press gesture to show and hide, however it can conflict with the native browser\n       * gestures. To work around the conflict, Angular Material disables native gestures on the\n       * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n       * elements). The different values for this option configure the touch event handling as follows:\n       * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n       *   browser gestures on particular elements. In particular, it allows text selection on inputs\n       *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n       * - `on` - Enables touch gestures for all elements and disables native\n       *   browser gestures with no exceptions.\n       * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n       *   showing on touch devices.\n       */\n      this.touchGestures = 'auto';\n      this._message = '';\n      /** Manually-bound passive event listeners. */\n      this._passiveListeners = [];\n      /** Emits when the component is destroyed. */\n      this._destroyed = new Subject();\n      this._injector = inject(Injector);\n      this._scrollStrategy = scrollStrategy;\n      this._document = _document;\n      if (_defaultOptions) {\n        this._showDelay = _defaultOptions.showDelay;\n        this._hideDelay = _defaultOptions.hideDelay;\n        if (_defaultOptions.position) {\n          this.position = _defaultOptions.position;\n        }\n        if (_defaultOptions.positionAtOrigin) {\n          this.positionAtOrigin = _defaultOptions.positionAtOrigin;\n        }\n        if (_defaultOptions.touchGestures) {\n          this.touchGestures = _defaultOptions.touchGestures;\n        }\n      }\n      _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n        if (this._overlayRef) {\n          this._updatePosition(this._overlayRef);\n        }\n      });\n      this._viewportMargin = MIN_VIEWPORT_TOOLTIP_THRESHOLD;\n    }\n    ngAfterViewInit() {\n      // This needs to happen after view init so the initial values for all inputs have been set.\n      this._viewInitialized = true;\n      this._setupPointerEnterEventsIfNeeded();\n      this._focusMonitor.monitor(this._elementRef).pipe(takeUntil(this._destroyed)).subscribe(origin => {\n        // Note that the focus monitor runs outside the Angular zone.\n        if (!origin) {\n          this._ngZone.run(() => this.hide(0));\n        } else if (origin === 'keyboard') {\n          this._ngZone.run(() => this.show());\n        }\n      });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n      const nativeElement = this._elementRef.nativeElement;\n      clearTimeout(this._touchstartTimeout);\n      if (this._overlayRef) {\n        this._overlayRef.dispose();\n        this._tooltipInstance = null;\n      }\n      // Clean up the event listeners set in the constructor\n      this._passiveListeners.forEach(([event, listener]) => {\n        nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n      });\n      this._passiveListeners.length = 0;\n      this._destroyed.next();\n      this._destroyed.complete();\n      this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n      this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay, origin) {\n      if (this.disabled || !this.message || this._isTooltipVisible()) {\n        this._tooltipInstance?._cancelPendingAnimations();\n        return;\n      }\n      const overlayRef = this._createOverlay(origin);\n      this._detach();\n      this._portal = this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n      const instance = this._tooltipInstance = overlayRef.attach(this._portal).instance;\n      instance._triggerElement = this._elementRef.nativeElement;\n      instance._mouseLeaveHideDelay = this._hideDelay;\n      instance.afterHidden().pipe(takeUntil(this._destroyed)).subscribe(() => this._detach());\n      this._setTooltipClass(this._tooltipClass);\n      this._updateTooltipMessage();\n      instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n      const instance = this._tooltipInstance;\n      if (instance) {\n        if (instance.isVisible()) {\n          instance.hide(delay);\n        } else {\n          instance._cancelPendingAnimations();\n          this._detach();\n        }\n      }\n    }\n    /** Shows/hides the tooltip */\n    toggle(origin) {\n      this._isTooltipVisible() ? this.hide() : this.show(undefined, origin);\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n      return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay(origin) {\n      if (this._overlayRef) {\n        const existingStrategy = this._overlayRef.getConfig().positionStrategy;\n        if ((!this.positionAtOrigin || !origin) && existingStrategy._origin instanceof ElementRef) {\n          return this._overlayRef;\n        }\n        this._detach();\n      }\n      const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n      // Create connected position strategy that listens for scroll events to reposition.\n      const strategy = this._overlay.position().flexibleConnectedTo(this.positionAtOrigin ? origin || this._elementRef : this._elementRef).withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`).withFlexibleDimensions(false).withViewportMargin(this._viewportMargin).withScrollableContainers(scrollableAncestors);\n      strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n        this._updateCurrentPositionClass(change.connectionPair);\n        if (this._tooltipInstance) {\n          if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n            // After position changes occur and the overlay is clipped by\n            // a parent scrollable then close the tooltip.\n            this._ngZone.run(() => this.hide(0));\n          }\n        }\n      });\n      this._overlayRef = this._overlay.create({\n        direction: this._dir,\n        positionStrategy: strategy,\n        panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n        scrollStrategy: this._scrollStrategy()\n      });\n      this._updatePosition(this._overlayRef);\n      this._overlayRef.detachments().pipe(takeUntil(this._destroyed)).subscribe(() => this._detach());\n      this._overlayRef.outsidePointerEvents().pipe(takeUntil(this._destroyed)).subscribe(() => this._tooltipInstance?._handleBodyInteraction());\n      this._overlayRef.keydownEvents().pipe(takeUntil(this._destroyed)).subscribe(event => {\n        if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this._ngZone.run(() => this.hide(0));\n        }\n      });\n      if (this._defaultOptions?.disableTooltipInteractivity) {\n        this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n      }\n      return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n      if (this._overlayRef && this._overlayRef.hasAttached()) {\n        this._overlayRef.detach();\n      }\n      this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n      const position = overlayRef.getConfig().positionStrategy;\n      const origin = this._getOrigin();\n      const overlay = this._getOverlayPosition();\n      position.withPositions([this._addOffset({\n        ...origin.main,\n        ...overlay.main\n      }), this._addOffset({\n        ...origin.fallback,\n        ...overlay.fallback\n      })]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n      const offset = UNBOUNDED_ANCHOR_GAP;\n      const isLtr = !this._dir || this._dir.value == 'ltr';\n      if (position.originY === 'top') {\n        position.offsetY = -offset;\n      } else if (position.originY === 'bottom') {\n        position.offsetY = offset;\n      } else if (position.originX === 'start') {\n        position.offsetX = isLtr ? -offset : offset;\n      } else if (position.originX === 'end') {\n        position.offsetX = isLtr ? offset : -offset;\n      }\n      return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n      const isLtr = !this._dir || this._dir.value == 'ltr';\n      const position = this.position;\n      let originPosition;\n      if (position == 'above' || position == 'below') {\n        originPosition = {\n          originX: 'center',\n          originY: position == 'above' ? 'top' : 'bottom'\n        };\n      } else if (position == 'before' || position == 'left' && isLtr || position == 'right' && !isLtr) {\n        originPosition = {\n          originX: 'start',\n          originY: 'center'\n        };\n      } else if (position == 'after' || position == 'right' && isLtr || position == 'left' && !isLtr) {\n        originPosition = {\n          originX: 'end',\n          originY: 'center'\n        };\n      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw getMatTooltipInvalidPositionError(position);\n      }\n      const {\n        x,\n        y\n      } = this._invertPosition(originPosition.originX, originPosition.originY);\n      return {\n        main: originPosition,\n        fallback: {\n          originX: x,\n          originY: y\n        }\n      };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n      const isLtr = !this._dir || this._dir.value == 'ltr';\n      const position = this.position;\n      let overlayPosition;\n      if (position == 'above') {\n        overlayPosition = {\n          overlayX: 'center',\n          overlayY: 'bottom'\n        };\n      } else if (position == 'below') {\n        overlayPosition = {\n          overlayX: 'center',\n          overlayY: 'top'\n        };\n      } else if (position == 'before' || position == 'left' && isLtr || position == 'right' && !isLtr) {\n        overlayPosition = {\n          overlayX: 'end',\n          overlayY: 'center'\n        };\n      } else if (position == 'after' || position == 'right' && isLtr || position == 'left' && !isLtr) {\n        overlayPosition = {\n          overlayX: 'start',\n          overlayY: 'center'\n        };\n      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        throw getMatTooltipInvalidPositionError(position);\n      }\n      const {\n        x,\n        y\n      } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n      return {\n        main: overlayPosition,\n        fallback: {\n          overlayX: x,\n          overlayY: y\n        }\n      };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n      // Must wait for the message to be painted to the tooltip so that the overlay can properly\n      // calculate the correct positioning based on the size of the text.\n      if (this._tooltipInstance) {\n        this._tooltipInstance.message = this.message;\n        this._tooltipInstance._markForCheck();\n        afterNextRender(() => {\n          if (this._tooltipInstance) {\n            this._overlayRef.updatePosition();\n          }\n        }, {\n          injector: this._injector\n        });\n      }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n      if (this._tooltipInstance) {\n        this._tooltipInstance.tooltipClass = tooltipClass;\n        this._tooltipInstance._markForCheck();\n      }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n      if (this.position === 'above' || this.position === 'below') {\n        if (y === 'top') {\n          y = 'bottom';\n        } else if (y === 'bottom') {\n          y = 'top';\n        }\n      } else {\n        if (x === 'end') {\n          x = 'start';\n        } else if (x === 'start') {\n          x = 'end';\n        }\n      }\n      return {\n        x,\n        y\n      };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n      const {\n        overlayY,\n        originX,\n        originY\n      } = connectionPair;\n      let newPosition;\n      // If the overlay is in the middle along the Y axis,\n      // it means that it's either before or after.\n      if (overlayY === 'center') {\n        // Note that since this information is used for styling, we want to\n        // resolve `start` and `end` to their real values, otherwise consumers\n        // would have to remember to do it themselves on each consumption.\n        if (this._dir && this._dir.value === 'rtl') {\n          newPosition = originX === 'end' ? 'left' : 'right';\n        } else {\n          newPosition = originX === 'start' ? 'left' : 'right';\n        }\n      } else {\n        newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n      }\n      if (newPosition !== this._currentPosition) {\n        const overlayRef = this._overlayRef;\n        if (overlayRef) {\n          const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n          overlayRef.removePanelClass(classPrefix + this._currentPosition);\n          overlayRef.addPanelClass(classPrefix + newPosition);\n        }\n        this._currentPosition = newPosition;\n      }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n      // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n      if (this._disabled || !this.message || !this._viewInitialized || this._passiveListeners.length) {\n        return;\n      }\n      // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n      // first tap from firing its click event or can cause the tooltip to open for clicks.\n      if (this._platformSupportsMouseEvents()) {\n        this._passiveListeners.push(['mouseenter', event => {\n          this._setupPointerExitEventsIfNeeded();\n          let point = undefined;\n          if (event.x !== undefined && event.y !== undefined) {\n            point = event;\n          }\n          this.show(undefined, point);\n        }]);\n      } else if (this.touchGestures !== 'off') {\n        this._disableNativeGesturesIfNecessary();\n        this._passiveListeners.push(['touchstart', event => {\n          const touch = event.targetTouches?.[0];\n          const origin = touch ? {\n            x: touch.clientX,\n            y: touch.clientY\n          } : undefined;\n          // Note that it's important that we don't `preventDefault` here,\n          // because it can prevent click events from firing on the element.\n          this._setupPointerExitEventsIfNeeded();\n          clearTimeout(this._touchstartTimeout);\n          const DEFAULT_LONGPRESS_DELAY = 500;\n          this._touchstartTimeout = setTimeout(() => this.show(undefined, origin), this._defaultOptions.touchLongPressShowDelay ?? DEFAULT_LONGPRESS_DELAY);\n        }]);\n      }\n      this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n      if (this._pointerExitEventsInitialized) {\n        return;\n      }\n      this._pointerExitEventsInitialized = true;\n      const exitListeners = [];\n      if (this._platformSupportsMouseEvents()) {\n        exitListeners.push(['mouseleave', event => {\n          const newTarget = event.relatedTarget;\n          if (!newTarget || !this._overlayRef?.overlayElement.contains(newTarget)) {\n            this.hide();\n          }\n        }], ['wheel', event => this._wheelListener(event)]);\n      } else if (this.touchGestures !== 'off') {\n        this._disableNativeGesturesIfNecessary();\n        const touchendListener = () => {\n          clearTimeout(this._touchstartTimeout);\n          this.hide(this._defaultOptions.touchendHideDelay);\n        };\n        exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n      }\n      this._addListeners(exitListeners);\n      this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n      listeners.forEach(([event, listener]) => {\n        this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n      });\n    }\n    _platformSupportsMouseEvents() {\n      return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n      if (this._isTooltipVisible()) {\n        const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n        const element = this._elementRef.nativeElement;\n        // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n        // won't fire if the user scrolls away using the wheel without moving their cursor. We\n        // work around it by finding the element under the user's cursor and closing the tooltip\n        // if it's not the trigger.\n        if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n          this.hide();\n        }\n      }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n      const gestures = this.touchGestures;\n      if (gestures !== 'off') {\n        const element = this._elementRef.nativeElement;\n        const style = element.style;\n        // If gestures are set to `auto`, we don't disable text selection on inputs and\n        // textareas, because it prevents the user from typing into them on iOS Safari.\n        if (gestures === 'on' || element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA') {\n          style.userSelect = style.msUserSelect = style.webkitUserSelect = style.MozUserSelect = 'none';\n        }\n        // If we have `auto` gestures and the element uses native HTML dragging,\n        // we don't set `-webkit-user-drag` because it prevents the native behavior.\n        if (gestures === 'on' || !element.draggable) {\n          style.webkitUserDrag = 'none';\n        }\n        style.touchAction = 'none';\n        style.webkitTapHighlightColor = 'transparent';\n      }\n    }\n    static {\n      this.ɵfac = function MatTooltip_Factory(t) {\n        return new (t || MatTooltip)(i0.ɵɵdirectiveInject(i1.Overlay), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ScrollDispatcher), i0.ɵɵdirectiveInject(i0.ViewContainerRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(i3.AriaDescriber), i0.ɵɵdirectiveInject(i3.FocusMonitor), i0.ɵɵdirectiveInject(MAT_TOOLTIP_SCROLL_STRATEGY), i0.ɵɵdirectiveInject(i4.Directionality), i0.ɵɵdirectiveInject(MAT_TOOLTIP_DEFAULT_OPTIONS, 8), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatTooltip,\n        selectors: [[\"\", \"matTooltip\", \"\"]],\n        hostAttrs: [1, \"mat-mdc-tooltip-trigger\"],\n        hostVars: 2,\n        hostBindings: function MatTooltip_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-mdc-tooltip-disabled\", ctx.disabled);\n          }\n        },\n        inputs: {\n          position: [0, \"matTooltipPosition\", \"position\"],\n          positionAtOrigin: [0, \"matTooltipPositionAtOrigin\", \"positionAtOrigin\"],\n          disabled: [0, \"matTooltipDisabled\", \"disabled\"],\n          showDelay: [0, \"matTooltipShowDelay\", \"showDelay\"],\n          hideDelay: [0, \"matTooltipHideDelay\", \"hideDelay\"],\n          touchGestures: [0, \"matTooltipTouchGestures\", \"touchGestures\"],\n          message: [0, \"matTooltip\", \"message\"],\n          tooltipClass: [0, \"matTooltipClass\", \"tooltipClass\"]\n        },\n        exportAs: [\"matTooltip\"],\n        standalone: true\n      });\n    }\n  }\n  return MatTooltip;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nlet TooltipComponent = /*#__PURE__*/(() => {\n  class TooltipComponent {\n    constructor(_changeDetectorRef, _elementRef, animationMode) {\n      this._changeDetectorRef = _changeDetectorRef;\n      this._elementRef = _elementRef;\n      /* Whether the tooltip text overflows to multiple lines */\n      this._isMultiline = false;\n      /** Whether interactions on the page should close the tooltip */\n      this._closeOnInteraction = false;\n      /** Whether the tooltip is currently visible. */\n      this._isVisible = false;\n      /** Subject for notifying that the tooltip has been hidden from the view */\n      this._onHide = new Subject();\n      /** Name of the show animation and the class that toggles it. */\n      this._showAnimation = 'mat-mdc-tooltip-show';\n      /** Name of the hide animation and the class that toggles it. */\n      this._hideAnimation = 'mat-mdc-tooltip-hide';\n      this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n      // Cancel the delayed hide if it is scheduled\n      if (this._hideTimeoutId != null) {\n        clearTimeout(this._hideTimeoutId);\n      }\n      this._showTimeoutId = setTimeout(() => {\n        this._toggleVisibility(true);\n        this._showTimeoutId = undefined;\n      }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n      // Cancel the delayed show if it is scheduled\n      if (this._showTimeoutId != null) {\n        clearTimeout(this._showTimeoutId);\n      }\n      this._hideTimeoutId = setTimeout(() => {\n        this._toggleVisibility(false);\n        this._hideTimeoutId = undefined;\n      }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n      return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n      return this._isVisible;\n    }\n    ngOnDestroy() {\n      this._cancelPendingAnimations();\n      this._onHide.complete();\n      this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n      if (this._closeOnInteraction) {\n        this.hide(0);\n      }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n      this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({\n      relatedTarget\n    }) {\n      if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n        if (this.isVisible()) {\n          this.hide(this._mouseLeaveHideDelay);\n        } else {\n          this._finalizeAnimation(false);\n        }\n      }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() {\n      this._isMultiline = this._isTooltipMultiline();\n      this._markForCheck();\n    }\n    /** Whether the tooltip text has overflown to the next line */\n    _isTooltipMultiline() {\n      const rect = this._elementRef.nativeElement.getBoundingClientRect();\n      return rect.height > MIN_HEIGHT && rect.width >= MAX_WIDTH;\n    }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({\n      animationName\n    }) {\n      if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n        this._finalizeAnimation(animationName === this._showAnimation);\n      }\n    }\n    /** Cancels any pending animation sequences. */\n    _cancelPendingAnimations() {\n      if (this._showTimeoutId != null) {\n        clearTimeout(this._showTimeoutId);\n      }\n      if (this._hideTimeoutId != null) {\n        clearTimeout(this._hideTimeoutId);\n      }\n      this._showTimeoutId = this._hideTimeoutId = undefined;\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n      if (toVisible) {\n        this._closeOnInteraction = true;\n      } else if (!this.isVisible()) {\n        this._onHide.next();\n      }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n      // We set the classes directly here ourselves so that toggling the tooltip state\n      // isn't bound by change detection. This allows us to hide it even if the\n      // view ref has been detached from the CD tree.\n      const tooltip = this._tooltip.nativeElement;\n      const showClass = this._showAnimation;\n      const hideClass = this._hideAnimation;\n      tooltip.classList.remove(isVisible ? hideClass : showClass);\n      tooltip.classList.add(isVisible ? showClass : hideClass);\n      if (this._isVisible !== isVisible) {\n        this._isVisible = isVisible;\n        this._changeDetectorRef.markForCheck();\n      }\n      // It's common for internal apps to disable animations using `* { animation: none !important }`\n      // which can break the opening sequence. Try to detect such cases and work around them.\n      if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n        const styles = getComputedStyle(tooltip);\n        // Use `getPropertyValue` to avoid issues with property renaming.\n        if (styles.getPropertyValue('animation-duration') === '0s' || styles.getPropertyValue('animation-name') === 'none') {\n          this._animationsDisabled = true;\n        }\n      }\n      if (isVisible) {\n        this._onShow();\n      }\n      if (this._animationsDisabled) {\n        tooltip.classList.add('_mat-animation-noopable');\n        this._finalizeAnimation(isVisible);\n      }\n    }\n    static {\n      this.ɵfac = function TooltipComponent_Factory(t) {\n        return new (t || TooltipComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: TooltipComponent,\n        selectors: [[\"mat-tooltip-component\"]],\n        viewQuery: function TooltipComponent_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tooltip = _t.first);\n          }\n        },\n        hostAttrs: [\"aria-hidden\", \"true\"],\n        hostVars: 2,\n        hostBindings: function TooltipComponent_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"mouseleave\", function TooltipComponent_mouseleave_HostBindingHandler($event) {\n              return ctx._handleMouseLeave($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵstyleProp(\"zoom\", ctx.isVisible() ? 1 : null);\n          }\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 4,\n        vars: 4,\n        consts: [[\"tooltip\", \"\"], [1, \"mdc-tooltip\", \"mat-mdc-tooltip\", 3, \"animationend\", \"ngClass\"], [1, \"mat-mdc-tooltip-surface\", \"mdc-tooltip__surface\"]],\n        template: function TooltipComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            const _r1 = i0.ɵɵgetCurrentView();\n            i0.ɵɵelementStart(0, \"div\", 1, 0);\n            i0.ɵɵlistener(\"animationend\", function TooltipComponent_Template_div_animationend_0_listener($event) {\n              i0.ɵɵrestoreView(_r1);\n              return i0.ɵɵresetView(ctx._handleAnimationEnd($event));\n            });\n            i0.ɵɵelementStart(2, \"div\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-tooltip--multiline\", ctx._isMultiline);\n            i0.ɵɵproperty(\"ngClass\", ctx.tooltipClass);\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate(ctx.message);\n          }\n        },\n        dependencies: [NgClass],\n        styles: [\".mat-mdc-tooltip{position:relative;transform:scale(0);display:inline-flex}.mat-mdc-tooltip::before{content:\\\"\\\";top:0;right:0;bottom:0;left:0;z-index:-1;position:absolute}.mat-mdc-tooltip-panel-below .mat-mdc-tooltip::before{top:-8px}.mat-mdc-tooltip-panel-above .mat-mdc-tooltip::before{bottom:-8px}.mat-mdc-tooltip-panel-right .mat-mdc-tooltip::before{left:-8px}.mat-mdc-tooltip-panel-left .mat-mdc-tooltip::before{right:-8px}.mat-mdc-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.mat-mdc-tooltip-surface{word-break:normal;overflow-wrap:anywhere;padding:4px 8px;min-width:40px;max-width:200px;min-height:24px;max-height:40vh;box-sizing:border-box;overflow:hidden;text-align:center;will-change:transform,opacity;background-color:var(--mdc-plain-tooltip-container-color);color:var(--mdc-plain-tooltip-supporting-text-color);border-radius:var(--mdc-plain-tooltip-container-shape);font-family:var(--mdc-plain-tooltip-supporting-text-font);font-size:var(--mdc-plain-tooltip-supporting-text-size);font-weight:var(--mdc-plain-tooltip-supporting-text-weight);line-height:var(--mdc-plain-tooltip-supporting-text-line-height);letter-spacing:var(--mdc-plain-tooltip-supporting-text-tracking)}.mat-mdc-tooltip-surface::before{position:absolute;box-sizing:border-box;width:100%;height:100%;top:0;left:0;border:1px solid rgba(0,0,0,0);border-radius:inherit;content:\\\"\\\";pointer-events:none}.mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:left}[dir=rtl] .mdc-tooltip--multiline .mat-mdc-tooltip-surface{text-align:right}.mat-mdc-tooltip-panel.mat-mdc-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-mdc-tooltip-show{0%{opacity:0;transform:scale(0.8)}100%{opacity:1;transform:scale(1)}}@keyframes mat-mdc-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(0.8)}}.mat-mdc-tooltip-show{animation:mat-mdc-tooltip-show 150ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-mdc-tooltip-hide{animation:mat-mdc-tooltip-hide 75ms cubic-bezier(0.4, 0, 1, 1) forwards}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return TooltipComponent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n  /** Animation that transitions a tooltip in and out. */\n  tooltipState: /*#__PURE__*/trigger('state', [\n  /*#__PURE__*/\n  // TODO(crisbeto): these values are based on MDC's CSS.\n  // We should be able to use their styles directly once we land #19432.\n  state('initial, void, hidden', /*#__PURE__*/style({\n    opacity: 0,\n    transform: 'scale(0.8)'\n  })), /*#__PURE__*/state('visible', /*#__PURE__*/style({\n    transform: 'scale(1)'\n  })), /*#__PURE__*/transition('* => visible', /*#__PURE__*/animate('150ms cubic-bezier(0, 0, 0.2, 1)')), /*#__PURE__*/transition('* => hidden', /*#__PURE__*/animate('75ms cubic-bezier(0.4, 0, 1, 1)'))])\n};\nlet MatTooltipModule = /*#__PURE__*/(() => {\n  class MatTooltipModule {\n    static {\n      this.ɵfac = function MatTooltipModule_Factory(t) {\n        return new (t || MatTooltipModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatTooltipModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n        imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule, MatCommonModule, CdkScrollableModule]\n      });\n    }\n  }\n  return MatTooltipModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, getMatTooltipInvalidPositionError, matTooltipAnimations };\n","import { TitleCasePipe } from \"@angular/common\";\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    input,\n    ViewEncapsulation,\n} from \"@angular/core\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatChipsModule } from \"@angular/material/chips\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatTooltipModule } from \"@angular/material/tooltip\";\nimport { ItemImageComponent } from \"@lib/item-image/item-image.component\";\nimport { ImageSizeOptions } from \"@model/image.model\";\nimport { TopTrackLimited } from \"@model/top-items.model\";\n\n@Component({\n    selector: \"app-top-tracks-details\",\n    standalone: true,\n    imports: [\n        ItemImageComponent,\n        MatCardModule,\n        MatChipsModule,\n        MatIconModule,\n        MatTooltipModule,\n        TitleCasePipe,\n    ],\n    templateUrl: \"./top-tracks-details.component.html\",\n    styleUrl: \"./top-tracks-details.component.scss\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class TopTracksDetailsComponent {\n    track = input.required<TopTrackLimited>();\n\n    isBelowMediumWidth = input.required<boolean>();\n\n    protected readonly ImageSizeOptions = ImageSizeOptions;\n}\n","<mat-card>\n    <mat-card-content class=\"details-content\">\n        @if (!isBelowMediumWidth()) {\n            <section class=\"details-content__section\">\n                <a\n                    [href]=\"track().album.external_urls.spotify\"\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\"\n                    aria-label=\"Listen on Spotify\"\n                >\n                    <app-item-image\n                        [image]=\"track().album.images.at(-2)!\"\n                        alt=\"album-cover\"\n                        [imageSize]=\"ImageSizeOptions.Medium\"\n                    />\n                </a>\n            </section>\n        }\n        <section class=\"details-content__section\">\n            <mat-chip-set class=\"mat-mdc-chip-set-stacked\">\n                <mat-chip\n                    class=\"album-detail\"\n                    [matTooltip]=\"track().album.name\"\n                >\n                    <mat-icon matChipAvatar>title</mat-icon>\n                    {{ track().album.name }}\n                </mat-chip>\n                <mat-chip class=\"album-detail\">\n                    <mat-icon matChipAvatar>album</mat-icon>\n                    Album type:\n                    {{\n                        track().album.album_type === \"EP\"\n                            ? track().album.album_type\n                            : (track().album.album_type | titlecase)\n                    }}\n                </mat-chip>\n                <mat-chip class=\"album-detail\">\n                    <mat-icon matChipAvatar>format_list_numbered</mat-icon>\n                    Number of tracks: {{ track().album.total_tracks }}\n                </mat-chip>\n                <mat-chip class=\"album-detail\">\n                    <mat-icon matChipAvatar>event</mat-icon>\n                    Release date: {{ track().album.release_date }}\n                </mat-chip>\n            </mat-chip-set>\n        </section>\n    </mat-card-content>\n</mat-card>\n","import {\n    animate,\n    state,\n    style,\n    transition,\n    trigger,\n} from \"@angular/animations\";\nimport { KeyValuePipe, NgStyle, TitleCasePipe } from \"@angular/common\";\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    computed,\n    inject,\n    input,\n    OnChanges,\n    OnInit,\n    signal,\n    ViewEncapsulation,\n} from \"@angular/core\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatRippleModule } from \"@angular/material/core\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatTableModule } from \"@angular/material/table\";\nimport { keepOrder } from \"@core/helpers\";\nimport { ItemImageComponent } from \"@lib/item-image/item-image.component\";\nimport { ImageSizeOptions } from \"@model/image.model\";\nimport {\n    TopArtistLimited,\n    TopItemsColumnsKeys,\n    TopItemsColumnsMappings,\n    TopItemsMappings,\n    TopItemsTypeExtended,\n} from \"@model/top-items.model\";\nimport { TopTracksDetailsComponent } from \"@routes/top-tracks/top-tracks-details/top-tracks-details.component\";\n\n@Component({\n    selector: \"app-base-table\",\n    standalone: true,\n    imports: [\n        ItemImageComponent,\n        KeyValuePipe,\n        MatButtonModule,\n        MatIconModule,\n        MatRippleModule,\n        MatTableModule,\n        NgStyle,\n        TitleCasePipe,\n        TopTracksDetailsComponent,\n    ],\n    providers: [TitleCasePipe],\n    templateUrl: \"./base-table.component.html\",\n    styleUrl: \"./base-table.component.scss\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n        trigger(\"detailExpand\", [\n            state(\"collapsed,void\", style({ height: \"0px\", minHeight: \"0\" })),\n            state(\"expanded\", style({ height: \"*\" })),\n            transition(\n                \"expanded <=> collapsed\",\n                animate(\"225ms cubic-bezier(0.4, 0.0, 0.2, 1)\"),\n            ),\n        ]),\n    ],\n    encapsulation: ViewEncapsulation.None,\n})\nexport class BaseTableComponent<T extends TopItemsTypeExtended>\n    implements OnChanges, OnInit {\n    items = input.required<TopItemsMappings[T][]>();\n    itemsType = input.required<T>();\n    columnsMappings = input.required<TopItemsColumnsMappings[T]>();\n\n    isBelowMediumWidth = input.required<boolean>();\n\n    protected readonly keepOrder = keepOrder;\n    protected readonly TopItemsColumnsKeys = TopItemsColumnsKeys;\n    protected readonly ImageSizeOptions = ImageSizeOptions;\n\n    protected expandedItem: TopItemsMappings[T] | null = null;\n\n    protected columns = computed(\n        () => Object.keys(this.columnsMappings()) as TopItemsColumnsKeys[],\n    );\n\n    protected columnsWithExpand = computed(() => [\n        ...this.columns(),\n        ...(this.itemsType() === \"tracks\" ? [TopItemsColumnsKeys.Expand] : []),\n    ]);\n\n    #genresMaxScore = signal(0).asReadonly();\n\n    readonly #titleCasePipe = inject(TitleCasePipe);\n\n    ngOnInit(): void {\n        if (this.itemsType() === \"genres\") {\n            this.#genresMaxScore = computed(\n                () => (this.items() as TopItemsMappings[\"genres\"][])[0].score,\n            );\n        }\n    }\n\n    ngOnChanges(): void {\n        this.expandedItem = null;\n    }\n\n    /**\n     * Converts an array of artists represented by objects into a comma separated string containing\n     * their names.\n     *\n     * @protected\n     * @param artists - The list of artists to be mapped to names.\n     * @returns A string containing comma separated artists names.\n     */\n    protected getArtistsNames(artists: TopArtistLimited[]): string {\n        return artists.map(({ name }) => name).join(\", \");\n    }\n\n    /**\n     * Converts an array of genres into a comma separated string containing their names, with each\n     * genre name being transformed to TitleCase. IF there are no genres to be converted, \"Unknown\"\n     * is returned instead.\n     *\n     * @protected\n     * @param genres - The list of genres to be converted into a string.\n     * @returns A string containing comma separated genres.\n     */\n    protected getGenresNames(genres: string[]): string {\n        return genres.length ?\n            genres\n                  .map((genre) => this.#titleCasePipe.transform(genre))\n                  .join(\", \") :\n            \"Unknown\";\n    }\n\n    /**\n     * Normalizes genre score based on the maximum score in the current array of genres.\n     *\n     * @protected\n     * @param score - Genre score to normalize.\n     * @returns A normalized genre score.\n     */\n    protected normalizeGenreScore(score: number): number {\n        return (score / (this.#genresMaxScore() + 2)) * 100;\n    }\n}\n","<div class=\"table-container\">\n    <table mat-table [dataSource]=\"items()\" multiTemplateDataRows class=\"table\">\n        @if (itemsType() === \"tracks\") {\n            @for (\n                column of columnsMappings() | keyvalue: keepOrder;\n                track column\n            ) {\n                <ng-container [matColumnDef]=\"column.key\">\n                    <th mat-header-cell *matHeaderCellDef>\n                        {{ column.value }}\n                    </th>\n                    @if (column.key === TopItemsColumnsKeys.Index) {\n                        <td mat-cell *matCellDef=\"let dataIndex = dataIndex\">\n                            {{ dataIndex + 1 }}.\n                        </td>\n                    } @else if (column.key === TopItemsColumnsKeys.Name) {\n                        @if (isBelowMediumWidth()) {\n                            <td mat-cell *matCellDef=\"let item\">\n                                <div class=\"item-info-container\">\n                                    <span\n                                        class=\"item-info-container__line item-info-container__line--bold\"\n                                        >{{ item.name }}</span\n                                    >\n                                    <span class=\"item-info-container__line\">{{\n                                        getArtistsNames(item.artists)\n                                    }}</span>\n                                </div>\n                            </td>\n                        } @else {\n                            <td mat-cell *matCellDef=\"let item\">\n                                {{ item.name }}\n                            </td>\n                        }\n                    } @else if (column.key === TopItemsColumnsKeys.Image) {\n                        <td mat-cell *matCellDef=\"let item\">\n                            <a\n                                [href]=\"item.external_urls.spotify\"\n                                target=\"_blank\"\n                                rel=\"noreferrer noopener\"\n                                (click)=\"$event.stopPropagation()\"\n                                aria-label=\"Listen on Spotify\"\n                            >\n                                <app-item-image\n                                    [image]=\"item.album.images.at(-1)\"\n                                    alt=\"Album cover\"\n                                    [imageSize]=\"ImageSizeOptions.Small\"\n                                />\n                            </a>\n                        </td>\n                    } @else if (column.key === TopItemsColumnsKeys.Artists) {\n                        <td mat-cell *matCellDef=\"let item\">\n                            {{ getArtistsNames(item.artists) }}\n                        </td>\n                    } @else if (column.key === TopItemsColumnsKeys.Link) {\n                        <td mat-cell *matCellDef=\"let item\">\n                            <a\n                                mat-icon-button\n                                [href]=\"item.external_urls.spotify\"\n                                target=\"_blank\"\n                                rel=\"noreferrer noopener\"\n                                (click)=\"$event.stopPropagation()\"\n                                aria-label=\"Listen on Spotify\"\n                            >\n                                <mat-icon>library_music</mat-icon>\n                            </a>\n                        </td>\n                    }\n                </ng-container>\n            }\n            <ng-container matColumnDef=\"expand\">\n                <th mat-header-cell *matHeaderCellDef aria-label=\"row actions\">\n                    &nbsp;\n                </th>\n                <td mat-cell *matCellDef=\"let item\">\n                    <button\n                        mat-icon-button\n                        aria-label=\"expand row\"\n                        (click)=\"\n                            expandedItem = expandedItem === item ? null : item;\n                            $event.stopPropagation()\n                        \"\n                    >\n                        @if (expandedItem === item) {\n                            <mat-icon>keyboard_arrow_up</mat-icon>\n                        } @else {\n                            <mat-icon>keyboard_arrow_down</mat-icon>\n                        }\n                    </button>\n                </td>\n            </ng-container>\n        } @else if (itemsType() === \"artists\") {\n            @for (\n                column of columnsMappings() | keyvalue: keepOrder;\n                track column\n            ) {\n                <ng-container [matColumnDef]=\"column.key\">\n                    <th mat-header-cell *matHeaderCellDef>\n                        {{ column.value }}\n                    </th>\n                    @if (column.key === TopItemsColumnsKeys.Index) {\n                        <td mat-cell *matCellDef=\"let dataIndex = dataIndex\">\n                            {{ dataIndex + 1 }}.\n                        </td>\n                    } @else if (column.key === TopItemsColumnsKeys.Name) {\n                        @if (isBelowMediumWidth()) {\n                            <td mat-cell *matCellDef=\"let item\">\n                                <div class=\"item-info-container\">\n                                    <span\n                                        class=\"item-info-container__line item-info-container__line--bold\"\n                                        >{{ item.name }}</span\n                                    >\n                                    <span class=\"item-info-container__line\"\n                                        >Genres:\n                                        {{ getGenresNames(item.genres) }}</span\n                                    >\n                                </div>\n                            </td>\n                        } @else {\n                            <td mat-cell *matCellDef=\"let item\">\n                                {{ item.name }}\n                            </td>\n                        }\n                    } @else if (column.key === TopItemsColumnsKeys.Image) {\n                        <td mat-cell *matCellDef=\"let item\">\n                            <a\n                                [href]=\"item.external_urls.spotify\"\n                                target=\"_blank\"\n                                rel=\"noreferrer noopener\"\n                                (click)=\"$event.stopPropagation()\"\n                                aria-label=\"Listen on Spotify\"\n                            >\n                                <app-item-image\n                                    [image]=\"item.images.at(-1)\"\n                                    alt=\"Artist picture\"\n                                    [imageSize]=\"ImageSizeOptions.Small\"\n                                />\n                            </a>\n                        </td>\n                    } @else if (column.key === TopItemsColumnsKeys.Genres) {\n                        <td mat-cell *matCellDef=\"let item\">\n                            Genres: {{ getGenresNames(item.genres) }}\n                        </td>\n                    } @else if (column.key === TopItemsColumnsKeys.Link) {\n                        <td mat-cell *matCellDef=\"let item\">\n                            <a\n                                mat-icon-button\n                                [href]=\"item.external_urls.spotify\"\n                                target=\"_blank\"\n                                rel=\"noreferrer noopener\"\n                                (click)=\"$event.stopPropagation()\"\n                                aria-label=\"Listen on Spotify\"\n                            >\n                                <mat-icon>library_music</mat-icon>\n                            </a>\n                        </td>\n                    }\n                </ng-container>\n            }\n        } @else if (itemsType() === \"genres\") {\n            @for (\n                column of columnsMappings() | keyvalue: keepOrder;\n                track column\n            ) {\n                <ng-container [matColumnDef]=\"column.key\">\n                    <th mat-header-cell *matHeaderCellDef>\n                        {{ column.value }}\n                    </th>\n                    @if (column.key === TopItemsColumnsKeys.Index) {\n                        <td mat-cell *matCellDef=\"let dataIndex = dataIndex\">\n                            {{ dataIndex + 1 }}.\n                        </td>\n                    } @else if (column.key === TopItemsColumnsKeys.Genre) {\n                        <td mat-cell *matCellDef=\"let item\">\n                            {{ item.name | titlecase }}\n                        </td>\n                    } @else if (column.key === TopItemsColumnsKeys.Score) {\n                        <td mat-cell *matCellDef=\"let item\">\n                            <div\n                                class=\"score-bar\"\n                                [ngStyle]=\"{\n                                    width:\n                                        normalizeGenreScore(item.score) + '%',\n                                }\"\n                            ></div>\n                        </td>\n                    }\n                </ng-container>\n            }\n        }\n\n        <ng-container matColumnDef=\"expandedDetail\">\n            <td\n                mat-cell\n                *matCellDef=\"let item\"\n                [attr.colspan]=\"columnsWithExpand().length\"\n            >\n                <div\n                    class=\"item-details\"\n                    [class.item-details--expanded]=\"expandedItem === item\"\n                    [@detailExpand]=\"\n                        expandedItem === item ? 'expanded' : 'collapsed'\n                    \"\n                >\n                    @if (expandedItem === item) {\n                        @if (itemsType() === \"tracks\") {\n                            <app-top-tracks-details\n                                [track]=\"item\"\n                                [isBelowMediumWidth]=\"isBelowMediumWidth()\"\n                            />\n                        }\n                    }\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"columnsWithExpand()\"></tr>\n        <tr\n            mat-row\n            *matRowDef=\"let item; columns: columnsWithExpand()\"\n            class=\"item-row\"\n            (click)=\"expandedItem = expandedItem === item ? null : item\"\n            (keydown)=\"$event.stopPropagation()\"\n        ></tr>\n        @if (itemsType() === \"tracks\") {\n            <tr\n                mat-row\n                *matRowDef=\"let row; columns: ['expandedDetail']\"\n                class=\"details-row\"\n            ></tr>\n        }\n    </table>\n</div>\n","import { KeyValuePipe } from \"@angular/common\";\nimport {\n    ChangeDetectionStrategy,\n    Component,\n    input,\n    ViewEncapsulation,\n} from \"@angular/core\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { RouterModule } from \"@angular/router\";\nimport { keepOrder } from \"@core/helpers\";\nimport { BaseTableComponent } from \"@lib/base-table-container/base-table/base-table.component\";\nimport {\n    TIME_RANGE_MAPPINGS,\n    TimeRangeOptions,\n    TopItemsColumnsMappings,\n    TopItemsMappings,\n    TopItemsTypeExtended,\n} from \"@model/top-items.model\";\n\n@Component({\n    selector: \"app-base-tabs-container\",\n    standalone: true,\n    imports: [\n        BaseTableComponent,\n        KeyValuePipe,\n        MatCardModule,\n        MatTabsModule,\n        RouterModule,\n    ],\n    templateUrl: \"./base-tabs-container.component.html\",\n    styleUrl: \"./base-tabs-container.component.scss\",\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    encapsulation: ViewEncapsulation.None,\n})\nexport class BaseTabsContainerComponent<T extends TopItemsTypeExtended> {\n    items = input.required<TopItemsMappings[T][]>();\n    itemsType = input.required<T>();\n    columnsMappings = input.required<TopItemsColumnsMappings[T]>();\n\n    currentTimeRange = input.required<TimeRangeOptions>();\n    isBelowMediumWidth = input.required<boolean>();\n\n    protected readonly TIME_RANGE_MAPPINGS = TIME_RANGE_MAPPINGS;\n    protected readonly keepOrder = keepOrder;\n}\n","<mat-card>\n    <nav mat-tab-nav-bar [tabPanel]=\"tabPanel\" disablePagination=\"true\">\n        @for (\n            mapping of TIME_RANGE_MAPPINGS | keyvalue: keepOrder;\n            track $index\n        ) {\n            <a\n                mat-tab-link\n                [routerLink]=\"'../' + mapping.key\"\n                [active]=\"currentTimeRange() === mapping.key\"\n            >\n                {{ mapping.value }}\n            </a>\n        }\n    </nav>\n    <mat-tab-nav-panel #tabPanel>\n        <app-base-table\n            [items]=\"items()\"\n            [itemsType]=\"itemsType()\"\n            [columnsMappings]=\"columnsMappings()\"\n            [isBelowMediumWidth]=\"isBelowMediumWidth()\"\n        />\n    </mat-tab-nav-panel>\n</mat-card>\n","import { HttpClient } from \"@angular/common/http\";\nimport { inject, Injectable } from \"@angular/core\";\nimport { environment } from \"@env/environment\";\nimport {\n    Album,\n    SimplifiedArtist,\n    TopArtist,\n    TopItems,\n    TopItemsParams,\n    TopItemsType,\n    TopTrack,\n} from \"@model/top-items.model\";\nimport { Observable } from \"rxjs\";\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class TopItemsHTTPService {\n    readonly #url = `${environment.apiBaseUrl}/me/top`;\n\n    readonly #httpClient = inject(HttpClient);\n\n    /**\n     * Fetches top items from the API based on the specified type and parameters.\n     *\n     * @param type - The type of top items to fetch. This determines the endpoint to which the HTTP request is made.\n     * @param params - Additional query parameters for the request, such as time range, limit and offset.\n     * @returns An observable that emits the fetched top items.\n     */\n    getTopItems$<\n        T extends TopArtist | TopTrack<Album, SimplifiedArtist>,\n        U extends TopItemsType,\n    >(type: U, params: TopItemsParams): Observable<TopItems<T>> {\n        return this.#httpClient.get<TopItems<T>>(`${this.#url}/${type}`, {\n            params,\n        });\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport {\n    Album,\n    AlbumLimited,\n    SimplifiedArtist,\n    SimplifiedArtistLimited,\n    TopArtist,\n    TopArtistLimited,\n    TopGenreLimited,\n    TopTrack,\n    TopTrackLimited,\n} from \"@model/top-items.model\";\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class TopItemsService {\n    /**\n     * Simplifies the `TopTrack` by transforming it to include only essential fields.\n     *\n     * @param track - The object to be converted.\n     * @returns An object containing a subset of properties from the original one.\n     */\n    convertTopTrackToLimited(\n        track: TopTrack<Album, SimplifiedArtist>,\n    ): TopTrackLimited {\n        const { album, external_urls, name, artists } = structuredClone(track);\n        return {\n            album: this.convertAlbumToLimited(album),\n            external_urls,\n            name,\n            artists: artists.map((artist) =>\n                this.convertSimplifiedArtistToLimited(artist),\n            ),\n        };\n    }\n\n    /**\n     * Simplifies the `Album` by transforming it to include only essential fields.\n     *\n     * @param album - The object to be converted.\n     * @returns An object containing a subset of properties from the original one.\n     */\n    convertAlbumToLimited(album: Album): AlbumLimited {\n        const {\n            external_urls,\n            name,\n            album_type,\n            total_tracks,\n            images,\n            release_date,\n        } = structuredClone(album);\n        return {\n            external_urls,\n            name,\n            album_type,\n            total_tracks,\n            images,\n            release_date,\n        };\n    }\n\n    /**\n     * Simplifies the `SimplifiedArtist` by transforming it to include only essential fields.\n     *\n     * @param artist - The object to be converted.\n     * @returns An object containing a subset of properties from the original one.\n     */\n    convertSimplifiedArtistToLimited(\n        artist: SimplifiedArtist,\n    ): SimplifiedArtistLimited {\n        const { external_urls, name } = structuredClone(artist);\n        return { external_urls, name };\n    }\n\n    /**\n     * Simplifies the `Artist` by transforming it to include only essential fields.\n     *\n     * @param artist - The object to be converted.\n     * @returns An object containing a subset of properties from the original one.\n     */\n    convertTopArtistToLimited(artist: TopArtist): TopArtistLimited {\n        const { external_urls, name, images, genres } = structuredClone(artist);\n        return { external_urls, name, images, genres };\n    }\n\n    /**\n     * Converts an array of `TopArtist` objects to `GenresLimited`.\n     *\n     * @param artist - The array of objects to be converted.\n     * @returns An array containing genres with their names and scores\n     */\n    convertTopArtistsToTopGenres(artists: TopArtist[]): TopGenreLimited[] {\n        return Array.from(\n            artists\n                .flatMap(({ genres }) => genres)\n                .reduce(\n                    (acc, curr) => acc.set(curr, (acc.get(curr) ?? 0) + 1),\n                    new Map<string, number>(),\n                ),\n        )\n            .map(([key, value]) => ({ name: key, score: value }))\n            .filter(({ score }) => score > 1)\n            .sort(({ score: scoreA }, { score: scoreB }) => scoreB - scoreA);\n    }\n}\n","import { computed, inject, Injectable, signal } from \"@angular/core\";\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\nimport { TopItemsHTTPService } from \"@api/top-items-http.service\";\nimport {\n    Album,\n    SimplifiedArtist,\n    TimeRangeOptions,\n    TopArtist,\n    TopArtistLimited,\n    TopGenreLimited,\n    TopItemsByTimeRange,\n    TopItemsState,\n    TopTrack,\n    TopTrackLimited,\n} from \"@model/top-items.model\";\nimport { TopItemsService } from \"@routes/top-items.service\";\nimport { EMPTY, map, Observable, of, Subject, switchMap, tap } from \"rxjs\";\n\n@Injectable({\n    providedIn: \"root\",\n})\nexport class TopItemsStateService {\n    readonly #topItemsHTTPService = inject(TopItemsHTTPService);\n    readonly #topItemsService = inject(TopItemsService);\n\n    readonly #topTracksState = signal<TopItemsState<TopTrackLimited>>({\n        itemsByTimeRange: {\n            [TimeRangeOptions.ShortTerm]: [],\n            [TimeRangeOptions.MediumTerm]: [],\n            [TimeRangeOptions.LongTerm]: [],\n        },\n        currentTimeRange: TimeRangeOptions.ShortTerm,\n    });\n\n    readonly #topArtistsState = signal<TopItemsState<TopArtistLimited>>({\n        itemsByTimeRange: {\n            [TimeRangeOptions.ShortTerm]: [],\n            [TimeRangeOptions.MediumTerm]: [],\n            [TimeRangeOptions.LongTerm]: [],\n        },\n        currentTimeRange: TimeRangeOptions.ShortTerm,\n    });\n\n    readonly #topGenresState = signal<TopItemsState<TopGenreLimited>>({\n        itemsByTimeRange: {\n            [TimeRangeOptions.ShortTerm]: [],\n            [TimeRangeOptions.MediumTerm]: [],\n            [TimeRangeOptions.LongTerm]: [],\n        },\n        currentTimeRange: TimeRangeOptions.ShortTerm,\n    });\n\n    readonly #topArtistsCacheState = signal<TopItemsByTimeRange<TopArtist>>({\n        [TimeRangeOptions.ShortTerm]: [],\n        [TimeRangeOptions.MediumTerm]: [],\n        [TimeRangeOptions.LongTerm]: [],\n    });\n\n    // #region selectors\n    topTracks = computed(\n        () =>\n            this.#topTracksState().itemsByTimeRange[\n                this.#topTracksState().currentTimeRange\n            ],\n    );\n\n    topTracksTimeRange = computed(\n        () => this.#topTracksState().currentTimeRange,\n    );\n\n    topArtists = computed(\n        () =>\n            this.#topArtistsState().itemsByTimeRange[\n                this.#topArtistsState().currentTimeRange\n            ],\n    );\n\n    topArtistsTimeRange = computed(\n        () => this.#topArtistsState().currentTimeRange,\n    );\n\n    topGenres = computed(\n        () =>\n            this.#topGenresState().itemsByTimeRange[\n                this.#topGenresState().currentTimeRange\n            ],\n    );\n\n    topGenresTimeRange = computed(\n        () => this.#topGenresState().currentTimeRange,\n    );\n    // #endregion\n\n    // #region sources\n    readonly #topTracksTimeRange$ = new Subject<TimeRangeOptions>();\n\n    readonly #topTracks$: Observable<TopTrackLimited[]> =\n        this.#topTracksTimeRange$.pipe(\n            switchMap((timeRange) => {\n                const topTracksByTimeRange =\n                    this.#topTracksState().itemsByTimeRange[timeRange];\n                if (topTracksByTimeRange.length) {\n                    return EMPTY;\n                }\n                return this.#topItemsHTTPService\n                    .getTopItems$<TopTrack<Album, SimplifiedArtist>, \"tracks\">(\n                        \"tracks\",\n                        {\n                            time_range: timeRange,\n                            limit: 50,\n                            offset: 0,\n                        },\n                    )\n                    .pipe(\n                        map(({ items }) =>\n                            items.map((item) =>\n                                this.#topItemsService.convertTopTrackToLimited(\n                                    item,\n                                ),\n                            ),\n                        ),\n                    );\n            }),\n        );\n\n    readonly #topArtistsTimeRange$ = new Subject<TimeRangeOptions>();\n\n    readonly #topArtists$: Observable<TopArtistLimited[]> =\n        this.#topArtistsTimeRange$.pipe(\n            switchMap((timeRange) => {\n                const topArtistsByTimeRange =\n                    this.#topArtistsState().itemsByTimeRange[timeRange];\n                if (topArtistsByTimeRange.length) {\n                    return EMPTY;\n                }\n                const topArtistsCacheByTimeRange =\n                    this.#topArtistsCacheState()[timeRange];\n                return topArtistsCacheByTimeRange.length ?\n                    of(topArtistsCacheByTimeRange).pipe(\n                          map((items) =>\n                              items.map((item) =>\n                                  this.#topItemsService.convertTopArtistToLimited(\n                                      item,\n                                  ),\n                              ),\n                          ),\n                      ) :\n                    this.#topItemsHTTPService\n                          .getTopItems$<TopArtist, \"artists\">(\"artists\", {\n                              time_range: timeRange,\n                              limit: 50,\n                              offset: 0,\n                          })\n                          .pipe(\n                              tap(({ items }) => {\n                                  this.#topArtistsCacheState.update(\n                                      (\n                                          state,\n                                      ): TopItemsByTimeRange<TopArtist> => ({\n                                          ...state,\n                                          [timeRange]: items,\n                                      }),\n                                  );\n                              }),\n                              map(({ items }) =>\n                                  items.map((item) =>\n                                      this.#topItemsService.convertTopArtistToLimited(\n                                          item,\n                                      ),\n                                  ),\n                              ),\n                          );\n            }),\n        );\n\n    readonly #topGenresTimeRange$ = new Subject<TimeRangeOptions>();\n\n    readonly #topGenres$ = this.#topGenresTimeRange$.pipe(\n        switchMap((timeRange) => {\n            const topGenresByTimeRange =\n                this.#topGenresState().itemsByTimeRange[timeRange];\n            if (topGenresByTimeRange.length) {\n                return EMPTY;\n            }\n            const topArtistsCacheByTimeRange =\n                this.#topArtistsCacheState()[timeRange];\n            return topArtistsCacheByTimeRange.length ?\n                of(topArtistsCacheByTimeRange).pipe(\n                      map((items) =>\n                          this.#topItemsService.convertTopArtistsToTopGenres(\n                              items,\n                          ),\n                      ),\n                  ) :\n                this.#topItemsHTTPService\n                      .getTopItems$<TopArtist, \"artists\">(\"artists\", {\n                          time_range: timeRange,\n                          limit: 50,\n                          offset: 0,\n                      })\n                      .pipe(\n                          tap(({ items }) => {\n                              this.#topArtistsCacheState.update(\n                                  (state): TopItemsByTimeRange<TopArtist> => ({\n                                      ...state,\n                                      [timeRange]: items,\n                                  }),\n                              );\n                          }),\n                          map(({ items }) =>\n                              this.#topItemsService.convertTopArtistsToTopGenres(\n                                  items,\n                              ),\n                          ),\n                      );\n        }),\n    );\n    // #endregion\n\n    constructor() {\n        // #region reducers\n        this.#topTracksTimeRange$\n            .pipe(takeUntilDestroyed())\n            .subscribe((timeRange) => {\n                this.#topTracksState.update(\n                    (state): TopItemsState<TopTrackLimited> => ({\n                        ...state,\n                        currentTimeRange: timeRange,\n                    }),\n                );\n            });\n\n        this.#topTracks$.pipe(takeUntilDestroyed()).subscribe((tracks) =>\n            this.#topTracksState.update(\n                (state): TopItemsState<TopTrackLimited> => ({\n                    ...state,\n                    itemsByTimeRange: {\n                        ...state.itemsByTimeRange,\n                        [state.currentTimeRange]: tracks,\n                    },\n                }),\n            ),\n        );\n\n        this.#topArtistsTimeRange$\n            .pipe(takeUntilDestroyed())\n            .subscribe((timeRange) => {\n                this.#topArtistsState.update(\n                    (state): TopItemsState<TopArtistLimited> => ({\n                        ...state,\n                        currentTimeRange: timeRange,\n                    }),\n                );\n            });\n\n        this.#topArtists$\n            .pipe(takeUntilDestroyed())\n            .subscribe((artists: TopArtistLimited[]) =>\n                this.#topArtistsState.update(\n                    (state): TopItemsState<TopArtistLimited> => ({\n                        ...state,\n                        itemsByTimeRange: {\n                            ...state.itemsByTimeRange,\n                            [state.currentTimeRange]: artists,\n                        },\n                    }),\n                ),\n            );\n\n        this.#topGenresTimeRange$\n            .pipe(takeUntilDestroyed())\n            .subscribe((timeRange) => {\n                this.#topGenresState.update(\n                    (state): TopItemsState<TopGenreLimited> => ({\n                        ...state,\n                        currentTimeRange: timeRange,\n                    }),\n                );\n            });\n\n        this.#topGenres$\n            .pipe(takeUntilDestroyed())\n            .subscribe((genres: TopGenreLimited[]) =>\n                this.#topGenresState.update(\n                    (state): TopItemsState<TopGenreLimited> => ({\n                        ...state,\n                        itemsByTimeRange: {\n                            ...state.itemsByTimeRange,\n                            [state.currentTimeRange]: genres,\n                        },\n                    }),\n                ),\n            );\n        // #endregion\n    }\n\n    /**\n     * Publishes a new time range to the `#topTracksTimeRange$` subject, updating the current time\n     * range for top tracks.\n     *\n     * @param timeRange - The new time range to be published.\n     */\n    publishTopTracksTimeRange(timeRange: TimeRangeOptions): void {\n        this.#topTracksTimeRange$.next(timeRange);\n    }\n\n    /**\n     * Publishes a new time range to the `#topArtistsTimeRange$` subject, updating the current time\n     * range for top artists.\n     *\n     * @param timeRange - The new time range to be published.\n     */\n    publishTopArtistsTimeRange(timeRange: TimeRangeOptions): void {\n        this.#topArtistsTimeRange$.next(timeRange);\n    }\n\n    /**\n     * Publishes a new time range to the `#topGenresTimeRange$` subject, updating the current time\n     * range for top genres.\n     *\n     * @param timeRange - The new time range to be published.\n     */\n    publishTopGenresTimeRange(timeRange: TimeRangeOptions): void {\n        this.#topGenresTimeRange$.next(timeRange);\n    }\n}\n"],"mappings":"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","names":["TimeRangeOptions","TimeRangeNames","TIME_RANGE_MAPPINGS","ShortTerm","MediumTerm","LongTerm","TopItemsRoutes","TopItemsColumnsKeys","TOP_TRACKS_COLUMNS_MAPPINGS","Index","Image","Name","Artists","Link","TOP_TRACKS_COLUMNS_MAPPINGS_FILTERED","TOP_ARTISTS_COLUMNS_MAPPINGS","Genres","TOP_ARTISTS_COLUMNS_MAPPINGS_FILTERED","TOP_GENRES_COLUMNS_MAPPINGS_FILTERED","Genre","Score","isAnEnum","enumObject","maybeEnum","Object","values","includes","timeRangeGuard","baseRoute","route","TimeRangeOptions","params","inject","Router","parseUrl","ShortTerm","keepOrder","SingleBoxSharedResizeObserver","_box","Subject","entries","target","Observable","observer","subscription","filter","entry","shareReplay","takeUntil","SharedResizeObserver","_SharedResizeObserver","inject","NgZone","options","box","t","ɵɵdefineInjectable","_c0","_c1","_c2","_c3","_c4","_c5","_c10","_c11","ACTIVE_CLASS","NO_TRANSITION_CLASS","MatInkBar","_items","item","element","correspondingItem","currentItem","domRect","InkBarItem","_InkBarItem","inject","ElementRef","newValue","previousIndicatorClientRect","currentClientRect","widthDelta","xPosition","documentNode","inkBarElement","inkBarContentElement","parentElement","t","ɵɵdefineDirective","booleanAttribute","ɵɵInputTransformsFeature","passiveEventListenerOptions","normalizePassiveListenerOptions","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","MatPaginatedTabHeader","_MatPaginatedTabHeader","v","value","_elementRef","_changeDetectorRef","_viewportRuler","_dir","_ngZone","_platform","_animationMode","Subject","EventEmitter","inject","SharedResizeObserver","Injector","fromEvent","takeUntil","dirChange","of","resize","debounceTime","viewportResize","realign","FocusKeyManager","afterNextRender","merge","newFocusIndex","EMPTY","startWith","switchMap","tabItems","Observable","observer","resizeObserver","entries","item","skip","filter","e","event","hasModifierKey","textContent","index","tabIndex","containerEl","scrollDistance","translateX","direction","viewLength","scrollAmount","labelIndex","selectedLabel","offsetLeft","offsetWidth","labelBeforePos","labelAfterPos","beforeVisiblePos","afterVisiblePos","scrollWidth","containerWidth","isEnabled","lengthOfTabList","selectedItem","selectedLabelWrapper","mouseEvent","timer","maxScrollDistance","distance","position","t","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","ViewportRuler","Directionality","NgZone","Platform","ANIMATION_MODULE_TYPE","ɵɵdefineDirective","booleanAttribute","numberAttribute","ɵɵInputTransformsFeature","MAT_TABS_CONFIG","InjectionToken","nextUniqueId","MatTabNav","_MatTabNav","MatPaginatedTabHeader","value","stringValue","classList","elementRef","dir","ngZone","changeDetectorRef","viewportRuler","platform","animationMode","defaultConfig","BehaviorSubject","MatInkBar","startWith","takeUntil","items","t","ɵɵdirectiveInject","ElementRef","Directionality","NgZone","ChangeDetectorRef","ViewportRuler","Platform","ANIMATION_MODULE_TYPE","MAT_TABS_CONFIG","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","MatTabLink","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","_c1","_c2","_c3","_c4","_c5","ɵɵattribute","ɵɵstyleProp","ɵɵclassProp","booleanAttribute","ɵɵInputTransformsFeature","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","_c10","_c0","_r1","ɵɵgetCurrentView","ɵɵprojectionDef","ɵɵelementStart","ɵɵlistener","ɵɵrestoreView","ɵɵresetView","$event","ɵɵelement","ɵɵelementEnd","ɵɵprojection","ɵɵproperty","ɵɵadvance","MatRipple","CdkObserveContent","_MatTabLink","InkBarItem","_tabNavBar","globalRippleOptions","tabIndex","_focusMonitor","Subject","fitInkBarToContent","event","MAT_RIPPLE_GLOBAL_OPTIONS","ɵɵinjectAttribute","FocusMonitor","numberAttribute","_c11","MatTabNavPanel","_MatTabNavPanel","MatTabsModule","_MatTabsModule","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","_c0","_c1","CdkTable_Conditional_2_Template","rf","ctx","ɵɵprojection","CdkTable_Conditional_3_Template","ɵɵelementStart","ɵɵelementContainer","ɵɵelementEnd","CdkTable_Conditional_4_Template","CDK_TABLE","InjectionToken","CdkCellDef","_CdkCellDef","template","t","ɵɵdirectiveInject","TemplateRef","ɵɵdefineDirective","CdkHeaderCellDef","_CdkHeaderCellDef","CdkFooterCellDef","_CdkFooterCellDef","CdkColumnDef","_CdkColumnDef","name","value","_table","hasStickyChanged","CDK_TABLE","rf","ctx","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","booleanAttribute","ɵɵProvidersFeature","ɵɵInputTransformsFeature","BaseCdkCell","columnDef","elementRef","CdkHeaderCell","_CdkHeaderCell","ElementRef","ɵɵInheritDefinitionFeature","CdkCell","_CdkCell","BaseCdkCell","columnDef","elementRef","role","t","ɵɵdirectiveInject","CdkColumnDef","ElementRef","ɵɵdefineDirective","ɵɵInheritDefinitionFeature","_Schedule","_COALESCED_STYLE_SCHEDULER","InjectionToken","_CoalescedStyleScheduler","__CoalescedStyleScheduler","_unusedNgZone","inject","NgZone","task","schedule","ɵɵinject","ɵɵdefineInjectable","BaseRowDef","_BaseRowDef","template","_differs","changes","columns","column","CdkHeaderRowDef","CdkFooterRowDef","t","ɵɵdirectiveInject","TemplateRef","IterableDiffers","ɵɵdefineDirective","ɵɵNgOnChangesFeature","_CdkHeaderRowDef","value","_table","hasStickyChanged","CDK_TABLE","booleanAttribute","ɵɵInputTransformsFeature","ɵɵInheritDefinitionFeature","_CdkFooterRowDef","CdkRowDef","_CdkRowDef","CdkCellOutlet","_CdkCellOutlet","_viewContainer","ViewContainerRef","CdkHeaderRow","_CdkHeaderRow","ɵɵdefineComponent","ɵɵStandaloneFeature","rf","ctx","ɵɵelementContainer","CdkRow","_CdkRow","t","ɵɵdefineComponent","ɵɵStandaloneFeature","rf","ctx","ɵɵelementContainer","CdkCellOutlet","CdkNoDataRow","_CdkNoDataRow","templateRef","ɵɵdirectiveInject","TemplateRef","ɵɵdefineDirective","STICKY_DIRECTIONS","StickyStyler","_isNativeHtmlTable","_stickCellCss","direction","_coalescedStyleScheduler","_isBrowser","_needsPositionStickyOnElement","_positionListener","rows","stickyDirections","elementsToClear","row","i","element","stickyStartStates","stickyEndStates","recalculateCellWidths","state","firstRow","numCells","cellWidths","startPositions","endPositions","lastStickyStart","firstStickyEnd","isRtl","start","end","cell","width","index","rowsToStick","stickyStates","position","states","stickyOffsets","stickyCellHeights","elementsToStick","rowIndex","stickyOffset","height","borderedRowIndex","offset","isBorderedRowIndex","tableElement","tfoot","dir","dirValue","isBorderElement","zIndexIncrements","zIndex","firstRowCells","widths","positions","nextPosition","STICKY_POSITIONING_LISTENER","InjectionToken","DataRowOutlet","_DataRowOutlet","viewContainer","elementRef","table","inject","CDK_TABLE","t","ɵɵdirectiveInject","ViewContainerRef","ElementRef","ɵɵdefineDirective","HeaderRowOutlet","_HeaderRowOutlet","FooterRowOutlet","_FooterRowOutlet","NoDataRowOutlet","_NoDataRowOutlet","CdkTable","_CdkTable","role","cellRole","fn","dataSource","value","_differs","_changeDetectorRef","_elementRef","_dir","_document","_platform","_viewRepeater","_coalescedStyleScheduler","_viewportRuler","_stickyPositioningListener","_unusedNgZone","Subject","EventEmitter","BehaviorSubject","inject","Injector","_i","dataRow","takeUntil","def","isDataSource","changes","viewContainer","record","_adjustedPreviousIndex","currentIndex","change","_ViewRepeaterOperation","rowView","afterNextRender","columnDef","rowDef","headerRowDef","footerRowDef","noDataRow","headerRows","thead","closestTableSection","stickyStates","footerRows","tfoot","dataRows","headerRow","i","rows","footerRow","rowDefsChanged","renderRows","prevCachedRenderRows","data","renderRowsForData","j","renderRow","cache","dataIndex","cachedRenderRows","mergeArrayAndSet","defaultRowDefs","columnsDiffReducer","acc","dataColumnsChanged","headerColumnsChanged","footerColumnsChanged","dataStream","isObservable","of","columnDefs","columnName","stickyStartStates","stickyEndStates","rowOutlet","renderedRows","viewRef","rowDefs","index","context","outlet","view","cellTemplate","CdkCellOutlet","renderIndex","count","columnId","column","stickyCheckReducer","d","direction","StickyStyler","items","item","shouldShow","container","rootNode","t","ɵɵdirectiveInject","IterableDiffers","ChangeDetectorRef","ElementRef","ɵɵinjectAttribute","Directionality","DOCUMENT","Platform","_VIEW_REPEATER_STRATEGY","_COALESCED_STYLE_SCHEDULER","ViewportRuler","STICKY_POSITIONING_LISTENER","NgZone","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","CdkNoDataRow","CdkColumnDef","CdkRowDef","CdkHeaderRowDef","CdkFooterRowDef","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵclassProp","booleanAttribute","ɵɵProvidersFeature","CDK_TABLE","_DisposeViewRepeaterStrategy","_CoalescedStyleScheduler","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","_c1","ɵɵprojectionDef","_c0","ɵɵprojection","ɵɵtemplate","CdkTable_Conditional_2_Template","CdkTable_Conditional_3_Template","CdkTable_Conditional_4_Template","ɵɵadvance","ɵɵconditional","HeaderRowOutlet","DataRowOutlet","NoDataRowOutlet","FooterRowOutlet","array","set","section","uppercaseSection","current","nodeName","CdkTableModule","_CdkTableModule","t","ɵɵdefineNgModule","ɵɵdefineInjector","ScrollingModule","_c0","_c1","MatTable_Conditional_2_Template","rf","ctx","ɵɵprojection","MatTable_Conditional_3_Template","ɵɵelementStart","ɵɵelementContainer","ɵɵelementEnd","MatTable_Conditional_4_Template","MatTable","_MatTable","CdkTable","ɵMatTable_BaseFactory","t","ɵɵgetInheritedFactory","ɵɵdefineComponent","rf","ctx","ɵɵclassProp","ɵɵProvidersFeature","CDK_TABLE","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","_VIEW_REPEATER_STRATEGY","_DisposeViewRepeaterStrategy","STICKY_POSITIONING_LISTENER","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","_c1","ɵɵprojectionDef","_c0","ɵɵprojection","ɵɵtemplate","MatTable_Conditional_2_Template","MatTable_Conditional_3_Template","MatTable_Conditional_4_Template","ɵɵadvance","ɵɵconditional","HeaderRowOutlet","DataRowOutlet","NoDataRowOutlet","FooterRowOutlet","MatCellDef","_MatCellDef","CdkCellDef","ɵMatCellDef_BaseFactory","ɵɵdefineDirective","MatHeaderCellDef","_MatHeaderCellDef","CdkHeaderCellDef","ɵMatHeaderCellDef_BaseFactory","MatColumnDef","_MatColumnDef","CdkColumnDef","name","ɵMatColumnDef_BaseFactory","t","ɵɵgetInheritedFactory","ɵɵdefineDirective","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","MatHeaderCell","_MatHeaderCell","CdkHeaderCell","ɵMatHeaderCell_BaseFactory","MatCell","_MatCell","CdkCell","ɵMatCell_BaseFactory","t","ɵɵgetInheritedFactory","ɵɵdefineDirective","ɵɵInheritDefinitionFeature","MatHeaderRowDef","_MatHeaderRowDef","CdkHeaderRowDef","ɵMatHeaderRowDef_BaseFactory","t","ɵɵgetInheritedFactory","ɵɵdefineDirective","booleanAttribute","ɵɵProvidersFeature","ɵɵInputTransformsFeature","ɵɵInheritDefinitionFeature","MatRowDef","_MatRowDef","CdkRowDef","ɵMatRowDef_BaseFactory","t","ɵɵgetInheritedFactory","ɵɵdefineDirective","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","MatHeaderRow","_MatHeaderRow","CdkHeaderRow","ɵMatHeaderRow_BaseFactory","ɵɵdefineComponent","ɵɵStandaloneFeature","rf","ctx","ɵɵelementContainer","CdkCellOutlet","MatRow","_MatRow","CdkRow","ɵMatRow_BaseFactory","t","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵProvidersFeature","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","rf","ctx","ɵɵelementContainer","CdkCellOutlet","MatTableModule","_MatTableModule","t","ɵɵdefineNgModule","ɵɵdefineInjector","MatCommonModule","CdkTableModule","ImageSizeOptions","IMAGE_SIZE_MAPPINGS","Small","Medium","Big","ItemImageComponent","constructor","image","input","required","alt","imageSize","IMAGE_SIZE_MAPPINGS","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵelement","ɵɵproperty","url","height","width","NgOptimizedImage","styles","changeDetection","_ItemImageComponent","_c0","_c1","MatChip_Conditional_3_Template","rf","ctx","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","MatChip_Conditional_7_Template","_c5","MAT_CHIPS_DEFAULT_OPTIONS","InjectionToken","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MAT_CHIP_REMOVE","MAT_CHIP","MatChipAction","_MatChipAction","value","_elementRef","_parentChip","event","t","ɵɵdirectiveInject","ElementRef","ɵɵdefineDirective","rf","ctx","ɵɵlistener","$event","ɵɵattribute","ɵɵclassProp","booleanAttribute","numberAttribute","ɵɵInputTransformsFeature","MatChipAvatar","_MatChipAvatar","ɵɵProvidersFeature","uid","MatChip","_MatChip","value","v","_changeDetectorRef","_elementRef","_ngZone","_focusMonitor","_document","animationMode","_globalRippleOptions","tabIndex","Subject","EventEmitter","inject","MatRippleLoader","Injector","element","merge","event","target","action","result","origin","hasFocus","afterNextRender","t","ɵɵdirectiveInject","ChangeDetectorRef","ElementRef","NgZone","FocusMonitor","DOCUMENT","ANIMATION_MODULE_TYPE","MAT_RIPPLE_GLOBAL_OPTIONS","ɵɵinjectAttribute","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MAT_CHIP_REMOVE","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵviewQuery","MatChipAction","ɵɵlistener","$event","ɵɵhostProperty","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","booleanAttribute","numberAttribute","ɵɵProvidersFeature","MAT_CHIP","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","_c1","ɵɵprojectionDef","_c0","ɵɵelement","ɵɵelementStart","ɵɵtemplate","MatChip_Conditional_3_Template","ɵɵprojection","ɵɵelementEnd","MatChip_Conditional_7_Template","ɵɵadvance","ɵɵproperty","ɵɵconditional","MatChipSet","_MatChipSet","chip","value","_elementRef","_changeDetectorRef","_dir","Subject","QueryList","event","index","previousTabIndex","mappingFunction","startWith","switchMap","merge","currentElement","chips","actions","action","FocusKeyManager","takeUntil","direction","chipIndex","newIndex","chipToFocus","t","ɵɵdirectiveInject","ElementRef","ChangeDetectorRef","Directionality","ɵɵdefineComponent","rf","ctx","dirIndex","ɵɵcontentQuery","MatChip","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵlistener","$event","ɵɵattribute","booleanAttribute","numberAttribute","ɵɵInputTransformsFeature","ɵɵStandaloneFeature","_c5","ɵɵprojectionDef","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","MatChipsModule","_MatChipsModule","t","ɵɵdefineNgModule","ɵɵdefineInjector","ErrorStateMatcher","MAT_CHIPS_DEFAULT_OPTIONS","MatCommonModule","MatRippleModule","scrollBehaviorSupported","supportsScrollBehavior","BlockScrollStrategy","_viewportRuler","document","root","coerceCssPixelValue","html","body","htmlStyle","bodyStyle","previousHtmlScrollBehavior","previousBodyScrollBehavior","viewport","CloseScrollStrategy","_scrollDispatcher","_ngZone","_viewportRuler","_config","overlayRef","stream","filter","scrollable","scrollPosition","NoopScrollStrategy","isElementScrolledOutsideView","element","scrollContainers","containerBounds","outsideAbove","outsideBelow","outsideLeft","outsideRight","isElementClippedByScrolling","scrollContainerRect","clippedAbove","clippedBelow","clippedLeft","clippedRight","RepositionScrollStrategy","throttle","overlayRect","width","height","ScrollStrategyOptions","_ScrollStrategyOptions","document","config","BlockScrollStrategy","t","ɵɵinject","ScrollDispatcher","ViewportRuler","NgZone","DOCUMENT","ɵɵdefineInjectable","OverlayConfig","configKeys","key","ConnectedOverlayPositionChange","connectionPair","scrollableViewProperties","BaseOverlayDispatcher","_BaseOverlayDispatcher","document","overlayRef","index","t","ɵɵinject","DOCUMENT","ɵɵdefineInjectable","OverlayKeyboardDispatcher","_OverlayKeyboardDispatcher","_ngZone","event","overlays","i","keydownEvents","NgZone","OverlayOutsideClickDispatcher","_OverlayOutsideClickDispatcher","_platform","_getEventTarget","target","origin","containsPierceShadowDom","outsidePointerEvents","body","Platform","parent","child","supportsShadowRoot","current","OverlayContainer","_OverlayContainer","containerClass","_isTestEnvironment","oppositePlatformContainers","container","OverlayRef","_portalOutlet","_host","_pane","_config","_keyboardDispatcher","_document","_location","_outsideClickDispatcher","_animationsDisabled","_injector","Subject","Subscription","untracked","afterRender","portal","attachResult","afterNextRender","detachmentResult","isAttached","strategy","sizeConfig","__spreadValues","dir","__spreadProps","classes","direction","style","coerceCssPixelValue","enablePointer","showingClass","backdropToDetach","element","cssClasses","isAdd","coerceArray","c","subscription","takeUntil","merge","scrollStrategy","backdrop","boundingBoxClass","cssUnitPattern","FlexibleConnectedPositionStrategy","connectedTo","_viewportRuler","_overlayContainer","originRect","overlayRect","viewportRect","containerRect","flexibleFits","fallback","pos","originPoint","overlayPoint","overlayFit","bestFit","bestScore","fit","score","extendStyles","lastPosition","scrollables","positions","margin","flexibleDimensions","growAfterOpen","canPush","isLocked","offset","selector","x","startX","endX","y","overlayStartX","overlayStartY","point","rawOverlayRect","viewport","position","overlay","getRoundedBoundingClientRect","offsetX","offsetY","leftOverflow","rightOverflow","topOverflow","bottomOverflow","visibleWidth","visibleHeight","visibleArea","availableHeight","availableWidth","minHeight","getPixelValue","minWidth","verticalFit","horizontalFit","start","scrollPosition","overflowRight","overflowBottom","overflowTop","overflowLeft","pushX","pushY","scrollVisibility","compareScrollVisibility","changeEvent","ConnectedOverlayPositionChange","elements","xOrigin","yOrigin","isRtl","height","top","bottom","smallestDistanceToViewportEdge","previousHeight","isBoundedByRightViewportEdge","isBoundedByLeftViewportEdge","width","left","right","previousWidth","boundingBoxRect","styles","maxHeight","maxWidth","hasExactPosition","hasFlexibleDimensions","config","transformString","documentHeight","horizontalStyleProperty","documentWidth","originBounds","overlayBounds","scrollContainerBounds","scrollable","isElementClippedByScrolling","isElementScrolledOutsideView","length","overflows","currentValue","currentOverflow","axis","cssClass","ElementRef","destination","source","key","input","value","units","clientRect","a","b","wrapperClass","GlobalPositionStrategy","overlayRef","config","value","offset","styles","parentStyles","width","height","maxWidth","maxHeight","shouldBeFlushHorizontally","shouldBeFlushVertically","xPosition","xOffset","isRtl","marginLeft","marginRight","justifyContent","parent","OverlayPositionBuilder","_OverlayPositionBuilder","_viewportRuler","_document","_platform","_overlayContainer","origin","FlexibleConnectedPositionStrategy","t","ɵɵinject","ViewportRuler","DOCUMENT","Platform","OverlayContainer","ɵɵdefineInjectable","nextUniqueId","Overlay","_Overlay","scrollStrategies","_componentFactoryResolver","_positionBuilder","_keyboardDispatcher","_injector","_ngZone","_directionality","_location","_outsideClickDispatcher","_animationsModuleType","host","pane","portalOutlet","overlayConfig","OverlayConfig","OverlayRef","EnvironmentInjector","ApplicationRef","DomPortalOutlet","ScrollStrategyOptions","ComponentFactoryResolver$1","OverlayKeyboardDispatcher","Injector","NgZone","Directionality","Location","OverlayOutsideClickDispatcher","ANIMATION_MODULE_TYPE","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","InjectionToken","overlay","inject","Overlay","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY_PROVIDER","CDK_CONNECTED_OVERLAY_SCROLL_STRATEGY","Overlay","OverlayModule","_OverlayModule","t","ɵɵdefineNgModule","ɵɵdefineInjector","BidiModule","PortalModule","ScrollingModule","_c0","SCROLL_THROTTLE_MS","MAT_TOOLTIP_SCROLL_STRATEGY","InjectionToken","overlay","inject","Overlay","SCROLL_THROTTLE_MS","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","MAT_TOOLTIP_DEFAULT_OPTIONS","PANEL_CLASS","passiveListenerOptions","normalizePassiveListenerOptions","MIN_VIEWPORT_TOOLTIP_THRESHOLD","UNBOUNDED_ANCHOR_GAP","MIN_HEIGHT","MAX_WIDTH","MatTooltip","_MatTooltip","value","coerceBooleanProperty","coerceNumberProperty","_overlay","_elementRef","_scrollDispatcher","_viewContainerRef","_ngZone","_platform","_ariaDescriber","_focusMonitor","scrollStrategy","_dir","_defaultOptions","_document","TooltipComponent","Subject","inject","Injector","takeUntil","origin","nativeElement","event","listener","delay","overlayRef","ComponentPortal","instance","existingStrategy","ElementRef","scrollableAncestors","strategy","change","hasModifierKey","position","overlay","__spreadValues","offset","isLtr","originPosition","x","y","overlayPosition","afterNextRender","tooltipClass","connectionPair","overlayY","originX","originY","newPosition","classPrefix","point","touch","DEFAULT_LONGPRESS_DELAY","exitListeners","newTarget","touchendListener","listeners","elementUnderPointer","element","gestures","style","t","ɵɵdirectiveInject","Overlay","ScrollDispatcher","ViewContainerRef","NgZone","Platform","AriaDescriber","FocusMonitor","MAT_TOOLTIP_SCROLL_STRATEGY","Directionality","MAT_TOOLTIP_DEFAULT_OPTIONS","DOCUMENT","ɵɵdefineDirective","rf","ctx","ɵɵclassProp","_TooltipComponent","_changeDetectorRef","animationMode","relatedTarget","rect","animationName","toVisible","isVisible","tooltip","showClass","hideClass","styles","ChangeDetectorRef","ANIMATION_MODULE_TYPE","ɵɵdefineComponent","ɵɵviewQuery","_c0","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵlistener","$event","ɵɵstyleProp","ɵɵStandaloneFeature","_r1","ɵɵgetCurrentView","ɵɵelementStart","ɵɵrestoreView","ɵɵresetView","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate","NgClass","MatTooltipModule","_MatTooltipModule","t","ɵɵdefineNgModule","ɵɵdefineInjector","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","A11yModule","CommonModule","OverlayModule","MatCommonModule","CdkScrollableModule","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ctx_r0","track","album","external_urls","spotify","ɵɵsanitizeUrl","images","at","ImageSizeOptions","Medium","TopTracksDetailsComponent","constructor","input","required","isBelowMediumWidth","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵtemplate","TopTracksDetailsComponent_Conditional_2_Template","ɵɵtext","ɵɵconditional","name","ɵɵtextInterpolate1","album_type","ɵɵpipeBind1","total_tracks","release_date","ItemImageComponent","MatCardModule","MatCard","MatCardContent","MatChipsModule","MatChip","MatChipAvatar","MatChipSet","MatIconModule","MatIcon","MatTooltipModule","MatTooltip","TitleCasePipe","styles","encapsulation","changeDetection","_TopTracksDetailsComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","column_r1","value","dataIndex_r2","ɵɵtemplate","BaseTableComponent_Conditional_2_For_1_Conditional_2_td_0_Template","ɵɵtextInterpolate","item_r3","name","ctx_r3","getArtistsNames","artists","BaseTableComponent_Conditional_2_For_1_Conditional_3_Conditional_0_td_0_Template","item_r5","BaseTableComponent_Conditional_2_For_1_Conditional_3_Conditional_1_td_0_Template","BaseTableComponent_Conditional_2_For_1_Conditional_3_Conditional_0_Template","BaseTableComponent_Conditional_2_For_1_Conditional_3_Conditional_1_Template","ɵɵconditional","isBelowMediumWidth","ɵɵlistener","$event","i0","ɵɵrestoreView","_r6","ɵɵresetView","stopPropagation","ɵɵelement","ɵɵproperty","item_r7","external_urls","spotify","ɵɵsanitizeUrl","album","images","at","ImageSizeOptions","Small","BaseTableComponent_Conditional_2_For_1_Conditional_4_td_0_Template","item_r8","BaseTableComponent_Conditional_2_For_1_Conditional_5_td_0_Template","_r9","item_r10","BaseTableComponent_Conditional_2_For_1_Conditional_6_td_0_Template","ɵɵelementContainerStart","BaseTableComponent_Conditional_2_For_1_th_1_Template","BaseTableComponent_Conditional_2_For_1_Conditional_2_Template","BaseTableComponent_Conditional_2_For_1_Conditional_3_Template","BaseTableComponent_Conditional_2_For_1_Conditional_4_Template","BaseTableComponent_Conditional_2_For_1_Conditional_5_Template","BaseTableComponent_Conditional_2_For_1_Conditional_6_Template","key","TopItemsColumnsKeys","Index","Name","Image","Artists","Link","item_r12","_r11","$implicit","ɵɵnextContext","expandedItem","BaseTableComponent_Conditional_2_td_5_Conditional_2_Template","BaseTableComponent_Conditional_2_td_5_Conditional_3_Template","ɵɵrepeaterCreate","BaseTableComponent_Conditional_2_For_1_Template","ɵɵrepeaterTrackByIdentity","BaseTableComponent_Conditional_2_th_4_Template","BaseTableComponent_Conditional_2_td_5_Template","ɵɵrepeater","ɵɵpipeBind2","columnsMappings","keepOrder","column_r13","dataIndex_r14","BaseTableComponent_Conditional_3_For_1_Conditional_2_td_0_Template","item_r15","getGenresNames","genres","BaseTableComponent_Conditional_3_For_1_Conditional_3_Conditional_0_td_0_Template","item_r16","BaseTableComponent_Conditional_3_For_1_Conditional_3_Conditional_1_td_0_Template","BaseTableComponent_Conditional_3_For_1_Conditional_3_Conditional_0_Template","BaseTableComponent_Conditional_3_For_1_Conditional_3_Conditional_1_Template","_r17","item_r18","BaseTableComponent_Conditional_3_For_1_Conditional_4_td_0_Template","item_r19","BaseTableComponent_Conditional_3_For_1_Conditional_5_td_0_Template","_r20","item_r21","BaseTableComponent_Conditional_3_For_1_Conditional_6_td_0_Template","BaseTableComponent_Conditional_3_For_1_th_1_Template","BaseTableComponent_Conditional_3_For_1_Conditional_2_Template","BaseTableComponent_Conditional_3_For_1_Conditional_3_Template","BaseTableComponent_Conditional_3_For_1_Conditional_4_Template","BaseTableComponent_Conditional_3_For_1_Conditional_5_Template","BaseTableComponent_Conditional_3_For_1_Conditional_6_Template","Genres","BaseTableComponent_Conditional_3_For_1_Template","column_r22","dataIndex_r23","BaseTableComponent_Conditional_4_For_1_Conditional_2_td_0_Template","ɵɵpipeBind1","item_r24","BaseTableComponent_Conditional_4_For_1_Conditional_3_td_0_Template","ɵɵpureFunction1","_c0","normalizeGenreScore","item_r25","score","BaseTableComponent_Conditional_4_For_1_Conditional_4_td_0_Template","BaseTableComponent_Conditional_4_For_1_th_1_Template","BaseTableComponent_Conditional_4_For_1_Conditional_2_Template","BaseTableComponent_Conditional_4_For_1_Conditional_3_Template","BaseTableComponent_Conditional_4_For_1_Conditional_4_Template","Genre","Score","BaseTableComponent_Conditional_4_For_1_Template","item_r26","BaseTableComponent_td_6_Conditional_2_Conditional_0_Template","itemsType","BaseTableComponent_td_6_Conditional_2_Template","ɵɵclassProp","item_r28","_r27","BaseTableComponent_Conditional_9_tr_0_Template","ɵɵpureFunction0","_c1","BaseTableComponent","_genresMaxScore","_titleCasePipe","constructor","__privateAdd","items","input","required","columns","computed","Object","keys","columnsWithExpand","Expand","__privateSet","signal","asReadonly","inject","TitleCasePipe","ngOnInit","ngOnChanges","map","join","length","genre","__privateGet","transform","selectors","inputs","standalone","features","ɵɵProvidersFeature","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","BaseTableComponent_Conditional_2_Template","BaseTableComponent_Conditional_3_Template","BaseTableComponent_Conditional_4_Template","BaseTableComponent_td_6_Template","BaseTableComponent_tr_7_Template","BaseTableComponent_tr_8_Template","BaseTableComponent_Conditional_9_Template","ItemImageComponent","KeyValuePipe","MatButtonModule","MatIconAnchor","MatIconButton","MatIconModule","MatIcon","MatRippleModule","MatTableModule","MatTable","MatHeaderCellDef","MatHeaderRowDef","MatColumnDef","MatCellDef","MatRowDef","MatHeaderCell","MatCell","MatHeaderRow","MatRow","NgStyle","TopTracksDetailsComponent","styles","encapsulation","data","animation","trigger","state","style","height","minHeight","transition","animate","changeDetection","_BaseTableComponent","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","mapping_r1","key","ctx_r1","currentTimeRange","ɵɵadvance","ɵɵtextInterpolate1","value","BaseTabsContainerComponent","constructor","items","input","required","itemsType","columnsMappings","isBelowMediumWidth","TIME_RANGE_MAPPINGS","keepOrder","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵrepeaterCreate","BaseTabsContainerComponent_For_3_Template","ɵɵrepeaterTrackByIndex","ɵɵelement","tabPanel_r3","ɵɵrepeater","ɵɵpipeBind2","BaseTableComponent","KeyValuePipe","MatCardModule","MatCard","MatTabsModule","MatTabNav","MatTabNavPanel","MatTabLink","RouterModule","RouterLink","styles","encapsulation","changeDetection","_BaseTabsContainerComponent","TopItemsHTTPService","_url","_httpClient","__privateAdd","environment","apiBaseUrl","inject","HttpClient","getTopItems$","type","params","__privateGet","get","factory","ɵfac","providedIn","_TopItemsHTTPService","TopItemsService","convertTopTrackToLimited","track","album","external_urls","name","artists","structuredClone","convertAlbumToLimited","map","artist","convertSimplifiedArtistToLimited","album_type","total_tracks","images","release_date","convertTopArtistToLimited","genres","convertTopArtistsToTopGenres","Array","from","flatMap","reduce","acc","curr","set","get","Map","key","value","score","filter","sort","scoreA","scoreB","factory","ɵfac","providedIn","_TopItemsService","TopItemsStateService","_topItemsHTTPService","_topItemsService","_topTracksState","_topArtistsState","_topGenresState","_topArtistsCacheState","_topTracksTimeRange$","_topTracks$","_topArtistsTimeRange$","_topArtists$","_topGenresTimeRange$","_topGenres$","constructor","__privateAdd","__privateSet","inject","TopItemsHTTPService","TopItemsService","signal","itemsByTimeRange","TimeRangeOptions","ShortTerm","MediumTerm","LongTerm","currentTimeRange","topTracks","computed","__privateGet","topTracksTimeRange","topArtists","topArtistsTimeRange","topGenres","topGenresTimeRange","Subject","pipe","switchMap","timeRange","length","EMPTY","getTopItems$","time_range","limit","offset","map","items","item","convertTopTrackToLimited","topArtistsCacheByTimeRange","of","convertTopArtistToLimited","tap","update","state","__spreadProps","__spreadValues","convertTopArtistsToTopGenres","takeUntilDestroyed","subscribe","tracks","artists","genres","publishTopTracksTimeRange","next","publishTopArtistsTimeRange","publishTopGenresTimeRange","factory","ɵfac","providedIn","_TopItemsStateService"],"x_google_ignoreList":[2,3,4,5,9,10,11]}